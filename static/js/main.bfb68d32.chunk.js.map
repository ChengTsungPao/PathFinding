{"version":3,"sources":["Frontend/HeaderHelper/Logo.js","Frontend/TableHelper/TableIndex.js","Core/index.js","HOC/Colored.js","Frontend/TableHelper/SetTable.js","Frontend/TableHelper/Animation.js","Core/Queue.js","Core/Distance.js","Backend/Bfs.js","Frontend/TableHelper/UpdateTable.js","Frontend/TableHelper/WhichComp.js","Frontend/TableHelper/ButtonEvent.js","Frontend/HeaderHelper/DropdownAlgorithm.js","Backend/Simple_Stair_Pattern.js","Frontend/HeaderHelper/DropdownMaze.js","Frontend/HeaderHelper/NavLink.js","HOC/Colored_AddButton.js","Frontend/HeaderHelper/NavAddBomb.js","Core/IsMount.js","Frontend/HeaderHelper/NavButton.js","Frontend/HeaderHelper/NavClearBoard.js","Frontend/HeaderHelper/DropdownSpeed.js","Frontend/Header.js","Frontend/TableHelper/MouseEvent.js","Frontend/TableHelper/TableUI.js","Frontend/Table.js","Frontend/HeaderHelper/Info.js","Frontend/HeaderHelper/AlgorithmDescriptor.js","Frontend/HeaderHelper/IntroductionModal.js","App.js","reportWebVitals.js","index.js"],"names":["logo","Navbar","Brand","href","className","src","process","width","height","variant","alt","tableVar","rowSize","Math","floor","window","screen","availHeight","colSize","availWidth","size","id","newId","componentKind","touchContext","createContext","touchInitial","start","end","bomb","touchReducer","state","action","under","moveContext","moveReducer","updateContext","updateReducer","position","wall","sysStatusContext","React","initialsysStatus","sysStatusReducer","bombContext","bombInitial","bombReducer","speedContext","speedInitial","speedReducer","algorithmContext","algorithmReducer","Colored","sysStatus","useContext","useState","isHover","setIsHover","setClassName","get","setTable","index","kind","document","getElementById","toString","pos","Animation","arr","speed","count","myCallbackFunction","arrAnimation","setInterval","length","clearInterval","name","Queue","this","queue","val","push","isEmpty","shift","Distance","dict","max_d","d","max","endPos","shortest","x","y","visited","Set","add","curD","Infinity","curX","curY","has","unshift","BFS","times","retSearchPath","retShortestPath","i","searchPath","distance","startPos","set","append","getLength","node","popleft","nextD","pop","getShortestPath","concat","UpdateTable","Start","ClearPath","algorithm","WhichComponent","touch","type","rKind","ButtonEvent","update","search","path","j","console","log","searchAnimation","SearchAnimation","setTimeout","PathAnimation","event","Addbomb","RemoveBomb","ClearWalls","ClearBoard","CreateMaze","maze","MazeAnimation","DropdownAlgorithm","algoContext","toggleHandler","buttonEvent","Nav","Item","NavDropdown","xs","title","onSelect","eventKey","DropdownAlgorithmHandler","onMouseEnter","onMouseLeave","Simple_Stair_Pattern","walls","towardUp","DropdownMaze","alert","NavLink","names","handlers","whichHandler","setWhichHandler","Link","onClick","preWhichHandler","algoStatus","NavAddBomb","isMount","useRef","useEffect","current","IsMount","NavButton","buttonName","setButtonName","myVariant","setMyVariant","algoName","Button","NavClearBoard","DropdownSpeed","setTitle","Header","collapseOnSelect","expand","bg","Logo","Toggle","aria-controls","Collapse","MouseEvent","move","MouseDownHandler","e","preventDefault","target","whichComponent","MouseUpHandler","OnMouseEnterHanlder","whichOldComponent","whichNewComponent","TableUI","row","Array","from","keys","col","mouesEvent","createTable","map","rowIndex","colIndex","onMouseUp","onMouseDown","align","border","cellSpacing","Table","Spinner","animation","Info","bannedBomb","setBannedBomb","bannedBFSDFS","setBannedBFSDFS","AlgorithmDescriptor","algorithmName","setAlgorithmName","discription1","setDiscription1","discription2","setDiscription2","d1","d2","IntroductionModal","pages","setPages","show","setShow","text","1","2","3","Modal","backdrop","centered","Body","Footer","prePage","App","useReducer","curAlgorithm","setCurAlgorithm","curSysStatus","setCurSysStatus","curBomb","setCurBomb","curSpeed","setCurSpeed","setTouch","setMove","setUpdate","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.bfb68d32.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\n\r\nfunction logo() {\r\n    return (\r\n        <Navbar.Brand href=\"/PathingFinding/\" className='Navbar-logo'>\r\n            <img\r\n                src={process.env.PUBLIC_URL + '/logo.png'} // 取得public資料夾路徑\r\n                width=\"50\"\r\n                height=\"50\"\r\n                className='d-inline-block'\r\n                variant='test'\r\n                alt='Logo'\r\n            /> {' '}\r\n                    Path-Finding\r\n        </Navbar.Brand>\r\n    )\r\n}\r\n\r\nexport default logo\r\n","import { createContext } from 'react'\n\n\nconst size = 25\n\nexport const tableVar = {\n    rowSize: Math.floor(window.screen.availHeight / size) - 12, // Math.floor((window.screen.height - document.getElementById(\"navbar\").clientHeight) / 30)\n    colSize: Math.floor(window.screen.availWidth / size), \n    size: size,\n    id: \"0\",\n    newId: \"0\"\n}\n\nexport const componentKind =  {wall: \"wall\", bomb: \"bomb\", start: \"start\", end: \"end\", background: \"background\", search: \"search\", searchFinal: \"searchFinal\", searchBomb: \"searchBomb\", searchBombFinal: \"searchBombFinal\", path: \"path\", pathFinal: \"pathFinal\"}\n\n// touch status\nexport const touchContext = createContext()\nexport const touchInitial = {start: componentKind.background, end: componentKind.background, bomb: componentKind.background}\nexport const touchReducer = (state, action) => {\n    switch (action.componentKind) {\n        case componentKind.start:\n            return {...state, start: action.under}\n        case componentKind.end:\n            return {...state, end: action.under}\n        case componentKind.bomb:\n            return {...state, bomb: action.under}\n        default:\n            return touchInitial\n    }\n}\n\n// move component\nexport const moveContext = createContext()\nexport const moveInitial = \"\"\nexport const moveReducer = (state, action) => {\n    switch (action) {\n        case componentKind.start:\n            return action\n        case componentKind.end:\n            return action\n        case componentKind.bomb:\n            return action\n        case componentKind.wall:\n            return action\n        default:\n            return moveInitial\n    }\n}\n\n// result update status\nexport const updateContext = createContext()\nexport const updateInitial = false\nexport const updateReducer = (state, action) => {\n    switch (action) {\n        case \"True\":\n            return true\n        case \"False\":\n            return false\n        default:\n            return updateInitial\n    }\n} \n\n","import React from 'react'\r\nimport { tableVar } from '../Frontend/TableHelper/TableIndex'\r\n\r\n// component position\r\nexport var position = {\r\n    start: [Math.floor(tableVar.rowSize / 2), Math.floor(tableVar.colSize / 4)],\r\n    end: [Math.floor(tableVar.rowSize / 2), tableVar.colSize - Math.floor(tableVar.colSize / 4)],\r\n    bomb: false,\r\n    wall: [],\r\n    rowSize: tableVar.rowSize,\r\n    colSize: tableVar.colSize\r\n}\r\n\r\n\r\n// 目前系統狀態\r\nexport const sysStatusContext = React.createContext();\r\nexport const initialsysStatus = \"LOADING\";\r\nexport const sysStatusReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'IDLE':\r\n            return 'IDLE';\r\n        case 'RUNNING':\r\n            return 'RUNNING';\r\n        case 'LOADING':\r\n            return 'LOADING';\r\n        default:\r\n            return initialsysStatus;\r\n    }\r\n}\r\n\r\n// Bomb status\r\nexport const bombContext = React.createContext();\r\nexport const bombInitial = false;\r\nexport const bombReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'True':\r\n            return true;\r\n        case 'False':\r\n            return false;\r\n        default:\r\n            return bombInitial\r\n    }\r\n}\r\n\r\n// Speed\r\nexport const speedContext = React.createContext();\r\nexport const speedInitial = [\"average\", 1000];\r\nexport const speedReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'Fast':\r\n            return [\"Fast\", 500];\r\n        case 'Average':\r\n            return [\"Average\", 1000];\r\n        case 'Slow':\r\n            return [\"Slow\", 2000];\r\n        default:\r\n            return bombInitial\r\n    }\r\n}\r\n\r\n// 目前系統是哪種演算法\r\nexport const algorithmContext = React.createContext();\r\nexport const initialAlgorithm = \"\";\r\nexport const algorithmReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'Algorithm_Dijkstra':\r\n            return 'Algorithm_Dijkstra';\r\n        case 'Algorithm_APlus':\r\n            return 'Algorithm_APlus';\r\n        case \"Algorithm_Greedy_Best_First\":\r\n            return 'Algorithm_Greedy_Best_First';\r\n        case \"Algorithm_Swarm\":\r\n            return 'Algorithm_Swarm';\r\n        case \"Algorithm_Convergent_Swarm\":\r\n            return 'Algorithm_Convergent_Swarm';\r\n        case \"Algorithm_Bidrectional_Swarm\":\r\n            return 'Algorithm_Bidrectional_Swarm';\r\n        case \"Algorithm_Breadth_First\":\r\n            return 'Algorithm_Breadth_First';\r\n        case \"Algorithm_Depth_First\":\r\n            return 'Algorithm_Depth_First';\r\n        default:\r\n            return initialAlgorithm;\r\n    }\r\n}","import { useState, useContext } from 'react';\nimport { sysStatusContext } from '../Core';\nimport '../App.scss';\n\nconst Colored = () => {\n    const sysStatus = useContext(sysStatusContext);\n    const [isHover, setIsHover] = useState(false);\n    const [className, setClassName] = useState(\"nav-link-default\");\n\n    const toggleHandler = () => {\n        if (isHover) {\n            setClassName(\"nav-link-default\");\n            setIsHover(false);\n        } else {\n            if (sysStatus.get !== \"IDLE\") {\n                setClassName(\"nav-link-red\");\n            } else {\n                setClassName(\"nav-link-green\");\n            }\n            setIsHover(true);\n        }\n    }\n\n    return [className, toggleHandler];\n}\n\nexport default Colored\n","import { componentKind, tableVar } from './TableIndex'\nimport { position } from '../../Core/index'\n\n\nexport function setTable(index, kind){\n    document.getElementById(index.toString()).className = kind\n    const pos = [Math.floor(index / tableVar.colSize), index % tableVar.colSize]\n\n    if(position.wall[pos]){\n        delete position.wall[pos]\n    }\n\n    if(kind === componentKind.wall){\n        position.wall[pos] = true\n    }else if(kind === componentKind.start){\n        position.start = pos\n    }else if(kind === componentKind.end){\n        position.end = pos\n    }else if(kind === componentKind.bomb){\n        position.bomb = pos\n    }else if(kind === componentKind.background){\n        if(position.bomb[0] === pos[0] && position.bomb[1] === pos[1]){\n            position.bomb = false\n        }\n    }\n\n    // console.log(position)\n\n}","import { tableVar, componentKind } from './TableIndex'\nimport { setTable } from './SetTable'\n\n\nexport function Animation(arr, speed, count, kind, myCallbackFunction = null) { \n    const arrAnimation = setInterval(() => {\n        if(count === arr.length){\n            if (myCallbackFunction !== null){\n                myCallbackFunction();\n            }\n            clearInterval(arrAnimation);\n        }else{\n            const index = arr[count][0] * tableVar.colSize + arr[count][1]\n            const name = document.getElementById(index.toString()).className\n            if(name === componentKind.background || name === componentKind.search){\n                setTable(index, kind)\n            }\n        }\n        count += 1\n    }, speed / arr.length)\n}\n\nexport function SearchAnimation(search, speed, count) { \n    const searchAnimation = setInterval(() => {\n        if(count === search.length - 1){\n            clearInterval(searchAnimation)\n        }\n        Animation(search[count], speed, 0, componentKind.search)\n        count += 1\n    }, speed)\n    \n}\n\nexport function PathAnimation(path, speed, count, myCallbackFunction = null) { \n    Animation(path, speed, count, componentKind.path, myCallbackFunction)\n}\n\nexport function MazeAnimation(maze, speed, count){\n    Animation(maze, speed, count, componentKind.wall)\n}","class Queue {\n    constructor() {\n        this.queue = [];\n    }\n\n    append(val) {\n        this.queue.push(val);\n    }\n\n    popleft() {\n        if (this.isEmpty()) return -1;\n        return this.queue.shift();\n    }\n\n    isEmpty() {\n        return this.queue.length === 0;\n    }\n\n    getLength() {\n        return this.queue.length;\n    }\n}\n\nexport default Queue;","class Distance {\n    constructor() {\n        this.dict = {};\n        this.max_d = 0;\n    }\n\n    // pos=[x, y], d=距離\n    set(pos, d) {\n        this.dict[pos] = d;\n        this.max_d = Math.max(this.max_d, d);\n    }\n\n    // 取得距離\n    get(pos) {\n        if (pos in this.dict) {\n            return this.dict[pos];\n        } else {\n            return -1;\n        }\n    }\n\n    // 從end開始找尋附近四周圍，第一個 \"有被找過的\" 且 \"距離最小的\"的點，並回傳一個array\n    getShortestPath(endPos) {\n        if (!(endPos in this.dict)) return []; // 若終點沒被找過，就回傳空值\n\n        var shortest = [endPos];\n        var x = endPos[0];\n        var y = endPos[1];\n        var visited = new Set();\n\n        visited.add(endPos.toString());\n        while (this.max_d > 0) {\n            var curD = Infinity;\n            var curX = x;\n            var curY = y;\n\n            // up\n            if ([x - 1, y] in this.dict && !(visited.has([x - 1, y].toString()))) {\n                if (this.dict[[x - 1, y]] < curD) {\n                    curX = x - 1;\n                    curY = y;\n                    curD = this.dict[[x - 1, y]];\n                }\n                visited.add([x - 1, y].toString());\n            }\n\n            // right\n            if ([x, y + 1] in this.dict && !(visited.has([x, y + 1].toString()))) {\n                if (this.dict[[x, y + 1]] < curD) {\n                    curX = x;\n                    curY = y + 1;\n                    curD = this.dict[[x, y + 1]];\n                }\n                visited.add([x, y + 1].toString());\n            }\n\n            // down\n            if ([x + 1, y] in this.dict && !(visited.has([x + 1, y].toString()))) {\n                if (this.dict[[x + 1, y]] < curD) {\n                    curX = x + 1;\n                    curY = y;\n                    curD = this.dict[[x + 1, y]];\n                }\n                visited.add([x + 1, y].toString());\n            }\n\n            // up\n            if ([x, y - 1] in this.dict && !(visited.has([x, y - 1].toString()))) {\n                if (this.dict[[x, y - 1]] < curD) {\n                    curX = x;\n                    curY = y - 1;\n                    curD = this.dict[[x, y - 1]];\n                }\n                visited.add([x, y - 1].toString());\n            }\n            x = curX;\n            y = curY;\n            shortest.unshift([x, y]);\n            this.max_d = curD;\n        }\n        if (shortest.length === 1) return []; // 如果沒有找到路徑(只有終點自己)，則不用跑最短路徑\n        return shortest;\n    }\n}\n\nexport default Distance;","import { position } from '../Core';\nimport Queue from '../Core/Queue';\nimport Distance from '../Core/Distance';\n\nfunction BFS(start, speed) {\n    var times = 1 + (position.bomb === false ? 0 : 1); // 如果有bomb要執行2次\n    var retSearchPath = []; // 目前是把兩次search放在同一個array，但應該要分開做顏色的區隔\n    var retShortestPath = [];\n\n    for (var i = 0; i < times; i++) {\n        var searchPath = [];\n        const visited = new Set();\n        const queue = new Queue();\n        var distance = new Distance();\n        var startPos = i === 0 ? position.start : position.bomb; // 第一次執行start，第二次bomb\n        var endPos = i === 0 && times > 1 ? position.bomb : position.end; // 第一次執行bomb，第二次end\n\n        distance.set(startPos, 0); // 加入自己\n        queue.append([startPos, 0]); // [pos, 距離]\n        visited.add(startPos.toString()); // 防止重複找尋\n        while (queue.getLength() > 0) {\n            var node = queue.popleft();\n            var x = node[0][0];\n            var y = node[0][1];\n            var nextD = node[1] + 1;\n\n            if (nextD > searchPath.length) searchPath.push([]); // 若有新的長度就增加array\n\n            if ([x, y].toString() === endPos.toString()) break; // 若找到終點就跳出\n\n            // left\n            if (y - 1 >= 0 && !([x, y - 1] in position.wall) && !(visited.has([x, y - 1].toString()))) {\n                queue.append([[x, y - 1], nextD]);\n                searchPath[nextD - 1].push([x, y - 1]);\n                distance.set([x, y - 1], nextD);\n                visited.add([x, y - 1].toString());\n            }\n\n            // up\n            if (x - 1 >= 0 && !([x - 1, y] in position.wall) && !(visited.has([x - 1, y].toString()))) {\n                queue.append([[x - 1, y], nextD]);\n                searchPath[nextD - 1].push([x - 1, y]);\n                distance.set([x - 1, y], nextD);\n                visited.add([x - 1, y].toString());\n            }\n\n            // right\n            // 這裡的position.rowSize怪怪的\n            if (y + 1 < position.colSize && !([x, y + 1] in position.wall) && !(visited.has([x, y + 1].toString()))) {\n                queue.append([[x, y + 1], nextD]);\n                searchPath[nextD - 1].push([x, y + 1]);\n                distance.set([x, y + 1], nextD);\n                visited.add([x, y + 1].toString());\n            }\n\n            // down\n            // 這裡的position.colSize怪怪的\n            if (x + 1 < position.rowSize && !([x + 1, y] in position.wall) && !(visited.has([x + 1, y].toString()))) {\n                queue.append([[x + 1, y], nextD]);\n                searchPath[nextD - 1].push([x + 1, y]);\n                distance.set([x + 1, y], nextD);\n                visited.add([x + 1, y].toString());\n            }\n\n        }\n\n        // 去除多找的一圈\n        while (distance.get(endPos) !== -1 && searchPath.length > distance.get(endPos)) {\n            searchPath.pop();\n        }\n\n        // 取得最短路徑\n        var shortest = distance.getShortestPath(endPos);\n\n        retSearchPath = retSearchPath.concat(searchPath);\n        retShortestPath = retShortestPath.concat(shortest);\n\n        if (distance.get(endPos) === -1) break; // 如果第一次沒找到終點，直接跳出\n    }\n\n    // 執行 start 動畫\n    start(retSearchPath, retShortestPath, speed);\n}\nexport default BFS;","import BFS from '../../Backend/Bfs'\n\n\nexport function UpdateTable(Start, ClearPath, algorithm, speed) {\n    ClearPath(false)\n    switch (algorithm.get) {\n        case \"Algorithm_Dijkstra\":\n            break;\n        case 'Algorithm_APlus':\n            break;\n        case \"Algorithm_Greedy_Best_First\":\n            break;\n        case \"Algorithm_Swarm\":\n            break;\n        case \"Algorithm_Convergent_Swarm\":\n            break;\n        case \"Algorithm_Bidrectional_Swarm\":\n            break;\n        case \"Algorithm_Breadth_First\":\n            BFS(Start, speed.get[1]);\n            break;\n        case \"Algorithm_Depth_First\":\n            break;\n        default:\n            break;\n    }\n}","import { componentKind } from './TableIndex'\n\n\nexport function WhichComponent(id, touch){\n\n    const element = document.getElementById(id).className\n\n    switch (element) {\n        case componentKind.start:\n            return {kind: componentKind.start, touch: touch.get.start, type: 0}\n        case componentKind.end:\n            return {kind: componentKind.end, touch: touch.get.end, type: 0}\n        case componentKind.bomb:\n            return {kind: componentKind.bomb, touch: touch.get.bomb, type: 0}\n        case componentKind.wall:\n            return {kind: componentKind.wall, rKind: componentKind.background, type: 1}\n        default:\n            return {kind: componentKind.background, rKind: componentKind.wall, type: 1}\n    }\n\n}","import { useContext } from 'react'\nimport { tableVar, touchContext, updateContext, componentKind } from './TableIndex'\nimport { SearchAnimation, PathAnimation, MazeAnimation } from './Animation'\nimport { sysStatusContext, algorithmContext, bombContext, speedContext } from '../../Core'\nimport { setTable } from './SetTable'\nimport { UpdateTable } from './UpdateTable'\nimport { WhichComponent } from './WhichComp'\n\n\nfunction ButtonEvent() {\n    const [touch, update] = [useContext(touchContext), useContext(updateContext)]\n    const [algorithm, bomb, speed, sysStatus] = [useContext(algorithmContext), useContext(bombContext), useContext(speedContext), useContext(sysStatusContext)]\n\n    const Start = (search, path, speed) => {\n        if (update.get) {\n            for (var i = 0; i < search.length; i++) {\n                for (var j = 0; j < search[i].length; j++) {\n                    const index = search[i][j][0] * tableVar.colSize + search[i][j][1]\n                    if (WhichComponent(index.toString(), touch).type) {\n                        setTable(index, componentKind.searchFinal)\n                    }\n                }\n            }\n            for (i = 0; i < path.length; i++) {\n                const index = path[i][0] * tableVar.colSize + path[i][1]\n                if (WhichComponent(index.toString(), touch).type) {\n                    setTable(index, componentKind.pathFinal)\n                }\n            }\n\n        } else {\n            sysStatus.set(\"RUNNING\")\n            update.set(\"True\")\n            console.log(\"Start\")\n            SearchAnimation(search, speed, 0)\n            setTimeout(() => PathAnimation(path, speed, 0, () => sysStatus.set(\"IDLE\")), speed * (search.length + 1))\n        }\n    }\n\n    const CreateMaze = (maze, speed) => {\n        MazeAnimation(maze, speed, 0)\n    }\n\n    const Addbomb = () => {\n        console.log(\"AddBomb\")\n        const index = Math.floor(tableVar.rowSize / 2) * tableVar.colSize + Math.floor(tableVar.colSize / 2)\n\n        if (WhichComponent(index.toString(), touch).type === 0) {\n            return\n        }\n\n        bomb.set(\"True\")\n        setTable(index.toString(), componentKind.bomb)\n\n        if (update.get) {\n            UpdateTable(Start, ClearPath, algorithm, speed)\n        }\n    }\n\n    const RemoveBomb = () => {\n        console.log(\"RemoveBomb\")\n        for (var i = 0; i < tableVar.rowSize * tableVar.colSize; i++) {\n            if (document.getElementById(i.toString()).className === componentKind.bomb) {\n                setTable(i, componentKind.background)\n                break\n            }\n        }\n        bomb.set(\"False\")\n    }\n\n    const ClearWalls = () => {\n        console.log(\"ClearWall\")\n        for (var i = 0; i < tableVar.rowSize * tableVar.colSize; i++) {\n            if (document.getElementById(i.toString()).className === componentKind.wall) {\n                setTable(i, componentKind.background)\n            }\n        }\n        touch.set(\"\")\n    }\n\n    const ClearPath = (event = true) => {\n        console.log(\"ClearPath\")\n        if (event) {\n            update.set(\"False\")\n        }\n        for (var i = 0; i < tableVar.rowSize * tableVar.colSize; i++) {\n            const name = document.getElementById(i.toString()).className\n            if (name === componentKind.search || name === componentKind.searchFinal || name === componentKind.searchBomb || name === componentKind.path || name === componentKind.pathFinal) {\n                setTable(i, componentKind.background)\n            }\n        }\n    }\n\n    const ClearBoard = () => {\n        console.log(\"ClearBoard\")\n        update.set(\"False\")\n        for (var i = 0; i < tableVar.rowSize * tableVar.colSize; i++) {\n            setTable(i, componentKind.background)\n        }\n        setTable(Math.floor(tableVar.rowSize / 2) * tableVar.colSize + Math.floor(tableVar.colSize / 4), componentKind.start)\n        setTable(Math.floor(tableVar.rowSize / 2 + 1) * tableVar.colSize - Math.floor(tableVar.colSize / 4), componentKind.end)\n        touch.set(\"\")\n        bomb.set(\"False\")\n    }\n\n    return { Start, Addbomb, RemoveBomb, ClearWalls, ClearPath, ClearBoard, CreateMaze }\n}\n\nexport default ButtonEvent\n\n\n\n","import React, { useContext } from 'react';\r\nimport { NavDropdown, Nav } from 'react-bootstrap';\r\nimport { algorithmContext, sysStatusContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\nimport ButtonEvent from '../TableHelper/ButtonEvent';\r\n\r\nfunction DropdownAlgorithm() {\r\n    const algoContext = useContext(algorithmContext);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const [className, toggleHandler] = Colored();\r\n    const buttonEvent = ButtonEvent()\r\n\r\n    const DropdownAlgorithmHandler = (eventKey) => {\r\n\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Algorithm_Dijkstra\":\r\n                algoContext.set('Algorithm_Dijkstra');\r\n                break;\r\n            case \"Algorithm_APlus\":\r\n                algoContext.set('Algorithm_APlus');\r\n                break;\r\n            case \"Algorithm_Greedy_Best_First\":\r\n                algoContext.set('Algorithm_Greedy_Best_First');\r\n                break;\r\n            case \"Algorithm_Swarm\":\r\n                algoContext.set('Algorithm_Swarm');\r\n                break;\r\n            case \"Algorithm_Convergent_Swarm\":\r\n                algoContext.set('Algorithm_Convergent_Swarm');\r\n                break;\r\n            case \"Algorithm_Bidrectional_Swarm\":\r\n                buttonEvent.RemoveBomb(); // 按下去後要清空bomb\r\n                algoContext.set('Algorithm_Bidrectional_Swarm');\r\n                break;\r\n            case \"Algorithm_Breadth_First\":\r\n                algoContext.set('Algorithm_Breadth_First');\r\n                break;\r\n            case \"Algorithm_Depth_First\":\r\n                algoContext.set('Algorithm_Depth_First');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item>\r\n            <NavDropdown xs={1} title={<span className={className}>Algorithms</span>} id=\"DropdownAlgorithm\" onSelect={(eventKey) => DropdownAlgorithmHandler(eventKey)}\r\n                onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}\r\n            >\r\n                <NavDropdown.Item eventKey=\"Algorithm_Dijkstra\">Dijkstra's Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_APlus\">A+ Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Greedy_Best_First\">Greedy Best-First Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Swarm\">Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Convergent_Swarm\">Convergent Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Bidrectional_Swarm\">Bidirectional Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Breadth_First\">Breadth-First Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Depth_First\">Depth-First Search</NavDropdown.Item>\r\n            </NavDropdown>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default DropdownAlgorithm;","import { position } from '../Core';\n\nfunction Simple_Stair_Pattern() {\n    var walls = [];\n    var towardUp = true;\n    var x = position.rowSize;\n\n    for (var y = 0; y < position.colSize; y++) {\n        if (towardUp) {\n            x--;\n            if (x < 0) {\n                towardUp = false;\n                x = 1;\n            }\n        } else {\n            x++;\n            if (x >= position.rowSize) {\n                towardUp = true;\n                x = position.rowSize - 2;\n            }\n        }\n        walls.push([x, y]);\n    }\n    return walls;\n}\n\nexport default Simple_Stair_Pattern;","import React, { useContext } from 'react'\r\nimport { NavDropdown, Nav } from 'react-bootstrap';\r\nimport { sysStatusContext, speedContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\nimport Simple_Stair_Pattern from '../../Backend/Simple_Stair_Pattern';\r\nimport ButtonEvent from '../TableHelper/ButtonEvent';\r\n\r\nfunction DropdownMaze() {\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const [className, toggleHandler] = Colored();\r\n    const buttonEvent = ButtonEvent();\r\n    const speed = useContext(speedContext);\r\n\r\n    const DropdownMazeHandler = (eventKey) => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Maze_Recursive_Division\":\r\n                alert(\"Maze_Recursive_Division\");\r\n                break;\r\n            case \"Maze_Recursive_Division_vertical\":\r\n                alert(\"Maze_Recursive_Division_vertical\");\r\n                break;\r\n            case \"Maze_Recursive_Division_horizontal\":\r\n                alert(\"Maze_Recursive_Division_horizontal\");\r\n                break;\r\n            case \"Maze_Basic_Random\":\r\n                alert(\"Maze_Basic_Random\");\r\n                break;\r\n            case \"Maze_Basic_Weight_Maze\":\r\n                alert(\"Maze_Basic_Weight_Maze\");\r\n                break;\r\n            case \"Maze_Simple_stair_pattern\":\r\n                // alert(\"Maze_Simple_stair_pattern\");\r\n                buttonEvent.CreateMaze(Simple_Stair_Pattern(), speed.get[1]);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item>\r\n            <NavDropdown xs={1} title={<span className={className}>Mazes & Patterns</span>} id=\"DropdownMaze\" onSelect={DropdownMazeHandler}\r\n                onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}\r\n            >\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division\">Recursive Division</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division_vertical\">Recursive Division(vertical skew)</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division_horizontal\">Recursive Division(horizontal skew)</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Basic_Random\">Basic Random Maze</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Basic_Weight_Maze\">Basic Weight Maze</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Simple_stair_pattern\">Simple Stair Pattern</NavDropdown.Item>\r\n            </NavDropdown>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default DropdownMaze;","import React, { useState, useContext } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { sysStatusContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\n\r\nfunction NavLink({ names, handlers }) {\r\n    const [whichHandler, setWhichHandler] = useState(0);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const [className, toggleHandler] = Colored();\r\n\r\n    const localHandler = () => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        setWhichHandler(preWhichHandler => (preWhichHandler + 1) % handlers.length);\r\n        handlers[whichHandler]();\r\n    }\r\n\r\n    return (\r\n        <Nav.Item xs={1}>\r\n            <Nav.Link onClick={localHandler} className={className} onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}>{names[whichHandler]}</Nav.Link>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default NavLink\r\n","import { useState, useContext } from 'react';\nimport { sysStatusContext, algorithmContext } from '../Core';\nimport '../App.scss';\n\nconst Colored = () => {\n    const sysStatus = useContext(sysStatusContext);\n    const algoStatus = useContext(algorithmContext);\n    const [isHover, setIsHover] = useState(false);\n    const [className, setClassName] = useState(\"nav-link-default\");\n\n    const toggleHandler = () => {\n        if (isHover) {\n            setClassName(\"nav-link-default\");\n            setIsHover(false);\n        } else {\n            if (sysStatus.get !== \"IDLE\" || algoStatus.get === \"\" || algoStatus.get === \"Algorithm_Bidrectional_Swarm\") {\n                setClassName(\"nav-link-red\");\n            } else {\n                setClassName(\"nav-link-green\");\n            }\n            setIsHover(true);\n        }\n    }\n\n    return [className, toggleHandler];\n}\n\nexport default Colored\n","import React, { useState, useContext, useEffect } from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport { bombContext, sysStatusContext, algorithmContext } from '../../Core';\nimport Colored from '../../HOC/Colored_AddButton';\nimport { IsMount } from '../../Core/IsMount.js'\n\nfunction NavAddBomb({ names, handlers }) {\n    const [whichHandler, setWhichHandler] = useState(0);\n    const bomb = useContext(bombContext);\n    const sysStatus = useContext(sysStatusContext);\n    const algoContext = useContext(algorithmContext);\n    const [className, toggleHandler] = Colored();\n    const isMount = IsMount();\n\n    useEffect(() => {\n        if (isMount) return; // 防止第一次render也會跑進來執行\n\n        if (bomb.get === true) {\n            setWhichHandler(1);\n        } else {\n            setWhichHandler(0);\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [bomb])\n\n    useEffect(() => {\n        if (isMount) return;\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [whichHandler])\n\n    const localHandler = () => {\n        if (isMount) return;\n\n        if (sysStatus.get !== \"IDLE\" || algoContext.get === \"\" || algoContext.get === \"Algorithm_Bidrectional_Swarm\") {\n            return;\n        }\n\n        handlers[whichHandler]();\n    }\n\n\n    return (\n        <Nav.Item xs={1}>\n            <Nav.Link onClick={localHandler} className={className} onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}>{names[whichHandler]}</Nav.Link>\n        </Nav.Item>\n    )\n}\n\nexport default NavAddBomb\n","import { useRef, useEffect } from 'react';\n\nexport const IsMount = () => {\n    const isMount = useRef(true);\n\n    useEffect(() => {\n        isMount.current = false;\n    }, [])\n\n    return isMount.current;\n}\n\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { algorithmContext, sysStatusContext, speedContext } from '../../Core';\r\nimport ButtonEvent from '../TableHelper/ButtonEvent';\r\nimport BFS from '../../Backend/Bfs';\r\n\r\nconst NavButton = () => {\r\n\r\n    const [buttonName, setButtonName] = useState(\"Visualize !\");\r\n    const [myVariant, setMyVariant] = useState(\"\");\r\n    const algoContext = useContext(algorithmContext);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const speed = useContext(speedContext);\r\n    const buttonEvent = ButtonEvent();\r\n\r\n    useEffect(() => {\r\n        setMyVariant('success');\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        var algoName = \"\";\r\n        switch (algoContext.get) {\r\n            case \"Algorithm_Dijkstra\":\r\n                algoName = \"Dijkstra's\";\r\n                break;\r\n            case 'Algorithm_APlus':\r\n                algoName = \"A*\";\r\n                break;\r\n            case \"Algorithm_Greedy_Best_First\":\r\n                algoName = \"Greedy\";\r\n                break;\r\n            case \"Algorithm_Swarm\":\r\n                algoName = \"Swarm\";\r\n                break;\r\n            case \"Algorithm_Convergent_Swarm\":\r\n                algoName = \"Convergent Swarm\";\r\n                break;\r\n            case \"Algorithm_Bidrectional_Swarm\":\r\n                algoName = \"Bidrectional Swarm\";\r\n                break;\r\n            case \"Algorithm_Breadth_First\":\r\n                algoName = \"BFS\";\r\n                break;\r\n            case \"Algorithm_Depth_First\":\r\n                algoName = \"DFS\";\r\n                break;\r\n            default:\r\n                algoName = \"\";\r\n                break;\r\n        }\r\n        setButtonName(`Visualize ${algoName}!`);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [algoContext.get])\r\n\r\n    useEffect(() => {\r\n        if (sysStatus.get === 'RUNNING') {\r\n            setMyVariant('danger');\r\n        } else {\r\n            setMyVariant('success');\r\n        }\r\n    }, [sysStatus.get])\r\n\r\n\r\n    const handler = () => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        if (algoContext.get === \"\") {\r\n            setButtonName(\"Pick an Algorithm\");\r\n        } else {\r\n            buttonEvent.ClearPath();\r\n            switch (algoContext.get) {\r\n                case \"Algorithm_Dijkstra\":\r\n                    break;\r\n                case 'Algorithm_APlus':\r\n                    break;\r\n                case \"Algorithm_Greedy_Best_First\":\r\n                    break;\r\n                case \"Algorithm_Swarm\":\r\n                    break;\r\n                case \"Algorithm_Convergent_Swarm\":\r\n                    break;\r\n                case \"Algorithm_Bidrectional_Swarm\":\r\n                    break;\r\n                case \"Algorithm_Breadth_First\":\r\n                    BFS(buttonEvent.Start, speed.get[1]);\r\n                    break;\r\n                case \"Algorithm_Depth_First\":\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item xs={1}>\r\n            <Button id=\"navButton\" variant={myVariant} size=\"lg\" onClick={handler}>{buttonName}</Button>\r\n        </Nav.Item>\r\n    )\r\n};\r\n\r\nexport default NavButton\r\n","import React, { useState, useContext } from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport { sysStatusContext } from '../../Core';\nimport Colored from '../../HOC/Colored';\n\nfunction NavClearBoard({ names, handlers }) {\n    const [whichHandler, setWhichHandler] = useState(0);\n    const sysStatus = useContext(sysStatusContext);\n    const [className, toggleHandler] = Colored();\n\n    const localHandler = () => {\n        if (sysStatus.get !== \"IDLE\") {\n            return;\n        }\n\n        setWhichHandler(preWhichHandler => (preWhichHandler + 1) % handlers.length);\n        handlers[whichHandler]();\n    }\n\n    return (\n        <Nav.Item xs={1}>\n            <Nav.Link onClick={localHandler} className={className} onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}>{names[whichHandler]}</Nav.Link>\n        </Nav.Item>\n    )\n}\n\nexport default NavClearBoard\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport { sysStatusContext } from '../../Core';\r\nimport { speedContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\n\r\nfunction DropdownSpeed() {\r\n    const [title, setTitle] = useState('Average');\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const speed = useContext(speedContext);\r\n    const [className, toggleHandler] = Colored();\r\n\r\n    useEffect(() => {\r\n        setTitle(speed.get[0]);\r\n    }, [speed.get])\r\n\r\n\r\n    const DropdownSpeedHandler = (eventKey) => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Fast\":\r\n                speed.set(\"Fast\");\r\n                break;\r\n            case \"Average\":\r\n                speed.set(\"Average\");\r\n                break;\r\n            case \"Slow\":\r\n                speed.set(\"Slow\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <NavDropdown xs={1} title={<span className={className}>Speed: {title}</span>} id=\"DropdownSpeed\" onSelect={DropdownSpeedHandler}\r\n            onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}\r\n        >\r\n            <NavDropdown.Item eventKey=\"Fast\">Fast</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Average\">Average</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Slow\">Slow</NavDropdown.Item>\r\n        </NavDropdown>\r\n    )\r\n}\r\n\r\nexport default DropdownSpeed;","import React from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Logo from './HeaderHelper/Logo';\r\nimport DropdownAlgorithm from './HeaderHelper/DropdownAlgorithm';\r\nimport DropdownMaze from './HeaderHelper/DropdownMaze';\r\nimport NavLink from './HeaderHelper/NavLink';\r\nimport NavAddBomb from './HeaderHelper/NavAddBomb';\r\nimport NavButton from './HeaderHelper/NavButton';\r\nimport NavClearBoard from './HeaderHelper/NavClearBoard';\r\nimport DropdownSpeed from './HeaderHelper/DropdownSpeed';\r\nimport ButtonEvent from './TableHelper/ButtonEvent';\r\n\r\nfunction Header() {\r\n    const buttonEvent = ButtonEvent()\r\n\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"xl\" bg='dark' variant='dark'>\r\n            <Logo />\r\n            <Navbar.Toggle aria-controls=\"Collapse\" />\r\n            <Navbar.Collapse id=\"Collapse\" className='nvbar-collapse'>\r\n                <Nav className=\"nav-bar\">\r\n                    <DropdownAlgorithm />\r\n                    <DropdownMaze />\r\n                    <NavAddBomb names={[\"Add Bomb\", \"Remove Bomb\"]} handlers={[buttonEvent.Addbomb, buttonEvent.RemoveBomb]} />\r\n                    <NavButton />\r\n                    <NavClearBoard names={[\"Clear Board\"]} handlers={[buttonEvent.ClearBoard]} />\r\n                    <NavLink names={[\"Clear Walls & Weights\"]} handlers={[buttonEvent.ClearWalls]} />\r\n                    <NavLink names={[\"Clear Path\"]} handlers={[buttonEvent.ClearPath]} />\r\n                    <DropdownSpeed />\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Header\r\n","import { useContext } from 'react'\nimport { sysStatusContext, algorithmContext, speedContext } from '../../Core/index'\nimport { tableVar, touchContext, moveContext, updateContext, componentKind } from './TableIndex'\nimport { setTable } from './SetTable'\nimport { UpdateTable } from './UpdateTable'\nimport { WhichComponent } from './WhichComp'\nimport ButtonEvent from './ButtonEvent'\n\nfunction MouseEvent() {\n    const [touch, move, update] = [useContext(touchContext), useContext(moveContext), useContext(updateContext)]\n    const [algorithm, speed, sysStatus] = [useContext(algorithmContext), useContext(speedContext), useContext(sysStatusContext)]\n    const buttonEvent = ButtonEvent()\n\n    const MouseDownHandler = (e) => {\n        // console.log(\"MouseDownHandler \" + e.target.id)\n\n        if (sysStatus.get !== \"IDLE\") {\n            return\n        }\n\n        e.preventDefault()\n\n        tableVar.id = e.target.id\n        const whichComponent = WhichComponent(tableVar.id, touch)\n\n        if(whichComponent.type){\n            setTable(tableVar.id, whichComponent.rKind)\n            move.set(componentKind.wall)\n\n        }else{\n            move.set(whichComponent.kind)\n        }\n    }\n\n    const MouseUpHandler = (e) => {\n        // console.log(\"MouseUpHandler \" + e.target.id)\n\n        if (sysStatus.get !== \"IDLE\") {\n            return\n        }\n\n        move.set(\"\")\n\n        if(update.get && move.get !== \"\"){\n            UpdateTable(buttonEvent.Start, buttonEvent.ClearPath, algorithm, speed)\n        }\n    }\n\n    const OnMouseEnterHanlder = (e) => {\n        // console.log(\"OnMouseEnterHanlder \" + e.target.id)\n\n        if (sysStatus.get !== \"IDLE\") {\n            return\n        }\n\n        tableVar.newId = e.target.id\n        const whichOldComponent = WhichComponent(tableVar.id, touch)\n        const whichNewComponent = WhichComponent(tableVar.newId, touch)\n\n        if(move.get === componentKind.wall && whichNewComponent.type){\n            setTable(tableVar.newId, whichNewComponent.rKind)\n            tableVar.id = tableVar.newId\n\n        }else if(move.get !== componentKind.wall && move.get !== \"\" && whichNewComponent.type){\n            setTable(tableVar.id, whichOldComponent.touch)\n            touch.set({componentKind: whichOldComponent.kind, under: whichNewComponent.kind})\n            setTable(tableVar.newId, whichOldComponent.kind)\n            tableVar.id = tableVar.newId\n        }\n\n        if(update.get && move.get !== \"\"){\n            UpdateTable(buttonEvent.Start, buttonEvent.ClearPath, algorithm, speed)\n        }\n    }\n\n    return {MouseDownHandler, MouseUpHandler, OnMouseEnterHanlder}\n\n}\n\nexport default MouseEvent","import { useEffect } from 'react'\nimport MouseEvent from './MouseEvent'\nimport { tableVar, componentKind } from './TableIndex'\n\n\nfunction TableUI() {\n    const [rowSize, colSize, size] = [tableVar.rowSize, tableVar.colSize, tableVar.size]\n\n    const row = Array.from(Array(rowSize).keys())\n    const col = Array.from(Array(colSize).keys())\n\n    const mouesEvent = MouseEvent()\n    const [MouseDownHandler, MouseUpHandler, OnMouseEnterHanlder] = [mouesEvent.MouseDownHandler, mouesEvent.MouseUpHandler, mouesEvent.OnMouseEnterHanlder]\n\n    const createTable = row.map((rowIndex, index) => {\n        return ( \n            <tr key = {index} height={size}>\n                {col.map((colIndex, index) => {\n                    // console.log(rowIndex + \" \" + colIndex)\n                    return (\n                        <td id = {rowIndex * colSize + colIndex} key = {index} className = {componentKind.background} width={size} onMouseUp = {MouseUpHandler} onMouseDown = {MouseDownHandler} onMouseEnter = {OnMouseEnterHanlder}>\n                            {}\n                        </td>)}\n                    )}\n            </tr>)}\n        )\n\n    useEffect(() => {\n        document.getElementById((Math.floor(tableVar.rowSize / 2) * tableVar.colSize + Math.floor(tableVar.colSize / 4)).toString()).className = \"start\"\n        document.getElementById((Math.floor(tableVar.rowSize / 2 + 1) * tableVar.colSize - Math.floor(tableVar.colSize / 4)).toString()).className = \"end\"\n    }, [])\n    \n    \n      \n    return (\n        <div className = \"tablePadding\">\n            <table id = \"board\" align=\"center\" border=\"1\" cellSpacing=\"0\">\n                <tbody>\n                    {createTable}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default TableUI\n","import TableUI from './TableHelper/TableUI';\nimport { useContext, useEffect } from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { sysStatusContext } from '../Core';\n\nfunction Table() {  \n\tconst sysStatus = useContext(sysStatusContext);\n\n\tuseEffect(()=>{\n\t\tsetTimeout(()=>{sysStatus.set(\"IDLE\");}, 1000);\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [])\n\n\tif (sysStatus.get === \"LOADING\"){\n\t\treturn (<Spinner animation=\"border\" variant=\"warning\" />);\n\t}\n\telse{\n\t\treturn (\n\t        <div id = \"UI\">\n\t            <TableUI/>\n\t        </div>\n\t    )\n\t}\n}\n\nexport default Table\n","import { useState, useContext, useEffect } from 'react';\nimport { algorithmContext } from '../../Core';\n\nfunction Info() {\n\tconst [bannedBomb, setBannedBomb] = useState(\"\");\n\tconst [bannedBFSDFS, setBannedBFSDFS] = useState(\"\");\n\tconst algoContext = useContext(algorithmContext);\n\n\tuseEffect(() => {\n\t\tif (algoContext.get === \"Algorithm_Bidrectional_Swarm\") {\n\t\t\tsetBannedBomb(\"banned\");\n\t\t} else {\n\t\t\tsetBannedBomb(\"\");\n\t\t}\n\n\t\tif (algoContext.get === \"Algorithm_Breadth_First\" || algoContext.get === \"Algorithm_Depth_First\") {\n\t\t\tsetBannedBFSDFS(\"banned\");\n\t\t} else {\n\t\t\tsetBannedBFSDFS(\"\");\n\t\t}\n\t}, [algoContext.get])\n\n\treturn (\n\t\t<div id=\"mainInfo\">\n\t\t\t<ul>\n\t\t\t\t<li> <div className=\"Info-Start-Node\"></div>Start Node </li>\n\t\t\t\t<li> <div className=\"Info-End-Node\"></div>Target Node </li>\n\t\t\t\t<li className={bannedBomb}> <div className=\"Info-Bomb-Node\"></div>Bomb Node </li>\n\t\t\t\t<li className={bannedBFSDFS}> <div className=\"Info-Weight-Node\"></div>Weight Node </li>\n\t\t\t\t<li> <div className=\"Info-Unvisited-Node\"></div>Unvisited Node </li>\n\t\t\t\t<li> <div className=\"Info-Visited-Node\"></div>Visited Node </li>\n\t\t\t\t<li> <div className=\"Info-ShortestPathNode-Node\"></div>Shortest-Path Node </li>\n\t\t\t\t<li> <div className=\"Info-WallNode-Node\"></div>Wall Node </li>\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n\nexport default Info;","import {useState, useContext, useEffect} from 'react';\nimport { algorithmContext } from '../../Core';\n\nfunction AlgorithmDescriptor(){\n\tconst [algorithmName, setAlgorithmName] = useState('Pick an algorithm and visualize it!');\n    const [discription1, setDiscription1] = useState('');\n    const [discription2, setDiscription2] = useState('');\n\tconst algoContext = useContext(algorithmContext);\n\n\tuseEffect(() => {\n        var algoName = \"\";\n        var d1 = \"\";\n        var d2 = \"\";\n        switch (algoContext.get) {\n            case \"Algorithm_Dijkstra\":\n                algoName = \"Dijkstra's Algorithm\";\n                d1 = \"weighted\";\n                d2 = \"guarantees\";\n                break;\n            case 'Algorithm_APlus':\n                algoName = \"A* Search\";\n                d1 = \"weighted\";\n                d2 = \"guarantees\";\n                break;\n            case \"Algorithm_Greedy_Best_First\":\n                algoName = \"Greedy Best-first Search\";\n                d1 = \"weighted\";\n                d2 = \"does not guarantee\";\n                break;\n            case \"Algorithm_Swarm\":\n                algoName = \"Swarm Algorithm\";\n                d1 = \"weighted\";\n                d2 = \"does not guarantee\";\n                break;\n            case \"Algorithm_Convergent_Swarm\":\n                algoName = \"Convergent Swarm Algorithm\";\n                d1 = \"weighted\";\n                d2 = \"does not guarantee\";\n                break;\n            case \"Algorithm_Bidrectional_Swarm\":\n                algoName = \"Bidrectional Swarm Algorithm\";\n                d1 = \"weighted\";\n                d2 = \"does not guarantee\";\n                break;\n            case \"Algorithm_Breadth_First\":\n                algoName = \"Breath-first Search\";\n                d1 = \"unweighted\";\n                d2 = \"guarantee\";\n                break;\n            case \"Algorithm_Depth_First\":\n                algoName = \"Depth-first Search\";\n                d1 = \"unweighted\";\n                d2 = \"does not guarantee\";\n                break;\n            default:\n                algoName = \"Pick an algorithm and visualize it!\";\n                d1 = \"\";\n                d2 = \"\";\n                break;\n        }\n\n        setAlgorithmName(algoName);\n        setDiscription1(d1);\n        setDiscription2(d2);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [algoContext.get])\n\n    if (algoContext.get === \"\"){\n        return (\n            <div id=\"algorithmDescriptor\">\n                {algorithmName}\n            </div>\n        )\n    } else{\n        return (\n            <div id=\"algorithmDescriptor\">\n                {algorithmName} is <i><b>{discription1}</b></i> and <i><b>{discription2}</b></i> the shortest path!\n            </div>\n        )\n    }\n\t\n}\n\nexport default AlgorithmDescriptor;","import React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nfunction IntroductionModal() {\n    const [pages, setPages] = useState(1);\n    const [show, setShow] = useState(true);\n    const text = {\n        1: [\n            \"1/3\",\n            \"Test1\",\n            \"Test1 Dialog\"\n        ],\n        2: [\n            \"2/3\",\n            \"Test2\",\n            \"Test2 Dialog\"\n        ],\n        3: [\n            \"3/3\",\n            \"Test3\",\n            \"Test3 Dialog\"\n        ],\n    }\n\n    const HandlePrevious = () => {\n        setPages(prePage => prePage - 1 >= 1 ? prePage - 1 : prePage);\n    }\n\n    const HandleNext = () => {\n        setPages(prePage => prePage + 1 <= 3 ? prePage + 1 : prePage);\n    }\n\n    return (\n        <Modal show={show} size='lg' backdrop=\"static\" centered>\n            <div className=\"ml-auto Modal-Page\">{text[pages][0]}</div>\n            <div className=\"Modal-Title\">{text[pages][1]}</div>\n\n            <Modal.Body>\n                <p>{text[pages][2]}</p>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button className=\"mr-auto\" variant='success' size=\"md\" onClick={() => setShow(false)}>Skip Tutorial</Button>\n                <Button variant='success' size=\"md\" onClick={() => HandlePrevious()}>Previous</Button>\n                <Button variant='success' size=\"md\" onClick={() => HandleNext()}>Next</Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default IntroductionModal\n","import './App.scss';\nimport { useReducer } from 'react';\nimport Header from './Frontend/Header';\nimport { algorithmReducer, initialAlgorithm, algorithmContext } from './Core';\nimport { sysStatusReducer, initialsysStatus, sysStatusContext } from './Core';\nimport { bombContext, bombInitial, bombReducer } from './Core';\nimport { speedContext, speedInitial, speedReducer } from './Core';\nimport Table from './Frontend/Table';\nimport { touchReducer, touchInitial, touchContext } from './Frontend/TableHelper/TableIndex';\nimport { moveReducer, moveInitial, moveContext } from './Frontend/TableHelper/TableIndex';\nimport { updateReducer, updateInitial, updateContext } from './Frontend/TableHelper/TableIndex';\nimport Info from './Frontend/HeaderHelper/Info';\nimport AlgorithmDescriptor from './Frontend/HeaderHelper/AlgorithmDescriptor';\nimport IntroductionModal from './Frontend/HeaderHelper/IntroductionModal';\n\nfunction App() {\n  const [curAlgorithm, setCurAlgorithm] = useReducer(algorithmReducer, initialAlgorithm);\n  const [curSysStatus, setCurSysStatus] = useReducer(sysStatusReducer, initialsysStatus);\n  const [curBomb, setCurBomb] = useReducer(bombReducer, bombInitial);\n  const [curSpeed, setCurSpeed] = useReducer(speedReducer, speedInitial);\n  const [touch, setTouch] = useReducer(touchReducer, touchInitial)\n  const [move, setMove] = useReducer(moveReducer, moveInitial)\n  const [update, setUpdate] = useReducer(updateReducer, updateInitial)\n\n  return (\n    <div className=\"App\">\n      <IntroductionModal />\n      <updateContext.Provider value={{ get: update, set: setUpdate }}>\n        <moveContext.Provider value={{ get: move, set: setMove }}>\n          <touchContext.Provider value={{ get: touch, set: setTouch }}>\n            <speedContext.Provider value={{ get: curSpeed, set: setCurSpeed }}>\n              <bombContext.Provider value={{ get: curBomb, set: setCurBomb }}>\n                <sysStatusContext.Provider value={{ get: curSysStatus, set: setCurSysStatus }}>\n                  <algorithmContext.Provider value={{ get: curAlgorithm, set: setCurAlgorithm }}>\n                    <Header />\n                    <Info />\n                    <AlgorithmDescriptor />\n                    <Table />\n                  </algorithmContext.Provider>\n                </sysStatusContext.Provider>\n              </bombContext.Provider>\n            </speedContext.Provider>\n          </touchContext.Provider>\n        </moveContext.Provider>\n      </updateContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}