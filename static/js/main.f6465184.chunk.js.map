{"version":3,"sources":["frontend/Headers/Logo.js","Core/index.js","frontend/Headers/DropdownAlgorithm.js","frontend/Headers/DropdownMaze.js","frontend/Headers/NavLink.js","frontend/Headers/NavButton.js","frontend/Headers/DropdownSpeed.js","frontend/Header.js","frontend/Init.js","App.js","reportWebVitals.js","index.js"],"names":["logo","Navbar","Brand","href","className","src","width","height","variant","alt","algorithmContext","React","createContext","initialAlgorithm","algorithmReducer","state","action","DropdownAlgorithmHandler","eventKey","algoContext","set","DropdownAlgorithm","useContext","NavDropdown","xs","title","id","onSelect","Item","DropdownMazeHandler","alert","DropdownMaze","NavLink","name","handler","Nav","Link","onClick","NavButton","useState","buttonName","setButtonName","myVariant","setMyVariant","useEffect","Button","size","get","setTimeout","DropdownSpeed","setTitle","Header","expand","bg","Logo","Toggle","aria-controls","Collapse","Init","props","row","col","rowSize","colSize","Array","from","keys","wall","setWall","bomb","setBomb","bombComponent","startComponent","endComponent","move","setMove","picture","initialTable","index","Math","floor","tableColor","setTableColor","temp","slice","ClickUpHandler","e","console","log","target","parseInt","ClickDownHandler","preventDefault","OnMouseEnterHanlder","OnMouseOutHanlder","createTable","map","rowIndex","colIndex","bgcolor","onMouseUp","onMouseDown","onMouseEnter","onMouseOut","border","cellSpacing","i","App","useReducer","curAlgorithm","setCurAlgorithm","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6465184.chunk.js","sourcesContent":["import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\n\r\nfunction logo() {\r\n    return (\r\n        <Navbar.Brand href=\"/Pathing-Finding/\" className='Navbar-logo'>\r\n            <img\r\n                src='./logo.png'\r\n                width=\"50\"\r\n                height=\"50\"\r\n                className='d-inline-block'\r\n                variant='test'\r\n                alt='Logo'\r\n            /> {' '}\r\n                    Path-Finding\r\n        </Navbar.Brand>\r\n    )\r\n}\r\n\r\nexport default logo\r\n","import React from 'react'\r\n\r\n// 統一 目前的演算法, redux vs useContext&useReducer\r\nexport const algorithmContext = React.createContext();\r\nexport const initialAlgorithm = \"Algorithm_Dijkstra\";\r\nexport const algorithmReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'Algorithm_Dijkstra':\r\n            return 'Algorithm_Dijkstra';\r\n        case 'Algorithm_APlus':\r\n            return 'Algorithm_APlus';\r\n        case \"Algorithm_Greedy_Best_First\":\r\n            return 'Algorithm_Greedy_Best_First';\r\n        case \"Algorithm_Swarm\":\r\n            return 'Algorithm_Swarm';\r\n        case \"Algorithm_Convergent_Swarm\":\r\n            return 'Algorithm_Convergent_Swarm';\r\n        case \"Algorithm_Bidrectional_Swarm\":\r\n            return 'Algorithm_Bidrectional_Swarm';\r\n        case \"Algorithm_Breadth_First\":\r\n            return 'Algorithm_Breadth_First';\r\n        case \"Algorithm_Depth_First\":\r\n            return 'Algorithm_Depth_First';\r\n        default:\r\n            return initialAlgorithm;\r\n    }\r\n}","import React, { useContext } from 'react';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport { algorithmContext } from '../../Core';\r\n\r\nfunction DropdownAlgorithm({ className }) {\r\n    const algoContext = useContext(algorithmContext);\r\n\r\n    return (\r\n        <NavDropdown xs={1} title=\"Algorithms\" id=\"DropdownAlgorithm\" onSelect={(eventKey) => DropdownAlgorithmHandler(eventKey, algoContext)} className={className}>\r\n            <NavDropdown.Item eventKey=\"Algorithm_Dijkstra\">Dijkstra's Algorithm</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Algorithm_APlus\">A+ Search</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Algorithm_Greedy_Best_First\">Greedy Best-First Search</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Algorithm_Swarm\">Swarm Algorithm</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Algorithm_Convergent_Swarm\">Convergent Swarm Algorithm</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Algorithm_Bidrectional_Swarm\">Bidirectional Swarm Algorithm</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Algorithm_Breadth_First\">Breadth-First Search</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Algorithm_Depth_First\">Depth-First Search</NavDropdown.Item>\r\n        </NavDropdown>\r\n    )\r\n}\r\n\r\nconst DropdownAlgorithmHandler = (eventKey, algoContext) => {\r\n\r\n    switch (eventKey) {\r\n        case \"Algorithm_Dijkstra\":\r\n            algoContext.set('Algorithm_Dijkstra');\r\n            break;\r\n        case \"Algorithm_APlus\":\r\n            algoContext.set('Algorithm_APlus');\r\n            break;\r\n        case \"Algorithm_Greedy_Best_First\":\r\n            algoContext.set('Algorithm_Greedy_Best_First');\r\n            break;\r\n        case \"Algorithm_Swarm\":\r\n            algoContext.set('Algorithm_Swarm');\r\n            break;\r\n        case \"Algorithm_Convergent_Swarm\":\r\n            algoContext.set('Algorithm_Convergent_Swarm');\r\n            break;\r\n        case \"Algorithm_Bidrectional_Swarm\":\r\n            algoContext.set('Algorithm_Bidrectional_Swarm');\r\n            break;\r\n        case \"Algorithm_Breadth_First\":\r\n            algoContext.set('Algorithm_Breadth_First');\r\n            break;\r\n        case \"Algorithm_Depth_First\":\r\n            algoContext.set('Algorithm_Depth_First');\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport default DropdownAlgorithm;","import React from 'react'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\n\r\nfunction DropdownMaze({ className }) {\r\n    return (\r\n        <NavDropdown xs={1} title=\"Mazes & Patterns\" id=\"DropdownMaze\" onSelect={DropdownMazeHandler} className={className}>\r\n            <NavDropdown.Item eventKey=\"Maze_Recursive_Division\">Recursive Division</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Maze_Recursive_Division_vertical\">Recursive Division(vertical skew)</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Maze_Recursive_Division_horizontal\">Recursive Division(horizontal skew)</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Maze_Basic_Random\">Basic Random Maze</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Maze_Basic_Weight_Maze\">Basic Weight Maze</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Maze_Simple_stair_pattern\">Simple Stair Pattern</NavDropdown.Item>\r\n        </NavDropdown>\r\n    )\r\n}\r\n\r\nconst DropdownMazeHandler = (eventKey) => {\r\n    switch (eventKey) {\r\n        case \"Maze_Recursive_Division\":\r\n            alert(\"Maze_Recursive_Division\");\r\n            break;\r\n        case \"Maze_Recursive_Division_vertical\":\r\n            alert(\"Maze_Recursive_Division_vertical\");\r\n            break;\r\n        case \"Maze_Recursive_Division_horizontal\":\r\n            alert(\"Maze_Recursive_Division_horizontal\");\r\n            break;\r\n        case \"Maze_Basic_Random\":\r\n            alert(\"Maze_Basic_Random\");\r\n            break;\r\n        case \"Maze_Basic_Weight_Maze\":\r\n            alert(\"Maze_Basic_Weight_Maze\");\r\n            break;\r\n        case \"Maze_Simple_stair_pattern\":\r\n            alert(\"Maze_Simple_stair_pattern\");\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport default DropdownMaze;","import React from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nfunction NavLink({ name, handler, className }) {\r\n    return (\r\n        <Nav.Item xs={1} className={className}>\r\n            <Nav.Link onClick={handler}>{name}</Nav.Link>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default NavLink\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { algorithmContext } from '../../Core';\r\n\r\nconst NavButton = () => {\r\n\r\n    const [buttonName, setButtonName] = useState(\"Visualize !\");\r\n    const [myVariant, setMyVariant] = useState(\"\");\r\n    const algoContext = useContext(algorithmContext);\r\n\r\n    useEffect(() => {\r\n        setMyVariant('success');\r\n    }, [])\r\n\r\n    const resetButton = () => {\r\n        setMyVariant('success');\r\n        setButtonName(\"Visualize !\");\r\n    }\r\n\r\n    const handler = () => {\r\n        setMyVariant('danger');\r\n        setButtonName(algoContext.get);\r\n\r\n        setTimeout(() => resetButton(), 1000);\r\n    }\r\n\r\n    return (\r\n        <Nav.Item xs={1}>\r\n            <Button id=\"navButton\" variant={myVariant} size=\"lg\" onClick={handler}>{buttonName}</Button>\r\n        </Nav.Item>\r\n    )\r\n};\r\n\r\nexport default NavButton\r\n","import React, { useState } from 'react'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\n\r\nfunction DropdownSpeed({ className }) {\r\n    const [title, setTitle] = useState('Average');\r\n\r\n    return (\r\n        <NavDropdown xs={1} title={`Speed: ${title}`} id=\"DropdownSpeed\" className={className}>\r\n            <NavDropdown.Item onSelect={() => { setTitle(\"Fast\"); alert('Speed Fast!') }}>Fast</NavDropdown.Item>\r\n            <NavDropdown.Item onSelect={() => { setTitle(\"Average\"); alert('Speed Average!') }}>Average</NavDropdown.Item>\r\n            <NavDropdown.Item onSelect={() => { setTitle(\"Slow\"); alert('Speed Slow!') }}>Slow</NavDropdown.Item>\r\n        </NavDropdown>\r\n    )\r\n}\r\n\r\nexport default DropdownSpeed;","import React from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Logo from './Headers/Logo';\r\nimport DropdownAlgorithm from './Headers/DropdownAlgorithm';\r\nimport DropdownMaze from './Headers/DropdownMaze';\r\nimport NavLink from './Headers/NavLink';\r\nimport NavButton from './Headers/NavButton';\r\nimport DropdownSpeed from './Headers/DropdownSpeed';\r\n\r\nfunction Header() {\r\n\r\n    return (\r\n        <Navbar expand=\"xl\" bg='dark' variant='dark'>\r\n            <Logo />\r\n            <Navbar.Toggle aria-controls=\"Collapse\" />\r\n            <Navbar.Collapse id=\"Collapse\" className='nvbar-collapse'>\r\n                <Nav className=\"nav-bar\">\r\n                    <DropdownAlgorithm />\r\n                    <DropdownMaze />\r\n                    <NavLink name=\"Add Bomb\" handler={() => alert('Add 1 Bomb !')} />\r\n                    <NavButton />\r\n                    <NavLink name=\"Clear Board\" handler={() => alert('Clear Board !')} />\r\n                    <NavLink name=\"Clear Walls & Weights\" handler={() => alert('Clear Walls & Weights !')} />\r\n                    <NavLink name=\"Clear Path\" handler={() => alert('Clear Path !')} />\r\n                    <DropdownSpeed />\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Header\r\n","import React, {useState, useEffect} from 'react'\r\nimport {table, tbody, tr, td, Button} from 'react-bootstrap'\r\n\r\n\r\nfunction Init(props) {\r\n    const [rowSize, colSize, size] = [props.row, props.col, props.size]\r\n    const row = Array.from(Array(rowSize).keys())\r\n    const col = Array.from(Array(colSize).keys())\r\n\r\n    const [wall, setWall] = useState(false)\r\n    const [bomb, setBomb] = useState(false)\r\n    const [move, setMove] = useState({bombComponent: false, startComponent: false, endComponent: false})\r\n    const picture = {wall: \"blue\", bomb: \"red\", start: \"green\", end: \"#F5F500\", background: \"white\"}\r\n    // const [thing, setThing] = useState(\"Wall\")\r\n    const initialTable = Array.from(Array(rowSize * colSize).keys(), index => {\r\n        if(index === Math.floor(rowSize / 2) * colSize + Math.floor(colSize / 4)){\r\n            return picture.start\r\n        }else if(index === Math.floor(rowSize / 2 + 1) * colSize - Math.floor(colSize / 4)){\r\n            return picture.end\r\n        }else{\r\n            return picture.background\r\n        }\r\n    })\r\n    const [tableColor, setTableColor] = useState(initialTable)\r\n    var temp = tableColor.slice()\r\n\r\n    const AddBombHanlder = (e) => {\r\n        if(bomb === false){\r\n            setBomb(true)\r\n            temp[Math.floor(rowSize / 2) * colSize + Math.floor(colSize / 2)] = picture.bomb\r\n            setTableColor(temp)\r\n        }\r\n    }\r\n\r\n    const ResetBoardHanlder = () => {\r\n        setTableColor(initialTable)\r\n        setBomb(false)\r\n    }\r\n\r\n    const ClearWallHanlder = () => {\r\n        for(var i = 0; i < rowSize * colSize;i++){\r\n            if(temp[i] === picture.wall){\r\n                temp[i] = picture.background\r\n            }\r\n        }\r\n        setTableColor(temp)\r\n    }\r\n\r\n    const ClickUpHandler = (e) => {\r\n        console.log(\"ClickUpHandler \" + e.target.id)\r\n        if(wall){\r\n            setWall(false)\r\n        }else{\r\n            if(temp[parseInt(e.target.id)] === picture.bomb){\r\n                setMove({...move, bombComponent: false})\r\n            }else if(temp[parseInt(e.target.id)] === picture.start){\r\n                setMove({...move, startComponent: false})\r\n            }else{\r\n                setMove({...move, endComponent: false})\r\n            }\r\n        }\r\n    }\r\n\r\n    const ClickDownHandler = (e) => {\r\n        e.preventDefault()\r\n        console.log(\"ClickDownHandler \" + e.target.id)\r\n        if(temp[parseInt(e.target.id)] !== picture.bomb && temp[parseInt(e.target.id)] !== picture.start && temp[parseInt(e.target.id)] !== picture.end){\r\n            setWall(true)\r\n            if(temp[parseInt(e.target.id)] === picture.background){\r\n                temp[parseInt(e.target.id)] = picture.wall\r\n            }else{\r\n                temp[parseInt(e.target.id)] = picture.background\r\n            }\r\n            setTableColor(temp)\r\n        }else{\r\n            if(temp[parseInt(e.target.id)] === picture.bomb){\r\n                setMove({...move, bombComponent: true})\r\n            }else if(temp[parseInt(e.target.id)] === picture.start){\r\n                setMove({...move, startComponent: true})\r\n            }else{\r\n                setMove({...move, endComponent: true})\r\n            }\r\n        }\r\n    }\r\n\r\n    const OnMouseEnterHanlder = (e) => {\r\n        console.log(\"OnMouseEnterHanlder \" + e.target.id)\r\n        if(wall && temp[parseInt(e.target.id)] !== picture.bomb && temp[parseInt(e.target.id)] !== picture.start && temp[parseInt(e.target.id)] !== picture.end){\r\n            if(temp[parseInt(e.target.id)] === picture.background){\r\n                temp[parseInt(e.target.id)] = picture.wall\r\n            }else{\r\n                temp[parseInt(e.target.id)] = picture.background\r\n            }\r\n            setTableColor(temp)\r\n        }else{\r\n            if(move.bombComponent && temp[parseInt(e.target.id)] !== picture.start && temp[parseInt(e.target.id)] !== picture.end){\r\n                temp[parseInt(e.target.id)] = picture.bomb\r\n                setTableColor(temp)\r\n            }else if(move.startComponent && temp[parseInt(e.target.id)] !== picture.bomb){\r\n                temp[parseInt(e.target.id)] = picture.start\r\n                console.log(temp[parseInt(e.target.id)])\r\n                setTableColor(temp)\r\n            }else if(move.endComponent && temp[parseInt(e.target.id)] !== picture.bomb){\r\n                temp[parseInt(e.target.id)] = picture.end\r\n                setTableColor(temp)\r\n            }\r\n        }\r\n    }\r\n\r\n    const OnMouseOutHanlder = (e) => {\r\n        console.log(\"OnMouseOutHanlder \" + e.target.id)\r\n        if(wall === false){\r\n            if((move.bombComponent || move.startComponent || move.endComponent) && (temp[parseInt(e.target.id)] === picture.bomb || temp[parseInt(e.target.id)] === picture.start || temp[parseInt(e.target.id)] === picture.end)){\r\n                temp[parseInt(e.target.id)] = picture.background\r\n                setTableColor(temp)\r\n            }\r\n        }\r\n    }\r\n\r\n    const createTable = row.map((rowIndex, index) => {\r\n        return ( \r\n            <tr key = {index} height={size}>\r\n                {col.map((colIndex, index) => {\r\n                    console.log(rowIndex + \" \" + colIndex)\r\n                    return (\r\n                        <td id = {rowIndex * colSize + colIndex} key = {index} bgcolor = {tableColor[rowIndex * colSize + colIndex]} width={size} onMouseUp = {ClickUpHandler} onMouseDown = {ClickDownHandler} onMouseEnter = {OnMouseEnterHanlder} onMouseOut = {OnMouseOutHanlder}>\r\n                            {}\r\n                        </td>)}\r\n                    )}\r\n            </tr>)}\r\n        )\r\n\r\n    return (\r\n        <div>\r\n            <table id = \"board\" border=\"1\" cellSpacing=\"0\" >\r\n                <tbody>\r\n                    {createTable}\r\n                </tbody>\r\n            </table>\r\n            <Button id = \"AddBomb\" onClick = {AddBombHanlder}>AddBomb</Button>\r\n            <Button id = \"ClearWalls\" onClick = {ClearWallHanlder}>ClearWalls</Button>\r\n            <Button id = \"Reset\" onClick = {ResetBoardHanlder}>ResetBoard</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Init","import './App.css';\nimport Header from './frontend/Header';\nimport { useReducer } from 'react';\nimport { algorithmContext, initialAlgorithm, algorithmReducer } from './Core';\nimport Init from './frontend/Init';\n\n\n\nfunction App() {\n  const [curAlgorithm, setCurAlgorithm] = useReducer(algorithmReducer, initialAlgorithm);\n\n  return (\n    <div className=\"App\">\n      <algorithmContext.Provider value={{ get: curAlgorithm, set: setCurAlgorithm }}>\n        <Header />\n      </algorithmContext.Provider>\n      <Init row={10} col={50} size={30} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}