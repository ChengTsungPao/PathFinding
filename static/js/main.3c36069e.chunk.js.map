{"version":3,"sources":["Core/index.js","frontend/HeaderHelper/Logo.js","frontend/HeaderHelper/DropdownAlgorithm.js","frontend/HeaderHelper/DropdownMaze.js","frontend/HeaderHelper/NavLink.js","frontend/HeaderHelper/NavAddBomb.js","frontend/HeaderHelper/NavButton.js","frontend/HeaderHelper/DropdownSpeed.js","frontend/TableHelper/TableIndex.js","frontend/TableHelper/MouseEvent.js","frontend/TableHelper/TableUI.js","frontend/TableHelper/ButtonEvent.js","frontend/Header.js","frontend/Table.js","App.js","reportWebVitals.js","index.js"],"names":["sysStatusContext","React","createContext","initialsysStatus","sysStatusReducer","state","action","bombContext","bombReducer","algorithmContext","algorithmReducer","logo","Navbar","Brand","href","className","src","process","width","height","variant","alt","DropdownAlgorithm","algoContext","useContext","sysStatus","Nav","Item","NavDropdown","xs","title","id","onSelect","eventKey","get","set","DropdownAlgorithmHandler","DropdownMaze","alert","NavLink","names","handlers","useState","whichHandler","setWhichHandler","Link","onClick","preWhichHandler","length","NavAddBomb","bomb","useEffect","console","log","NavButton","buttonName","setButtonName","myVariant","setMyVariant","algoName","Button","size","setTimeout","DropdownSpeed","setTitle","tableContext","rowSize","Math","floor","window","screen","colSize","startInit","search","path","speed","picture","wall","start","end","background","clickButton","buttonKind","Init","AddBomb","RemoveBomb","ClearWalls","ClearBoard","ClearPath","MouseEvent","tableVarContext","setWall","setBomb","bombComponent","startComponent","endComponent","touch","setTouch","move","setMove","initialTable","Array","from","keys","index","tableColor","setTableColor","temp","slice","i","count","SearchAnimation","setInterval","clearInterval","ReactDOM","render","document","getElementById","PathAnimation","MouseDownHandler","e","preventDefault","target","parseInt","MouseUpHandler","OnMouseEnterHanlder","OnMouseOutHanlder","TableUI","row","col","mouesEvent","createTable","map","rowIndex","colIndex","bgcolor","onMouseUp","onMouseDown","onMouseEnter","onMouseOut","align","border","cellSpacing","ButtonEvent","Addbomb","Start","Header","buttonEvent","collapseOnSelect","expand","bg","Logo","Toggle","aria-controls","Collapse","Table","App","useReducer","curAlgorithm","setCurAlgorithm","curSysStatus","setCurSysStatus","curBomb","setCurBomb","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.3c36069e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n// 目前系統狀態\r\nexport const sysStatusContext = React.createContext();\r\nexport const initialsysStatus = \"IDLE\";\r\nexport const sysStatusReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'IDLE':\r\n            return 'IDLE';\r\n        case 'RUNNING':\r\n            return 'RUNNING';\r\n        default:\r\n            return initialsysStatus;\r\n    }\r\n}\r\n\r\n// Bomb status\r\nexport const bombContext = React.createContext();\r\nexport const bombInitial = false;\r\nexport const bombReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'True':\r\n            return true;\r\n        case 'False':\r\n            return false;\r\n        default:\r\n            return bombInitial\r\n    }\r\n}\r\n\r\n// Speed\r\nexport const speedContext = React.createContext({ status: \"average\" });\r\n\r\n// 目前系統是哪種演算法\r\nexport const algorithmContext = React.createContext();\r\nexport const initialAlgorithm = \"\";\r\nexport const algorithmReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'Algorithm_Dijkstra':\r\n            return 'Algorithm_Dijkstra';\r\n        case 'Algorithm_APlus':\r\n            return 'Algorithm_APlus';\r\n        case \"Algorithm_Greedy_Best_First\":\r\n            return 'Algorithm_Greedy_Best_First';\r\n        case \"Algorithm_Swarm\":\r\n            return 'Algorithm_Swarm';\r\n        case \"Algorithm_Convergent_Swarm\":\r\n            return 'Algorithm_Convergent_Swarm';\r\n        case \"Algorithm_Bidrectional_Swarm\":\r\n            return 'Algorithm_Bidrectional_Swarm';\r\n        case \"Algorithm_Breadth_First\":\r\n            return 'Algorithm_Breadth_First';\r\n        case \"Algorithm_Depth_First\":\r\n            return 'Algorithm_Depth_First';\r\n        default:\r\n            return initialAlgorithm;\r\n    }\r\n}","import React from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\n\r\nfunction logo() {\r\n    return (\r\n        <Navbar.Brand href=\"/PathingFinding/\" className='Navbar-logo'>\r\n            <img\r\n                src={process.env.PUBLIC_URL + '/logo.png'} // 取得public資料夾路徑\r\n                width=\"50\"\r\n                height=\"50\"\r\n                className='d-inline-block'\r\n                variant='test'\r\n                alt='Logo'\r\n            /> {' '}\r\n                    Path-Finding\r\n        </Navbar.Brand>\r\n    )\r\n}\r\n\r\nexport default logo\r\n","import React, { useContext } from 'react';\r\nimport { NavDropdown, Nav } from 'react-bootstrap';\r\nimport { algorithmContext, sysStatusContext } from '../../Core';\r\n\r\nfunction DropdownAlgorithm({ className }) {\r\n    const algoContext = useContext(algorithmContext);\r\n    const sysStatus = useContext(sysStatusContext);\r\n\r\n    const DropdownAlgorithmHandler = (eventKey) => {\r\n\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Algorithm_Dijkstra\":\r\n                algoContext.set('Algorithm_Dijkstra');\r\n                break;\r\n            case \"Algorithm_APlus\":\r\n                algoContext.set('Algorithm_APlus');\r\n                break;\r\n            case \"Algorithm_Greedy_Best_First\":\r\n                algoContext.set('Algorithm_Greedy_Best_First');\r\n                break;\r\n            case \"Algorithm_Swarm\":\r\n                algoContext.set('Algorithm_Swarm');\r\n                break;\r\n            case \"Algorithm_Convergent_Swarm\":\r\n                algoContext.set('Algorithm_Convergent_Swarm');\r\n                break;\r\n            case \"Algorithm_Bidrectional_Swarm\":\r\n                algoContext.set('Algorithm_Bidrectional_Swarm');\r\n                break;\r\n            case \"Algorithm_Breadth_First\":\r\n                algoContext.set('Algorithm_Breadth_First');\r\n                break;\r\n            case \"Algorithm_Depth_First\":\r\n                algoContext.set('Algorithm_Depth_First');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item>\r\n            <NavDropdown xs={1} title=\"Algorithms\" id=\"DropdownAlgorithm\" onSelect={(eventKey) => DropdownAlgorithmHandler(eventKey)} className={className}>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Dijkstra\">Dijkstra's Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_APlus\">A+ Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Greedy_Best_First\">Greedy Best-First Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Swarm\">Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Convergent_Swarm\">Convergent Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Bidrectional_Swarm\">Bidirectional Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Breadth_First\">Breadth-First Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Depth_First\">Depth-First Search</NavDropdown.Item>\r\n            </NavDropdown>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default DropdownAlgorithm;","import React, { useContext } from 'react'\r\nimport { NavDropdown, Nav } from 'react-bootstrap';\r\nimport { sysStatusContext } from '../../Core';\r\n\r\nfunction DropdownMaze({ className }) {\r\n    const sysStatus = useContext(sysStatusContext);\r\n\r\n    const DropdownMazeHandler = (eventKey) => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Maze_Recursive_Division\":\r\n                alert(\"Maze_Recursive_Division\");\r\n                break;\r\n            case \"Maze_Recursive_Division_vertical\":\r\n                alert(\"Maze_Recursive_Division_vertical\");\r\n                break;\r\n            case \"Maze_Recursive_Division_horizontal\":\r\n                alert(\"Maze_Recursive_Division_horizontal\");\r\n                break;\r\n            case \"Maze_Basic_Random\":\r\n                alert(\"Maze_Basic_Random\");\r\n                break;\r\n            case \"Maze_Basic_Weight_Maze\":\r\n                alert(\"Maze_Basic_Weight_Maze\");\r\n                break;\r\n            case \"Maze_Simple_stair_pattern\":\r\n                alert(\"Maze_Simple_stair_pattern\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item>\r\n            <NavDropdown xs={1} title=\"Mazes & Patterns\" id=\"DropdownMaze\" onSelect={DropdownMazeHandler} className={className}>\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division\">Recursive Division</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division_vertical\">Recursive Division(vertical skew)</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division_horizontal\">Recursive Division(horizontal skew)</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Basic_Random\">Basic Random Maze</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Basic_Weight_Maze\">Basic Weight Maze</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Simple_stair_pattern\">Simple Stair Pattern</NavDropdown.Item>\r\n            </NavDropdown>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default DropdownMaze;","import React, { useState, useContext } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { sysStatusContext } from '../../Core';\r\n\r\nfunction NavLink({ names, handlers, className }) {\r\n    const [whichHandler, setWhichHandler] = useState(0);\r\n    const sysStatus = useContext(sysStatusContext);\r\n\r\n    const localHandler = () => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        setWhichHandler(preWhichHandler => (preWhichHandler + 1) % handlers.length);\r\n        handlers[whichHandler]();\r\n    }\r\n\r\n    return (\r\n        <Nav.Item xs={1}>\r\n            <Nav.Link onClick={localHandler} className={className}>{names[whichHandler]}</Nav.Link>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default NavLink\r\n","/* Links inteface */\r\n\r\nimport React, { useState, useContext, useEffect } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { bombContext, sysStatusContext } from '../../Core';\r\n\r\nfunction NavAddBomb({ names, handlers, className }) {\r\n    const [whichHandler, setWhichHandler] = useState(0);\r\n    const bomb = useContext(bombContext);\r\n    const sysStatus = useContext(sysStatusContext);\r\n\r\n    useEffect(() => {\r\n\r\n        if (bomb.get === true) {\r\n            setWhichHandler(1);\r\n        } else {\r\n            setWhichHandler(0);\r\n        }\r\n\r\n        handlers[whichHandler]();\r\n    }, [bomb])\r\n\r\n    const localHandler = () => {\r\n\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        console.log(bomb.get)\r\n\r\n        if (bomb.get === true) {\r\n            // setWhichHandler(0);\r\n            bomb.set(\"False\");\r\n            // bomb.status = false;\r\n        } else {\r\n            // setWhichHandler(1);\r\n            bomb.set(\"True\");\r\n            // bomb.status = true;\r\n        }\r\n        // handlers[whichHandler]();\r\n    }\r\n\r\n    return (\r\n        <Nav.Item xs={1}>\r\n            <Nav.Link onClick={localHandler} className={className}>{names[whichHandler]}</Nav.Link>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default NavAddBomb\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { algorithmContext, sysStatusContext, bombContext } from '../../Core';\r\n\r\nconst NavButton = () => {\r\n\r\n    const [buttonName, setButtonName] = useState(\"Visualize !\");\r\n    const [myVariant, setMyVariant] = useState(\"\");\r\n    const algoContext = useContext(algorithmContext);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const bomb = useContext(bombContext);\r\n\r\n    useEffect(() => {\r\n        setMyVariant('success');\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        var algoName = \"\";\r\n        switch (algoContext.get) {\r\n            case \"Algorithm_Dijkstra\":\r\n                algoName = \"Dijkstra's\";\r\n                break;\r\n            case 'Algorithm_APlus':\r\n                algoName = \"A*\";\r\n                break;\r\n            case \"Algorithm_Greedy_Best_First\":\r\n                algoName = \"Greedy\";\r\n                break;\r\n            case \"Algorithm_Swarm\":\r\n                algoName = \"Swarm\";\r\n                break;\r\n            case \"Algorithm_Convergent_Swarm\":\r\n                algoName = \"Convergent Swarm\";\r\n                break;\r\n            case \"Algorithm_Bidrectional_Swarm\":\r\n                algoName = \"Bidrectional Swarm\";\r\n                break;\r\n            case \"Algorithm_Breadth_First\":\r\n                algoName = \"BFS\";\r\n                break;\r\n            case \"Algorithm_Depth_First\":\r\n                algoName = \"DFS\";\r\n                break;\r\n            default:\r\n                algoName = \"\";\r\n                break;\r\n        }\r\n\r\n        setButtonName(`Visualize ${algoName}!`);\r\n    }, [algoContext.get])\r\n\r\n    const resetButton = () => {\r\n        setMyVariant('success');\r\n        sysStatus.set(\"IDLE\");\r\n    }\r\n\r\n    const handler = () => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        bomb.set(bomb.get ? \"False\" : \"True\"); // For showing listening to Context\r\n        if (algoContext.get === \"\") {\r\n            setButtonName(\"Pick an Algorithm\");\r\n        } else {\r\n            sysStatus.set(\"RUNNING\");\r\n            setMyVariant('danger');\r\n            setTimeout(() => resetButton(), 10000);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item xs={1}>\r\n            <Button id=\"navButton\" variant={myVariant} size=\"lg\" onClick={handler}>{buttonName}</Button>\r\n        </Nav.Item>\r\n    )\r\n};\r\n\r\nexport default NavButton\r\n","import React, { useState, useContext } from 'react';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport { sysStatusContext } from '../../Core';\r\n\r\nfunction DropdownSpeed({ className }) {\r\n    const [title, setTitle] = useState('Average');\r\n    const sysStatus = useContext(sysStatusContext);\r\n\r\n    const DropdownSpeedHandler = (eventKey) => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Fast\":\r\n                setTitle(\"Fast\");\r\n                alert(\"Speed Fast!\");\r\n                break;\r\n            case \"Average\":\r\n                setTitle(\"Average\");\r\n                alert(\"Speed Average!\");\r\n                break;\r\n            case \"Slow\":\r\n                setTitle(\"Slow\");\r\n                alert(\"Speed Slow!\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <NavDropdown xs={1} title={`Speed: ${title}`} id=\"DropdownSpeed\" onSelect={DropdownSpeedHandler} className={className}>\r\n            <NavDropdown.Item eventKey=\"Fast\">Fast</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Average\">Average</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Slow\">Slow</NavDropdown.Item>\r\n        </NavDropdown>\r\n    )\r\n}\r\n\r\nexport default DropdownSpeed;","import { createContext } from 'react'\r\n\r\n\r\nexport const tableContext = createContext(\r\n    {\r\n        rowSize: Math.floor(window.screen.height / 30) - 7, \r\n        colSize: Math.floor(window.screen.width / 30), \r\n        size: 30,\r\n        startInit: \"InitTable\", \r\n        search: \"init\",\r\n        path: \"init\",\r\n        speed: 500,\r\n        picture: {wall: \"#0000E6\", bomb: \"red\", start: \"#E69500\", end: \"#E000E0\", background: \"white\", search: \"#26FFFF\", path: \"#F0F000\"},\r\n        clickButton: \"init\",\r\n        buttonKind: {Init: \"init\", AddBomb: \"AddBomb\", RemoveBomb: \"RemoveBomb\", ClearWalls: \"ClearWalls\", ClearBoard: \"ClearBoard\", start: \"start\", ClearPath: \"ClearPath\"}\r\n    }\r\n)\r\n\r\n\r\n  ","import { useState, useContext, useEffect } from 'react'\r\nimport { tableContext } from './TableIndex'\r\nimport ReactDOM from 'react-dom'\r\nimport TableUI from './TableUI';\r\n\r\n\r\nfunction MouseEvent() {\r\n    const tableVarContext = useContext(tableContext)\r\n    const [rowSize, colSize] = [tableVarContext.rowSize, tableVarContext.colSize]\r\n    const picture = tableVarContext.picture\r\n\r\n    const [wall, setWall] = useState(false)\r\n    const [bomb, setBomb] = useState(false)\r\n    const [touch, setTouch] = useState({bombComponent: false, startComponent: false, endComponent: false})\r\n    const [move, setMove] = useState({bombComponent: false, startComponent: false, endComponent: false})\r\n\r\n    const initialTable = Array.from(Array(rowSize * colSize).keys(), index => {\r\n        if(index === Math.floor(rowSize / 2) * colSize + Math.floor(colSize / 4)){\r\n            return picture.start\r\n        }else if(index === Math.floor(rowSize / 2 + 1) * colSize - Math.floor(colSize / 4)){\r\n            return picture.end\r\n        }else{\r\n            return picture.background\r\n        }\r\n    })\r\n    const [tableColor, setTableColor] = useState(initialTable)\r\n    var temp = tableColor.slice()\r\n\r\n    function SearchAnimation(search, speed, count) { \r\n        const SearchAnimation = setInterval(() => {\r\n            console.log(count)\r\n            if(count === search.length){\r\n                clearInterval(SearchAnimation)\r\n            }else{\r\n                for(var i = 0;i < search[count].length;i++){\r\n                    temp[search[count][i][0] * tableVarContext.colSize + search[count][i][1]] = picture.search\r\n                }\r\n                setTableColor(temp)\r\n            }\r\n            count += 1\r\n            ReactDOM.render(\r\n                <TableUI />,\r\n                document.getElementById('UI')\r\n            )\r\n        }, speed)\r\n    }\r\n\r\n    function PathAnimation(path, speed, count) {         \r\n        const PathAnimation = setInterval(() => {\r\n            console.log(count)\r\n            if(count === path.length){\r\n                clearInterval(PathAnimation)\r\n            }else{\r\n                temp[path[count][0] * tableVarContext.colSize + path[count][1]] = picture.path\r\n                console.log(path[count][0] * tableVarContext.colSize + path[count][1])\r\n                setTableColor(temp)\r\n            }\r\n            count += 1\r\n            ReactDOM.render(\r\n                <TableUI />,\r\n                document.getElementById('UI')\r\n            )\r\n        }, speed)\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"ButtonHanlder\")\r\n        if(bomb === false && tableVarContext.clickButton === tableVarContext.buttonKind.AddBomb){\r\n            console.log(\"AddBomb\")\r\n            setBomb(true)\r\n            temp[Math.floor(rowSize / 2) * colSize + Math.floor(colSize / 2)] = picture.bomb\r\n            setTableColor(temp)\r\n            tableVarContext.clickButton = \"\"\r\n\r\n        }else if(bomb && tableVarContext.clickButton === tableVarContext.buttonKind.RemoveBomb){\r\n            console.log(\"RemoveBomb\")\r\n            for(var i = 0; i < rowSize * colSize;i++){\r\n                if(temp[i] === picture.bomb){\r\n                    temp[i] = picture.background\r\n                }\r\n            }\r\n            setBomb(false)\r\n            setTableColor(temp)\r\n            tableVarContext.clickButton = \"\"\r\n\r\n        }else if(tableVarContext.clickButton === tableVarContext.buttonKind.ClearWalls){\r\n            console.log(\"ClearWall\")\r\n            for(var i = 0; i < rowSize * colSize;i++){\r\n                if(temp[i] === picture.wall){\r\n                    temp[i] = picture.background\r\n                }\r\n            }\r\n            setTableColor(temp)\r\n            setTouch(false)\r\n            tableVarContext.clickButton = \"\"\r\n\r\n        }else if(tableVarContext.clickButton === tableVarContext.buttonKind.ClearBoard){\r\n            console.log(\"ClearBoard\")\r\n            setTableColor(initialTable)\r\n            setBomb(false)\r\n            setTouch(false)\r\n            tableVarContext.clickButton = \"\"\r\n\r\n        }else if(tableVarContext.clickButton === tableVarContext.buttonKind.start){\r\n            console.log(\"Start\")\r\n            const [search, path, speed] = [tableVarContext.search, tableVarContext.path, tableVarContext.speed]\r\n            tableVarContext.startInit = temp.slice()\r\n            var count = 0\r\n            SearchAnimation(search, speed, count)\r\n            setTimeout(() => {PathAnimation(path, speed, count)}, speed * (search.length + 1))\r\n            tableVarContext.clickButton = \"\"\r\n\r\n        }else if(tableVarContext.clickButton === tableVarContext.buttonKind.ClearPath){\r\n            console.log(\"ClearPath\")\r\n            setTableColor(tableVarContext.startInit)\r\n            tableVarContext.clickButton = \"\"\r\n\r\n        }else if(tableVarContext.clickButton === tableVarContext.buttonKind.Init){\r\n            tableVarContext.clickButton = \"\"\r\n            ReactDOM.render(\r\n                <TableUI />,\r\n                document.getElementById('UI')\r\n            )\r\n        }\r\n    }, [tableVarContext.clickButton])\r\n\r\n    const MouseUpHandler = (e) => {\r\n        console.log(\"MouseUpHandler \" + e.target.id)\r\n        if(wall){\r\n            setWall(false)\r\n        }else{\r\n            if(temp[parseInt(e.target.id)] === picture.bomb){\r\n                setMove({...move, bombComponent: false})\r\n            }else if(temp[parseInt(e.target.id)] === picture.start){\r\n                setMove({...move, startComponent: false})\r\n            }else{\r\n                setMove({...move, endComponent: false})\r\n            }\r\n        }\r\n    }\r\n\r\n    const MouseDownHandler = (e) => {\r\n        e.preventDefault()\r\n        console.log(\"ClickDownHandler \" + e.target.id)\r\n        if(temp[parseInt(e.target.id)] !== picture.bomb && temp[parseInt(e.target.id)] !== picture.start && temp[parseInt(e.target.id)] !== picture.end){\r\n            setWall(true)\r\n            if(temp[parseInt(e.target.id)] === picture.background){\r\n                temp[parseInt(e.target.id)] = picture.wall\r\n            }else{\r\n                temp[parseInt(e.target.id)] = picture.background\r\n            }\r\n            setTableColor(temp)\r\n        }else{\r\n            if(temp[parseInt(e.target.id)] === picture.bomb){\r\n                setMove({...move, bombComponent: true})\r\n            }else if(temp[parseInt(e.target.id)] === picture.start){\r\n                setMove({...move, startComponent: true})\r\n            }else{\r\n                setMove({...move, endComponent: true})\r\n            }\r\n        }\r\n    }\r\n\r\n    const OnMouseEnterHanlder = (e) => {\r\n        console.log(\"OnMouseEnterHanlder \" + e.target.id)\r\n        if(wall && temp[parseInt(e.target.id)] !== picture.bomb && temp[parseInt(e.target.id)] !== picture.start && temp[parseInt(e.target.id)] !== picture.end){\r\n            if(temp[parseInt(e.target.id)] === picture.wall){\r\n                temp[parseInt(e.target.id)] = picture.background\r\n            }else{\r\n                temp[parseInt(e.target.id)] = picture.wall\r\n            }\r\n            setTableColor(temp)\r\n        }else{\r\n            if(move.bombComponent && temp[parseInt(e.target.id)] !== picture.start && temp[parseInt(e.target.id)] !== picture.end){\r\n                if(temp[parseInt(e.target.id)] === picture.wall){\r\n                    setTouch({...touch, bombComponent: true})\r\n                }else{\r\n                    setTouch({...touch, bombComponent: false})\r\n                }\r\n                temp[parseInt(e.target.id)] = picture.bomb\r\n                setTableColor(temp)\r\n            }else if(move.startComponent && temp[parseInt(e.target.id)] !== picture.bomb && temp[parseInt(e.target.id)] !== picture.end){\r\n                if(temp[parseInt(e.target.id)] === picture.wall){\r\n                    setTouch({...touch, startComponent: true})\r\n                }else{\r\n                    setTouch({...touch, startComponent: false})\r\n                }\r\n                temp[parseInt(e.target.id)] = picture.start\r\n                setTableColor(temp)\r\n            }else if(move.endComponent && temp[parseInt(e.target.id)] !== picture.bomb && temp[parseInt(e.target.id)] !== picture.start){\r\n                if(temp[parseInt(e.target.id)] === picture.wall){\r\n                    setTouch({...touch, endComponent: true})\r\n                }else{\r\n                    setTouch({...touch, endComponent: false})\r\n                }\r\n                temp[parseInt(e.target.id)] = picture.end\r\n                setTableColor(temp)\r\n            }\r\n        }\r\n    }\r\n\r\n    const OnMouseOutHanlder = (e) => {\r\n        console.log(\"OnMouseOutHanlder \" + e.target.id)\r\n        if(wall === false){\r\n            if(move.bombComponent && temp[parseInt(e.target.id)] !== picture.start && temp[parseInt(e.target.id)] !== picture.end){\r\n                if(touch.bombComponent){\r\n                    temp[parseInt(e.target.id)] = picture.wall\r\n                }else{\r\n                    temp[parseInt(e.target.id)] = picture.background\r\n                }\r\n                setTableColor(temp)\r\n            }else if(move.startComponent && temp[parseInt(e.target.id)] !== picture.bomb && temp[parseInt(e.target.id)] !== picture.end){\r\n                if(touch.startComponent){\r\n                    temp[parseInt(e.target.id)] = picture.wall\r\n                }else{\r\n                    temp[parseInt(e.target.id)] = picture.background\r\n                }\r\n                setTableColor(temp)\r\n            }else if(move.endComponent && temp[parseInt(e.target.id)] !== picture.bomb && temp[parseInt(e.target.id)] !== picture.start){\r\n                if(touch.endComponent){\r\n                    temp[parseInt(e.target.id)] = picture.wall\r\n                }else{\r\n                    temp[parseInt(e.target.id)] = picture.background\r\n                }\r\n                setTableColor(temp)\r\n            }\r\n        }\r\n    }\r\n\r\n    return {MouseDownHandler, MouseUpHandler, OnMouseEnterHanlder, OnMouseOutHanlder, tableColor}\r\n\r\n}\r\n\r\nexport default MouseEvent\r\n\r\n\r\n","import React, { useContext } from 'react'\r\nimport MouseEvent from './MouseEvent'\r\nimport { tableContext } from './TableIndex'\r\n\r\n\r\nfunction TableUI() {\r\n    const tableVarContext = useContext(tableContext)\r\n    const [rowSize, colSize, size] = [tableVarContext.rowSize, tableVarContext.colSize, tableVarContext.size]\r\n\r\n    const row = Array.from(Array(rowSize).keys())\r\n    const col = Array.from(Array(colSize).keys())\r\n\r\n    const mouesEvent = MouseEvent()\r\n    const [MouseDownHandler, MouseUpHandler, OnMouseEnterHanlder, OnMouseOutHanlder, tableColor] = [mouesEvent.MouseDownHandler, mouesEvent.MouseUpHandler, mouesEvent.OnMouseEnterHanlder, mouesEvent.OnMouseOutHanlder, mouesEvent.tableColor]\r\n\r\n    const createTable = row.map((rowIndex, index) => {\r\n        return ( \r\n            <tr key = {index} height={size}>\r\n                {col.map((colIndex, index) => {\r\n                    // console.log(rowIndex + \" \" + colIndex)\r\n                    return (\r\n                        <td id = {rowIndex * colSize + colIndex} key = {index} bgcolor = {tableColor[rowIndex * colSize + colIndex]} width={size} onMouseUp = {MouseUpHandler} onMouseDown = {MouseDownHandler} onMouseEnter = {OnMouseEnterHanlder} onMouseOut = {OnMouseOutHanlder}>\r\n                            {}\r\n                        </td>)}\r\n                    )}\r\n            </tr>)}\r\n        )\r\n      \r\n    return (\r\n        <div>\r\n            <table id = \"board\" align=\"center\" border=\"1\" cellSpacing=\"0\" >\r\n                <tbody>\r\n                    {createTable}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableUI\r\n","import { useContext } from 'react'\r\nimport TableUI from './TableUI';\r\nimport { tableContext } from './TableIndex'\r\nimport ReactDOM from 'react-dom'\r\n\r\n\r\nfunction ButtonEvent() {\r\n    const tableVarContext = useContext(tableContext)\r\n\r\n    const Addbomb = () => {\r\n        tableVarContext.clickButton = tableVarContext.buttonKind.AddBomb\r\n        ReactDOM.render(\r\n            <TableUI />,\r\n            document.getElementById('UI')\r\n        )\r\n    }\r\n\r\n    const RemoveBomb = () => {\r\n        tableVarContext.clickButton = tableVarContext.buttonKind.RemoveBomb\r\n        ReactDOM.render(\r\n            <TableUI />,\r\n            document.getElementById('UI')\r\n        )\r\n    }\r\n    \r\n    const ClearWalls = () => {\r\n        tableVarContext.clickButton = tableVarContext.buttonKind.ClearWalls\r\n        ReactDOM.render(\r\n            <TableUI />,\r\n            document.getElementById('UI')\r\n        )\r\n    }\r\n    \r\n    const ClearBoard = () => {\r\n        tableVarContext.clickButton = tableVarContext.buttonKind.ClearBoard\r\n        ReactDOM.render(\r\n            <TableUI />,\r\n            document.getElementById('UI')\r\n        )\r\n    }\r\n\r\n    const Start = (search, path, speed) => (e) => {\r\n        tableVarContext.search = search\r\n        tableVarContext.path = path\r\n        tableVarContext.speed = speed\r\n        tableVarContext.clickButton = tableVarContext.buttonKind.start\r\n        ReactDOM.render(\r\n            <TableUI />,\r\n            document.getElementById('UI')\r\n        )\r\n    }\r\n\r\n    const ClearPath = () => {\r\n        tableVarContext.clickButton = tableVarContext.buttonKind.ClearPath\r\n        ReactDOM.render(\r\n            <TableUI />,\r\n            document.getElementById('UI')\r\n        )\r\n    }\r\n\r\n    return {Addbomb, RemoveBomb, ClearWalls, ClearBoard, Start, ClearPath}\r\n}\r\n\r\nexport default ButtonEvent\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Logo from './HeaderHelper/Logo';\r\nimport DropdownAlgorithm from './HeaderHelper/DropdownAlgorithm';\r\nimport DropdownMaze from './HeaderHelper/DropdownMaze';\r\nimport NavLink from './HeaderHelper/NavLink';\r\nimport NavAddBomb from './HeaderHelper/NavAddBomb';\r\nimport NavButton from './HeaderHelper/NavButton';\r\nimport DropdownSpeed from './HeaderHelper/DropdownSpeed';\r\nimport ButtonEvent from './TableHelper/ButtonEvent';\r\n\r\nfunction Header() {\r\n    const buttonEvent = ButtonEvent()\r\n\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"xl\" bg='dark' variant='dark'>\r\n            <Logo />\r\n            <Navbar.Toggle aria-controls=\"Collapse\" />\r\n            <Navbar.Collapse id=\"Collapse\" className='nvbar-collapse'>\r\n                <Nav className=\"nav-bar\">\r\n                    <DropdownAlgorithm />\r\n                    <DropdownMaze />\r\n                    <NavAddBomb names={[\"Add Bomb\", \"Remove Bomb\"]} handlers={[buttonEvent.Addbomb, buttonEvent.RemoveBomb]} />\r\n                    <NavButton />\r\n                    <NavLink names={[\"Clear Board\"]} handlers={[buttonEvent.ClearBoard]} />\r\n                    <NavLink names={[\"Clear Walls & Weights\"]} handlers={[buttonEvent.ClearWalls]} />\r\n                    <NavLink names={[\"Clear Path\"]} handlers={[() => alert('Clear Path !')]} />\r\n                    <DropdownSpeed />\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Header\r\n","import TableUI from './TableHelper/TableUI'\r\n\r\nfunction Table() {    \r\n    return (\r\n        <div id = \"UI\">\r\n            <TableUI/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import './App.css';\r\nimport { algorithmReducer, initialAlgorithm, algorithmContext } from './Core';\r\nimport { sysStatusReducer, initialsysStatus, sysStatusContext } from './Core';\r\nimport { bombContext, bombInitial, bombReducer } from './Core';\r\nimport Header from './frontend/Header';\r\nimport { useReducer } from 'react';\r\nimport Table from './frontend/Table';\r\nimport ButtonEvent from './frontend/TableHelper/ButtonEvent'\r\n\r\n\r\nfunction App() {\r\n  const [curAlgorithm, setCurAlgorithm] = useReducer(algorithmReducer, initialAlgorithm);\r\n  const [curSysStatus, setCurSysStatus] = useReducer(sysStatusReducer, initialsysStatus);\r\n  const [curBomb, setCurBomb] = useReducer(bombReducer, bombInitial);\r\n  const [search, path, speed] = [ [[[1,2], [2,2], [3,2], [4,2], [5,2], [6,2], [7,2], [8,2], [9,2], [10,2]], \r\n                                   [[1,3], [2,3], [3,3], [4,3], [5,3], [6,3], [7,3], [8,3], [9,3], [10,3]],\r\n                                   [[1,4], [2,4], [3,4], [4,4], [5,4], [6,4], [7,4], [8,4], [9,4], [10,4]],\r\n                                   [[1,5], [2,5], [3,5], [4,5], [5,5], [6,5], [7,5], [8,5], [9,5], [10,5]],\r\n                                   [[1,6], [2,6], [3,6], [4,6], [5,6], [6,6], [7,6], [8,6], [9,6], [10,6]]]\r\n                                  ,\r\n                                   [[1,2], [2,2], [3,2], [4,2], [5,2], [6,2], [7,2], [8,2], [9,2], [10,2]] \r\n                                  ,\r\n                                  50\r\n                                ]\r\n  const buttonEvent = ButtonEvent()\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <bombContext.Provider value={{ get: curBomb, set: setCurBomb }}>\r\n        <sysStatusContext.Provider value={{ get: curSysStatus, set: setCurSysStatus }}>\r\n          <algorithmContext.Provider value={{ get: curAlgorithm, set: setCurAlgorithm }}>\r\n            <Header />\r\n          </algorithmContext.Provider>\r\n        </sysStatusContext.Provider>\r\n      </bombContext.Provider>\r\n      <Table />\r\n      <button onClick = {buttonEvent.Start(search, path, speed)}>start</button>\r\n      <button onClick = {buttonEvent.ClearPath}>ClearPath</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  <App />,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}