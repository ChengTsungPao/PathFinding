{"version":3,"sources":["Frontend/HeaderHelper/Logo.js","Frontend/TableHelper/TableIndex.js","Core/index.js","HOC/Colored.js","Frontend/HeaderHelper/DropdownAlgorithm.js","Frontend/HeaderHelper/DropdownMaze.js","Frontend/HeaderHelper/NavLink.js","Frontend/HeaderHelper/NavAddBomb.js","Core/IsMount.js","Frontend/TableHelper/Animation.js","Frontend/TableHelper/WhichComp.js","Frontend/TableHelper/ButtonEvent.js","Frontend/HeaderHelper/NavButton.js","Backend/TestAlgorithm.js","Frontend/HeaderHelper/NavClearBoard.js","Frontend/HeaderHelper/DropdownSpeed.js","Frontend/Header.js","Frontend/TableHelper/MouseEvent.js","Frontend/TableHelper/TableUI.js","Frontend/Table.js","Frontend/HeaderHelper/Info.js","Frontend/HeaderHelper/AlgorithmDescriptor.js","App.js","reportWebVitals.js","index.js"],"names":["logo","Navbar","Brand","href","className","src","process","width","height","variant","alt","tableVar","rowSize","Math","floor","window","screen","colSize","size","id","newId","componentKind","touchContext","createContext","touchInitial","start","end","bomb","touchReducer","state","action","under","moveContext","moveReducer","setTable","index","document","getElementById","toString","sysStatusContext","React","initialsysStatus","sysStatusReducer","bombContext","bombInitial","bombReducer","speedContext","speedReducer","algorithmContext","algorithmReducer","Colored","sysStatus","useContext","useState","isHover","setIsHover","setClassName","get","DropdownAlgorithm","algoContext","toggleHandler","Nav","Item","NavDropdown","xs","title","onSelect","eventKey","set","DropdownAlgorithmHandler","onMouseEnter","onMouseLeave","DropdownMaze","alert","NavLink","names","handlers","whichHandler","setWhichHandler","Link","onClick","preWhichHandler","length","NavAddBomb","isMount","useRef","useEffect","current","IsMount","Animation","arr","speed","count","myCallbackFunction","arrAnimation","setInterval","clearInterval","WhichComponent","touch","kind","type","rKind","ButtonEvent","Start","search","path","console","log","searchAnimation","SearchAnimation","setTimeout","PathAnimation","Addbomb","RemoveBomb","i","ClearWalls","ClearPath","ClearBoard","NavButton","buttonName","setButtonName","myVariant","setMyVariant","buttonEvent","algoName","Button","NavClearBoard","DropdownSpeed","setTitle","Header","collapseOnSelect","expand","bg","Logo","Toggle","aria-controls","Collapse","MouseEvent","move","MouseDownHandler","e","preventDefault","target","whichComponent","MouseUpHandler","OnMouseEnterHanlder","whichOldComponent","whichNewComponent","TableUI","row","Array","from","keys","col","mouesEvent","createTable","map","rowIndex","colIndex","onMouseUp","onMouseDown","align","border","cellSpacing","Table","Spinner","animation","Info","AlgorithmDescriptor","algorithmName","setAlgorithmName","discription1","setDiscription1","discription2","setDiscription2","d1","d2","App","useReducer","curAlgorithm","setCurAlgorithm","curSysStatus","setCurSysStatus","curBomb","setCurBomb","curSpeed","setCurSpeed","setTouch","setMove","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.57037a68.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\n\r\nfunction logo() {\r\n    return (\r\n        <Navbar.Brand href=\"/PathingFinding/\" className='Navbar-logo'>\r\n            <img\r\n                src={process.env.PUBLIC_URL + '/logo.png'} // 取得public資料夾路徑\r\n                width=\"50\"\r\n                height=\"50\"\r\n                className='d-inline-block'\r\n                variant='test'\r\n                alt='Logo'\r\n            /> {' '}\r\n                    Path-Finding\r\n        </Navbar.Brand>\r\n    )\r\n}\r\n\r\nexport default logo\r\n","import { createContext } from 'react'\r\n\r\n\r\nexport const tableVar = {\r\n    rowSize: Math.floor(window.screen.height / 30) - 12, // Math.floor((window.screen.height - document.getElementById(\"navbar\").clientHeight) / 30)\r\n    colSize: Math.floor(window.screen.width / 30), \r\n    size: 30,\r\n    id: \"0\",\r\n    newId: \"0\"\r\n}\r\n\r\nexport const componentKind =  {wall: \"wall\", bomb: \"bomb\", start: \"start\", end: \"end\", background: \"background\", search: \"search\", path: \"path\"}\r\n\r\n// touch status\r\nexport const touchContext = createContext()\r\nexport const touchInitial = {start: componentKind.background, end: componentKind.background, bomb: componentKind.background}\r\nexport const touchReducer = (state, action) => {\r\n    switch (action.componentKind) {\r\n        case componentKind.start:\r\n            return {...state, start: action.under}\r\n        case componentKind.end:\r\n            return {...state, end: action.under}\r\n        case componentKind.bomb:\r\n            return {...state, bomb: action.under}\r\n        default:\r\n            return touchInitial\r\n    }\r\n}\r\n\r\n// move component\r\nexport const moveContext = createContext()\r\nexport const moveInitial = \"\"\r\nexport const moveReducer = (state, action) => {\r\n    switch (action) {\r\n        case componentKind.start:\r\n            return action\r\n        case componentKind.end:\r\n            return action\r\n        case componentKind.bomb:\r\n            return action\r\n        case componentKind.wall:\r\n            return action\r\n        default:\r\n            return moveInitial\r\n    }\r\n}\r\n\r\nexport function setTable(index, componentKind){\r\n    document.getElementById(index.toString()).className = componentKind\r\n}\r\n","import React from 'react'\r\nimport { tableVar } from '../Frontend/TableHelper/TableIndex'\r\n\r\n// component position\r\nexport var position = {\r\n    start: [Math.floor(tableVar.rowSize / 2), Math.floor(tableVar.colSize / 4)],\r\n    end: [Math.floor(tableVar.rowSize / 2), tableVar.colSize - Math.floor(tableVar.colSize / 4)],\r\n    bomb: false,\r\n    wall: false\r\n}\r\n\r\n\r\n// 目前系統狀態\r\nexport const sysStatusContext = React.createContext();\r\nexport const initialsysStatus = \"LOADING\";\r\nexport const sysStatusReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'IDLE':\r\n            return 'IDLE';\r\n        case 'RUNNING':\r\n            return 'RUNNING';\r\n        case 'LOADING':\r\n            return 'LOADING';\r\n        default:\r\n            return initialsysStatus;\r\n    }\r\n}\r\n\r\n// Bomb status\r\nexport const bombContext = React.createContext();\r\nexport const bombInitial = false;\r\nexport const bombReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'True':\r\n            return true;\r\n        case 'False':\r\n            return false;\r\n        default:\r\n            return bombInitial\r\n    }\r\n}\r\n\r\n// Speed\r\nexport const speedContext = React.createContext();\r\nexport const speedInitial = \"average\";\r\nexport const speedReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'Fast':\r\n            return \"Fast\";\r\n        case 'Average':\r\n            return \"Average\";\r\n        case 'Slow':\r\n            return \"Slow\";\r\n        default:\r\n            return bombInitial\r\n    }\r\n}\r\n\r\n// 目前系統是哪種演算法\r\nexport const algorithmContext = React.createContext();\r\nexport const initialAlgorithm = \"\";\r\nexport const algorithmReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'Algorithm_Dijkstra':\r\n            return 'Algorithm_Dijkstra';\r\n        case 'Algorithm_APlus':\r\n            return 'Algorithm_APlus';\r\n        case \"Algorithm_Greedy_Best_First\":\r\n            return 'Algorithm_Greedy_Best_First';\r\n        case \"Algorithm_Swarm\":\r\n            return 'Algorithm_Swarm';\r\n        case \"Algorithm_Convergent_Swarm\":\r\n            return 'Algorithm_Convergent_Swarm';\r\n        case \"Algorithm_Bidrectional_Swarm\":\r\n            return 'Algorithm_Bidrectional_Swarm';\r\n        case \"Algorithm_Breadth_First\":\r\n            return 'Algorithm_Breadth_First';\r\n        case \"Algorithm_Depth_First\":\r\n            return 'Algorithm_Depth_First';\r\n        default:\r\n            return initialAlgorithm;\r\n    }\r\n}","import { useState, useContext } from 'react';\r\nimport { sysStatusContext } from '../Core';\r\nimport '../App.scss';\r\n\r\nconst Colored = () => {\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const [isHover, setIsHover] = useState(false);\r\n    const [className, setClassName] = useState(\"nav-link-default\");\r\n\r\n    const toggleHandler = () => {\r\n        if (isHover) {\r\n            setClassName(\"nav-link-default\");\r\n            setIsHover(false);\r\n        } else {\r\n            if (sysStatus.get !== \"IDLE\") {\r\n                setClassName(\"nav-link-red\");\r\n            } else {\r\n                setClassName(\"nav-link-green\");\r\n            }\r\n            setIsHover(true);\r\n        }\r\n    }\r\n\r\n    return [className, toggleHandler];\r\n}\r\n\r\nexport default Colored\r\n","import React, { useContext } from 'react';\r\nimport { NavDropdown, Nav } from 'react-bootstrap';\r\nimport { algorithmContext, sysStatusContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\n\r\nfunction DropdownAlgorithm() {\r\n    const algoContext = useContext(algorithmContext);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const [className, toggleHandler] = Colored();\r\n\r\n    const DropdownAlgorithmHandler = (eventKey) => {\r\n\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Algorithm_Dijkstra\":\r\n                algoContext.set('Algorithm_Dijkstra');\r\n                break;\r\n            case \"Algorithm_APlus\":\r\n                algoContext.set('Algorithm_APlus');\r\n                break;\r\n            case \"Algorithm_Greedy_Best_First\":\r\n                algoContext.set('Algorithm_Greedy_Best_First');\r\n                break;\r\n            case \"Algorithm_Swarm\":\r\n                algoContext.set('Algorithm_Swarm');\r\n                break;\r\n            case \"Algorithm_Convergent_Swarm\":\r\n                algoContext.set('Algorithm_Convergent_Swarm');\r\n                break;\r\n            case \"Algorithm_Bidrectional_Swarm\":\r\n                algoContext.set('Algorithm_Bidrectional_Swarm');\r\n                break;\r\n            case \"Algorithm_Breadth_First\":\r\n                algoContext.set('Algorithm_Breadth_First');\r\n                break;\r\n            case \"Algorithm_Depth_First\":\r\n                algoContext.set('Algorithm_Depth_First');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item>\r\n            <NavDropdown xs={1} title={<span className={className}>Algorithms</span>} id=\"DropdownAlgorithm\" onSelect={(eventKey) => DropdownAlgorithmHandler(eventKey)}\r\n                onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}\r\n            >\r\n                <NavDropdown.Item eventKey=\"Algorithm_Dijkstra\">Dijkstra's Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_APlus\">A+ Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Greedy_Best_First\">Greedy Best-First Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Swarm\">Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Convergent_Swarm\">Convergent Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Bidrectional_Swarm\">Bidirectional Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Breadth_First\">Breadth-First Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Depth_First\">Depth-First Search</NavDropdown.Item>\r\n            </NavDropdown>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default DropdownAlgorithm;","import React, { useContext } from 'react'\r\nimport { NavDropdown, Nav } from 'react-bootstrap';\r\nimport { sysStatusContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\n\r\nfunction DropdownMaze() {\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const [className, toggleHandler] = Colored();\r\n\r\n    const DropdownMazeHandler = (eventKey) => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Maze_Recursive_Division\":\r\n                alert(\"Maze_Recursive_Division\");\r\n                break;\r\n            case \"Maze_Recursive_Division_vertical\":\r\n                alert(\"Maze_Recursive_Division_vertical\");\r\n                break;\r\n            case \"Maze_Recursive_Division_horizontal\":\r\n                alert(\"Maze_Recursive_Division_horizontal\");\r\n                break;\r\n            case \"Maze_Basic_Random\":\r\n                alert(\"Maze_Basic_Random\");\r\n                break;\r\n            case \"Maze_Basic_Weight_Maze\":\r\n                alert(\"Maze_Basic_Weight_Maze\");\r\n                break;\r\n            case \"Maze_Simple_stair_pattern\":\r\n                alert(\"Maze_Simple_stair_pattern\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item>\r\n            <NavDropdown xs={1} title={<span className={className}>Mazes & Patterns</span>} id=\"DropdownMaze\" onSelect={DropdownMazeHandler}\r\n                onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}\r\n            >\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division\">Recursive Division</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division_vertical\">Recursive Division(vertical skew)</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division_horizontal\">Recursive Division(horizontal skew)</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Basic_Random\">Basic Random Maze</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Basic_Weight_Maze\">Basic Weight Maze</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Simple_stair_pattern\">Simple Stair Pattern</NavDropdown.Item>\r\n            </NavDropdown>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default DropdownMaze;","import React, { useState, useContext } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { sysStatusContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\n\r\nfunction NavLink({ names, handlers }) {\r\n    const [whichHandler, setWhichHandler] = useState(0);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const [className, toggleHandler] = Colored();\r\n\r\n    const localHandler = () => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        setWhichHandler(preWhichHandler => (preWhichHandler + 1) % handlers.length);\r\n        handlers[whichHandler]();\r\n    }\r\n\r\n    return (\r\n        <Nav.Item xs={1}>\r\n            <Nav.Link onClick={localHandler} className={className} onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}>{names[whichHandler]}</Nav.Link>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default NavLink\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { bombContext, sysStatusContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\nimport { IsMount } from '../../Core/IsMount.js'\r\n\r\nfunction NavAddBomb({ names, handlers }) {\r\n    const [whichHandler, setWhichHandler] = useState(0);\r\n    const bomb = useContext(bombContext);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const [className, toggleHandler] = Colored();\r\n    const isMount = IsMount();\r\n\r\n    useEffect(() => {\r\n        if (isMount) return; // 防止第一次render也會跑進來執行\r\n\r\n        if (bomb.get === true) {\r\n            setWhichHandler(1);\r\n        } else {\r\n            setWhichHandler(0);\r\n        }\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [bomb])\r\n\r\n    useEffect(() => {\r\n        if (isMount) return;\r\n\r\n        // handlers[whichHandler]();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [whichHandler])\r\n\r\n    const localHandler = () => {\r\n        if (isMount) return;\r\n\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        handlers[whichHandler]();\r\n    }\r\n\r\n\r\n    return (\r\n        <Nav.Item xs={1}>\r\n            <Nav.Link onClick={localHandler} className={className} onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}>{names[whichHandler]}</Nav.Link>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default NavAddBomb\r\n","import { useRef, useEffect } from 'react';\r\n\r\nexport const IsMount = () => {\r\n    const isMount = useRef(true);\r\n\r\n    useEffect(() => {\r\n        isMount.current = false;\r\n    }, [])\r\n\r\n    return isMount.current;\r\n}\r\n\r\n","import { tableVar, componentKind, setTable } from './TableIndex'\r\n\r\n\r\nexport function Animation(arr, speed, count, componentKind, myCallbackFunction = null) { \r\n    const arrAnimation = setInterval(() => {\r\n        if(count === arr.length){\r\n            if (myCallbackFunction !== null){\r\n                myCallbackFunction();\r\n            }\r\n            clearInterval(arrAnimation);\r\n        }else{\r\n            setTable(arr[count][0] * tableVar.colSize + arr[count][1], componentKind)\r\n        }\r\n        count += 1\r\n    }, speed / arr.length)\r\n}\r\n\r\nexport function SearchAnimation(search, speed, count) { \r\n    const searchAnimation = setInterval(() => {\r\n        if(count === search.length - 1){\r\n            clearInterval(searchAnimation)\r\n        }\r\n        Animation(search[count], speed, 0, componentKind.search)\r\n        count += 1\r\n    }, speed)\r\n    \r\n}\r\n\r\nexport function PathAnimation(path, speed, count, myCallbackFunction = null) { \r\n    Animation(path, speed, count, componentKind.path, myCallbackFunction)\r\n}","import { componentKind } from './TableIndex'\r\n\r\n\r\nexport function WhichComponent(id, touch){\r\n\r\n    const element = document.getElementById(id).className\r\n\r\n    switch (element) {\r\n        case componentKind.start:\r\n            return {kind: componentKind.start, touch: touch.get.start, type: 0}\r\n        case componentKind.end:\r\n            return {kind: componentKind.end, touch: touch.get.end, type: 0}\r\n        case componentKind.bomb:\r\n            return {kind: componentKind.bomb, touch: touch.get.bomb, type: 0}\r\n        case componentKind.wall:\r\n            return {kind: componentKind.wall, rKind: componentKind.background, type: 1}\r\n        default:\r\n            return {kind: componentKind.background, rKind: componentKind.wall, type: 1}\r\n    }\r\n\r\n}","import { useContext } from 'react'\r\nimport { tableVar, touchContext, componentKind, setTable } from './TableIndex'\r\nimport { SearchAnimation, PathAnimation } from './Animation'\r\nimport { sysStatusContext, bombContext } from '../../Core'\r\nimport { WhichComponent } from './WhichComp'\r\n\r\n\r\nfunction ButtonEvent() {\r\n    const touch = useContext(touchContext)\r\n    const sysStatus = useContext(sysStatusContext)\r\n    const bomb = useContext(bombContext)\r\n\r\n    const Start = (search, path, speed) => {\r\n        sysStatus.set(\"RUNNING\")\r\n        console.log(\"Start\")\r\n        SearchAnimation(search, speed, 0)\r\n        setTimeout(() => PathAnimation(path, speed, 0, ()=>sysStatus.set(\"IDLE\")), speed * (search.length + 1))\r\n    }\r\n\r\n    const Addbomb = () => {\r\n        console.log(\"AddBomb\")\r\n        const index = Math.floor(tableVar.rowSize / 2) * tableVar.colSize + Math.floor(tableVar.colSize / 2)\r\n\r\n        if(WhichComponent(index.toString(), touch).type === 0){\r\n            return\r\n        }\r\n\r\n        bomb.set(\"True\")\r\n        setTable(index.toString(), componentKind.bomb)\r\n    }\r\n\r\n    const RemoveBomb = () => {\r\n        console.log(\"RemoveBomb\")\r\n        for(var i = 0; i < tableVar.rowSize * tableVar.colSize;i++){\r\n            if(document.getElementById(i.toString()).className === componentKind.bomb){\r\n                setTable(i, componentKind.background)\r\n                break\r\n            }\r\n        }\r\n        bomb.set(\"False\")\r\n    }\r\n\r\n    const ClearWalls = () => {\r\n        console.log(\"ClearWall\")\r\n        for(var i = 0; i < tableVar.rowSize * tableVar.colSize;i++){\r\n            if(document.getElementById(i.toString()).className === componentKind.wall){\r\n                setTable(i, componentKind.background)\r\n            }\r\n        }\r\n        touch.set(\"\")\r\n    }\r\n\r\n    const ClearPath = () => {\r\n        console.log(\"ClearPath\")\r\n        for(var i = 0; i < tableVar.rowSize * tableVar.colSize;i++){\r\n            if(document.getElementById(i.toString()).className === componentKind.search || document.getElementById(i.toString()).className === componentKind.path){\r\n                setTable(i, componentKind.background)\r\n            }\r\n        }\r\n    }\r\n\r\n    const ClearBoard = () => {\r\n        console.log(\"ClearBoard\")\r\n        for(var i = 0; i < tableVar.rowSize * tableVar.colSize;i++){\r\n            setTable(i, componentKind.background)\r\n        }\r\n        setTable(Math.floor(tableVar.rowSize / 2) * tableVar.colSize + Math.floor(tableVar.colSize / 4), componentKind.start)\r\n        setTable(Math.floor(tableVar.rowSize / 2 + 1) * tableVar.colSize - Math.floor(tableVar.colSize / 4), componentKind.end)\r\n        touch.set(\"\")\r\n        bomb.set(\"False\")\r\n    }\r\n\r\n    return { Start, Addbomb, RemoveBomb, ClearWalls, ClearPath, ClearBoard }\r\n}\r\n\r\nexport default ButtonEvent\r\n\r\n\r\n\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { algorithmContext, sysStatusContext } from '../../Core';\r\nimport ButtonEvent from '../TableHelper/ButtonEvent';\r\nimport { TestAlgorithm } from '../../Backend/TestAlgorithm';\r\n\r\nconst NavButton = () => {\r\n\r\n    const [buttonName, setButtonName] = useState(\"Visualize !\");\r\n    const [myVariant, setMyVariant] = useState(\"\");\r\n    const algoContext = useContext(algorithmContext);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const buttonEvent = ButtonEvent();\r\n    const [search, path, speed] = TestAlgorithm();\r\n\r\n    useEffect(() => {\r\n        setMyVariant('success');\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        var algoName = \"\";\r\n        switch (algoContext.get) {\r\n            case \"Algorithm_Dijkstra\":\r\n                algoName = \"Dijkstra's\";\r\n                break;\r\n            case 'Algorithm_APlus':\r\n                algoName = \"A*\";\r\n                break;\r\n            case \"Algorithm_Greedy_Best_First\":\r\n                algoName = \"Greedy\";\r\n                break;\r\n            case \"Algorithm_Swarm\":\r\n                algoName = \"Swarm\";\r\n                break;\r\n            case \"Algorithm_Convergent_Swarm\":\r\n                algoName = \"Convergent Swarm\";\r\n                break;\r\n            case \"Algorithm_Bidrectional_Swarm\":\r\n                algoName = \"Bidrectional Swarm\";\r\n                break;\r\n            case \"Algorithm_Breadth_First\":\r\n                algoName = \"BFS\";\r\n                break;\r\n            case \"Algorithm_Depth_First\":\r\n                algoName = \"DFS\";\r\n                break;\r\n            default:\r\n                algoName = \"\";\r\n                break;\r\n        }\r\n\r\n        setButtonName(`Visualize ${algoName}!`);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [algoContext.get])\r\n\r\n    useEffect(()=>{\r\n        if (sysStatus.get === 'RUNNING'){\r\n            setMyVariant('danger');\r\n        } else{\r\n            setMyVariant('success');\r\n        }\r\n    }, [sysStatus.get])\r\n\r\n\r\n    const handler = () => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        if (algoContext.get === \"\") {\r\n            setButtonName(\"Pick an Algorithm\");\r\n        } else {\r\n            buttonEvent.Start(search, path, speed);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item xs={1}>\r\n            <Button id=\"navButton\" variant={myVariant} size=\"lg\" onClick={handler}>{buttonName}</Button>\r\n        </Nav.Item>\r\n    )\r\n};\r\n\r\nexport default NavButton\r\n","export const TestAlgorithm = () => {\r\n    const [search, path, speed] = [[[[1, 2], [2, 2], [3, 2], [4, 2], [5, 2], [6, 2], [7, 2], [8, 2], [9, 2], [10, 2]],\r\n    [[1, 3], [2, 3], [3, 3], [4, 3], [5, 3], [6, 3], [7, 3], [8, 3], [9, 3], [10, 3]],\r\n    [[1, 4], [2, 4], [3, 4], [4, 4], [5, 4], [6, 4], [7, 4], [8, 4], [9, 4], [10, 4]],\r\n    [[1, 5], [2, 5], [3, 5], [4, 5], [5, 5], [6, 5], [7, 5], [8, 5], [9, 5], [10, 5]],\r\n    [[1, 6], [2, 6], [3, 6], [4, 6], [5, 6], [6, 6], [7, 6], [8, 6], [9, 6], [10, 6]]]\r\n        ,\r\n    [[1, 2], [2, 2], [3, 2], [4, 2], [5, 2], [6, 2], [7, 2], [8, 2], [9, 2], [10, 2]]\r\n        ,\r\n        1000\r\n    ]\r\n\r\n    return [search, path, speed];\r\n}\r\n\r\n// 開發中，有待討論\r\nexport const DFS = () => {\r\n    const startPos = [0, 0];\r\n    const bombPos = [10, 10];\r\n    const endPos = [20, 20];\r\n    const walls = []; // get walls\r\n\r\n    let wallSet = new Set(walls);\r\n    let search = [];\r\n    let path = [];\r\n\r\n    function doDfs(startPos, bombPos, endPos, wallSet, isFoundBomb) {\r\n\r\n        if (isFoundBomb) {\r\n            if (startPos === endPos) {\r\n                return\r\n            }\r\n        }\r\n\r\n        doDfs();\r\n    }\r\n\r\n    if (bombPos !== null) {\r\n\r\n    }\r\n\r\n\r\n}","import React, { useState, useContext } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { sysStatusContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\n\r\nfunction NavClearBoard({ names, handlers }) {\r\n    const [whichHandler, setWhichHandler] = useState(0);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const [className, toggleHandler] = Colored();\r\n\r\n    const localHandler = () => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        setWhichHandler(preWhichHandler => (preWhichHandler + 1) % handlers.length);\r\n        handlers[whichHandler]();\r\n    }\r\n\r\n    return (\r\n        <Nav.Item xs={1}>\r\n            <Nav.Link onClick={localHandler} className={className} onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}>{names[whichHandler]}</Nav.Link>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default NavClearBoard\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport { sysStatusContext } from '../../Core';\r\nimport { speedContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\n\r\nfunction DropdownSpeed() {\r\n    const [title, setTitle] = useState('Average');\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const speed = useContext(speedContext);\r\n    const [className, toggleHandler] = Colored();\r\n\r\n    useEffect(() => {\r\n        setTitle(speed.get);\r\n    }, [speed.get])\r\n\r\n    const DropdownSpeedHandler = (eventKey) => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Fast\":\r\n                speed.set(\"Fast\");\r\n                break;\r\n            case \"Average\":\r\n                speed.set(\"Average\");\r\n                break;\r\n            case \"Slow\":\r\n                speed.set(\"Slow\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <NavDropdown xs={1} title={<span className={className}>Speed: {title}</span>} id=\"DropdownSpeed\" onSelect={DropdownSpeedHandler}\r\n            onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}\r\n        >\r\n            <NavDropdown.Item eventKey=\"Fast\">Fast</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Average\">Average</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Slow\">Slow</NavDropdown.Item>\r\n        </NavDropdown>\r\n    )\r\n}\r\n\r\nexport default DropdownSpeed;","import React from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Logo from './HeaderHelper/Logo';\r\nimport DropdownAlgorithm from './HeaderHelper/DropdownAlgorithm';\r\nimport DropdownMaze from './HeaderHelper/DropdownMaze';\r\nimport NavLink from './HeaderHelper/NavLink';\r\nimport NavAddBomb from './HeaderHelper/NavAddBomb';\r\nimport NavButton from './HeaderHelper/NavButton';\r\nimport NavClearBoard from './HeaderHelper/NavClearBoard';\r\nimport DropdownSpeed from './HeaderHelper/DropdownSpeed';\r\nimport ButtonEvent from './TableHelper/ButtonEvent';\r\n\r\nfunction Header() {\r\n    const buttonEvent = ButtonEvent()\r\n\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"xl\" bg='dark' variant='dark'>\r\n            <Logo />\r\n            <Navbar.Toggle aria-controls=\"Collapse\" />\r\n            <Navbar.Collapse id=\"Collapse\" className='nvbar-collapse'>\r\n                <Nav className=\"nav-bar\">\r\n                    <DropdownAlgorithm />\r\n                    <DropdownMaze />\r\n                    <NavAddBomb names={[\"Add Bomb\", \"Remove Bomb\"]} handlers={[buttonEvent.Addbomb, buttonEvent.RemoveBomb]} />\r\n                    <NavButton />\r\n                    <NavClearBoard names={[\"Clear Board\"]} handlers={[buttonEvent.ClearBoard]} />\r\n                    <NavLink names={[\"Clear Walls & Weights\"]} handlers={[buttonEvent.ClearWalls]} />\r\n                    <NavLink names={[\"Clear Path\"]} handlers={[buttonEvent.ClearPath]} />\r\n                    <DropdownSpeed />\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Header\r\n","import { useContext } from 'react'\r\nimport { sysStatusContext } from '../../Core/index'\r\nimport { tableVar, touchContext, moveContext, componentKind, setTable } from './TableIndex'\r\nimport { WhichComponent } from './WhichComp'\r\n\r\nfunction MouseEvent() {\r\n    const [touch, move, sysStatus] = [useContext(touchContext), useContext(moveContext), useContext(sysStatusContext)]\r\n\r\n    const MouseDownHandler = (e) => {\r\n        // console.log(\"MouseDownHandler \" + e.target.id)\r\n\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return\r\n        }\r\n\r\n        e.preventDefault()\r\n\r\n        tableVar.id = e.target.id\r\n        const whichComponent = WhichComponent(tableVar.id, touch)\r\n\r\n        if(whichComponent.type){\r\n            setTable(tableVar.id, whichComponent.rKind)\r\n            move.set(whichComponent.rKind)\r\n\r\n        }else{\r\n            move.set(whichComponent.kind)\r\n        }\r\n    }\r\n\r\n    const MouseUpHandler = (e) => {\r\n        // console.log(\"MouseUpHandler \" + e.target.id)\r\n\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return\r\n        }\r\n\r\n        move.set(\"\")\r\n    }\r\n\r\n    const OnMouseEnterHanlder = (e) => {\r\n        // console.log(\"OnMouseEnterHanlder \" + e.target.id)\r\n\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return\r\n        }\r\n\r\n        tableVar.newId = e.target.id\r\n        const whichOldComponent = WhichComponent(tableVar.id, touch)\r\n        const whichNewComponent = WhichComponent(tableVar.newId, touch)\r\n\r\n        if(move.get === componentKind.wall && whichNewComponent.type){\r\n            setTable(tableVar.newId, whichNewComponent.rKind)\r\n            tableVar.id = tableVar.newId\r\n\r\n        }else if(move.get !== componentKind.wall && move.get !== \"\" && whichNewComponent.type){\r\n            setTable(tableVar.id, whichOldComponent.touch)\r\n            touch.set({componentKind: whichOldComponent.kind, under: whichNewComponent.kind})\r\n            setTable(tableVar.newId, whichOldComponent.kind)\r\n            tableVar.id = tableVar.newId\r\n        }\r\n    }\r\n\r\n    return {MouseDownHandler, MouseUpHandler, OnMouseEnterHanlder}\r\n\r\n}\r\n\r\nexport default MouseEvent","import { useEffect } from 'react'\r\nimport MouseEvent from './MouseEvent'\r\nimport { tableVar, componentKind } from './TableIndex'\r\n\r\n\r\nfunction TableUI() {\r\n    const [rowSize, colSize, size] = [tableVar.rowSize, tableVar.colSize, tableVar.size]\r\n\r\n    const row = Array.from(Array(rowSize).keys())\r\n    const col = Array.from(Array(colSize).keys())\r\n\r\n    const mouesEvent = MouseEvent()\r\n    const [MouseDownHandler, MouseUpHandler, OnMouseEnterHanlder] = [mouesEvent.MouseDownHandler, mouesEvent.MouseUpHandler, mouesEvent.OnMouseEnterHanlder]\r\n\r\n    const createTable = row.map((rowIndex, index) => {\r\n        return ( \r\n            <tr key = {index} height={size}>\r\n                {col.map((colIndex, index) => {\r\n                    // console.log(rowIndex + \" \" + colIndex)\r\n                    return (\r\n                        <td id = {rowIndex * colSize + colIndex} key = {index} className = {componentKind.background} width={size} onMouseUp = {MouseUpHandler} onMouseDown = {MouseDownHandler} onMouseEnter = {OnMouseEnterHanlder}>\r\n                            {}\r\n                        </td>)}\r\n                    )}\r\n            </tr>)}\r\n        )\r\n\r\n    useEffect(() => {\r\n        document.getElementById((Math.floor(tableVar.rowSize / 2) * tableVar.colSize + Math.floor(tableVar.colSize / 4)).toString()).className = \"start\"\r\n        document.getElementById((Math.floor(tableVar.rowSize / 2 + 1) * tableVar.colSize - Math.floor(tableVar.colSize / 4)).toString()).className = \"end\"\r\n    }, [])\r\n    \r\n    \r\n      \r\n    return (\r\n        <div className = \"tablePadding\">\r\n            <table id = \"board\" align=\"center\" border=\"1\" cellSpacing=\"0\">\r\n                <tbody>\r\n                    {createTable}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableUI\r\n","import TableUI from './TableHelper/TableUI';\r\nimport { useContext, useEffect } from 'react';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport { sysStatusContext } from '../Core';\r\n\r\nfunction Table() {  \r\n\tconst sysStatus = useContext(sysStatusContext);\r\n\r\n\tuseEffect(()=>{\r\n\t\tsetTimeout(()=>{sysStatus.set(\"IDLE\");}, 1000);\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [])\r\n\r\n\tif (sysStatus.get === \"LOADING\"){\r\n\t\treturn (<Spinner animation=\"border\" variant=\"warning\" />);\r\n\t}\r\n\telse{\r\n\t\treturn (\r\n\t        <div id = \"UI\">\r\n\t            <TableUI/>\r\n\t        </div>\r\n\t    )\r\n\t}\r\n}\r\n\r\nexport default Table\r\n","\r\n\r\nfunction Info(){\r\n\treturn (\r\n\t\t<div id=\"mainInfo\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li> <div className=\"Info-Start-Node\"></div>Start Node </li>\r\n\t\t\t\t<li> <div className=\"Info-End-Node\"></div>Target Node </li>\r\n\t\t\t\t<li> <div className=\"Info-Bomb-Node\"></div>Bomb Node </li>\r\n\t\t\t\t<li> <div className=\"Info-Unvisited-Node\"></div>Unvisited Node </li>\r\n\t\t\t\t<li> <div className=\"Info-Visited-Node\"></div>Visited Node </li>\r\n\t\t\t\t<li> <div className=\"Info-ShortestPathNode-Node\"></div>Shortest-Path Node </li>\r\n\t\t\t\t<li> <div className=\"Info-WallNode-Node\"></div>Wall Node </li>\r\n\t\t\t</ul>\r\n\t\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Info;","import {useState, useContext, useEffect} from 'react';\r\nimport { algorithmContext } from '../../Core';\r\n\r\nfunction AlgorithmDescriptor(){\r\n\tconst [algorithmName, setAlgorithmName] = useState('Pick an algorithm and visualize it!');\r\n    const [discription1, setDiscription1] = useState('');\r\n    const [discription2, setDiscription2] = useState('');\r\n\tconst algoContext = useContext(algorithmContext);\r\n\r\n\tuseEffect(() => {\r\n        var algoName = \"\";\r\n        var d1 = \"\";\r\n        var d2 = \"\";\r\n        switch (algoContext.get) {\r\n            case \"Algorithm_Dijkstra\":\r\n                algoName = \"Dijkstra's Algorithm\";\r\n                d1 = \"weighted\";\r\n                d2 = \"guarantees\";\r\n                break;\r\n            case 'Algorithm_APlus':\r\n                algoName = \"A* Search\";\r\n                d1 = \"weighted\";\r\n                d2 = \"guarantees\";\r\n                break;\r\n            case \"Algorithm_Greedy_Best_First\":\r\n                algoName = \"Greedy Best-first Search\";\r\n                d1 = \"weighted\";\r\n                d2 = \"does not guarantee\";\r\n                break;\r\n            case \"Algorithm_Swarm\":\r\n                algoName = \"Swarm Algorithm\";\r\n                d1 = \"weighted\";\r\n                d2 = \"does not guarantee\";\r\n                break;\r\n            case \"Algorithm_Convergent_Swarm\":\r\n                algoName = \"Convergent Swarm Algorithm\";\r\n                d1 = \"weighted\";\r\n                d2 = \"does not guarantee\";\r\n                break;\r\n            case \"Algorithm_Bidrectional_Swarm\":\r\n                algoName = \"Bidrectional Swarm Algorithm\";\r\n                d1 = \"weighted\";\r\n                d2 = \"does not guarantee\";\r\n                break;\r\n            case \"Algorithm_Breadth_First\":\r\n                algoName = \"Breath-first Search\";\r\n                d1 = \"unweighted\";\r\n                d2 = \"guarantee\";\r\n                break;\r\n            case \"Algorithm_Depth_First\":\r\n                algoName = \"Depth-first Search\";\r\n                d1 = \"unweighted\";\r\n                d2 = \"does not guarantee\";\r\n                break;\r\n            default:\r\n                algoName = \"Pick an algorithm and visualize it!\";\r\n                d1 = \"\";\r\n                d2 = \"\";\r\n                break;\r\n        }\r\n\r\n        setAlgorithmName(algoName);\r\n        setDiscription1(d1);\r\n        setDiscription2(d2);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [algoContext.get])\r\n\r\n    if (algoContext.get === \"\"){\r\n        return (\r\n            <div id=\"algorithmDescriptor\">\r\n                {algorithmName}\r\n            </div>\r\n        )\r\n    } else{\r\n        return (\r\n            <div id=\"algorithmDescriptor\">\r\n                {algorithmName} is <i><b>{discription1}</b></i> and <i><b>{discription2}</b></i> the shortest path!\r\n            </div>\r\n        )\r\n    }\r\n\t\r\n}\r\n\r\nexport default AlgorithmDescriptor;","import './App.scss';\r\nimport { useReducer } from 'react';\r\nimport Header from './Frontend/Header';\r\nimport { algorithmReducer, initialAlgorithm, algorithmContext } from './Core';\r\nimport { sysStatusReducer, initialsysStatus, sysStatusContext } from './Core';\r\nimport { bombContext, bombInitial, bombReducer } from './Core';\r\nimport { speedContext, speedInitial, speedReducer } from './Core';\r\nimport Table from './Frontend/Table';\r\nimport { touchReducer, touchInitial, touchContext } from './Frontend/TableHelper/TableIndex';\r\nimport { moveReducer, moveInitial, moveContext } from './Frontend/TableHelper/TableIndex';\r\nimport Info from './Frontend/HeaderHelper/Info';\r\nimport AlgorithmDescriptor from './Frontend/HeaderHelper/AlgorithmDescriptor';\r\n\r\nfunction App() {\r\n  const [curAlgorithm, setCurAlgorithm] = useReducer(algorithmReducer, initialAlgorithm);\r\n  const [curSysStatus, setCurSysStatus] = useReducer(sysStatusReducer, initialsysStatus);\r\n  const [curBomb, setCurBomb] = useReducer(bombReducer, bombInitial);\r\n  const [curSpeed, setCurSpeed] = useReducer(speedReducer, speedInitial);\r\n  const [touch, setTouch] = useReducer(touchReducer, touchInitial)\r\n  const [move, setMove] = useReducer(moveReducer, moveInitial)\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <moveContext.Provider value={{ get: move, set: setMove }}>\r\n        <touchContext.Provider value={{ get: touch, set: setTouch }}>\r\n          <speedContext.Provider value={{ get: curSpeed, set: setCurSpeed }}>\r\n            <bombContext.Provider value={{ get: curBomb, set: setCurBomb }}>\r\n              <sysStatusContext.Provider value={{ get: curSysStatus, set: setCurSysStatus }}>\r\n                <algorithmContext.Provider value={{ get: curAlgorithm, set: setCurAlgorithm }}>\r\n                  <Header />\r\n                  <Info />\r\n                  <AlgorithmDescriptor />\r\n                  <Table />\r\n                </algorithmContext.Provider>\r\n              </sysStatusContext.Provider>\r\n            </bombContext.Provider>\r\n          </speedContext.Provider>\r\n        </touchContext.Provider>\r\n      </moveContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  <App />,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}