{"version":3,"sources":["Frontend/HeaderHelper/Elements/Logo.js","Frontend/TableHelper/TableIndex.js","Core/index.js","HOC/Colored.js","Frontend/TableHelper/SetTable.js","Frontend/TableHelper/WhichComp.js","Frontend/TableHelper/Animation.js","Core/Queue.js","Core/Distance.js","Backend/Algorithms/BFS.js","Backend/Algorithms/DFS.js","Core/PriorityQueue.js","Backend/Algorithms/Dijkstra.js","Backend/Algorithms/Dijkstra_old.js","Frontend/TableHelper/UpdateTable.js","Frontend/TableHelper/ButtonEvent.js","Frontend/HeaderHelper/Elements/DropdownAlgorithm.js","Backend/Maze/Simple_Stair_Pattern.js","Backend/Maze/Core.js","Backend/Maze/Binary_Tree.js","Backend/Maze/RecursiveDivision.js","Backend/Maze/Kruskal.js","Backend/Maze/Basic_Random_Maze.js","Backend/Maze/Basic_Weight_Maze.js","Backend/Maze/Prim.js","Backend/Maze/Eller.js","Frontend/HeaderHelper/Elements/DropdownMaze.js","Frontend/HeaderHelper/Elements/NavLink.js","HOC/Colored_AddButton.js","Frontend/HeaderHelper/Elements/NavAddBomb.js","Core/IsMount.js","Frontend/HeaderHelper/Elements/NavButton.js","Frontend/HeaderHelper/Elements/NavClearBoard.js","Frontend/HeaderHelper/Elements/DropdownSpeed.js","Frontend/HeaderHelper/Elements/Info.js","Frontend/HeaderHelper/Elements/AlgorithmDescriptor.js","Frontend/HeaderHelper/Elements/IntroductionModal.js","Frontend/HeaderHelper/Elements/Email.js","Frontend/HeaderHelper/HeaderHepler/PC.js","Frontend/HeaderHelper/HeaderHepler/Mobile.js","Frontend/Header.js","Frontend/TableHelper/RestrictComp.js","Frontend/TableHelper/KeyboardEvent.js","Frontend/TableHelper/MouseEvent.js","Frontend/TableHelper/TableUI.js","Frontend/TableHelper/WeightModal.js","Frontend/Table.js","App.js","reportWebVitals.js","index.js"],"names":["logo","Navbar","Brand","href","className","size","navigator","userAgent","match","tableVar","rowSize","adjust","Math","floor","window","innerHeight","colSize","screen","availWidth","id","newId","originPos","weightValueRange","componentKind","add","wall","weight","weightSearchBomb","weightSearch","weightPath","start","startSearchBomb","startSearch","startPath","end","endSearchBomb","endSearch","endPath","bomb","bombSearchBomb","bombSearch","bombPath","search","searchBomb","path","weightStatic","weightSearchBombStatic","weightSearchStatic","weightPathStatic","searchStatic","searchBombStatic","pathStatic","pathHead","pathHeadLeft","pathHeadRight","pathHeadUp","pathHeadDown","background","keyboardSupport","plus","sub","w","down","synchronize","update","algorithm","sysStatus","touchContext","createContext","touchInitial","touchReducer","state","action","under","moveContext","moveReducer","updateContext","updateReducer","weightValueContext","weightValueInitial","value","status","weightValueReducer","position","weightValue","sysStatusContext","React","initialsysStatus","sysStatusReducer","animationStatusContext","animationStatusInitial","animationStatusReducer","bombContext","bombInitial","bombReducer","speedContext","speedInitial","speedReducer","algorithmContext","algorithmReducer","Colored","useContext","useState","isHover","setIsHover","setClassName","get","setTable","index","kind","setPosition","parseInt","document","getElementById","toString","pos","addComponentKind","WhichComponent","touch","type","rKind","WhichComponentSame","StartEndBombWeight","stopStatus","pathID","searchResult","bombResult","pathResult","pathDirectionResult","maze","mazeResult","animationStatus","complete","setAnimation","pathDirection","setMazeAnimation","resetAnimation","SearchBombAnimation","speed","searchFunction","sysStatusFunction","updateFunction","count","searchBombAnimation","setInterval","length","PathAnimation","clearInterval","i","SearchAnimation","pathFunction","searchAnimation","newid","pathAnimation","direction","FinalAnimation","j","MazeAnimation","mazeAnimation","FinalMazeAnimation","Queue","this","queue","val","push","isEmpty","shift","Distance","dict","max_d","d","max","endPos","shortest","shortestDirection","x","y","visited","Set","curD","Infinity","curX","curY","dir","has","unshift","BFS","startCallback","times","retSearchPath","retBombPath","retShortestPath","retDirection","searchPath","distance","startPos","set","append","getLength","node","popleft","nextD","pop","concat","getShortestPath","splice","DFS","DoDFS","clear","tmp","tmp2","PriorityQueue","arr","score","heuristic","HeapifyAll","n","smallest","left","right","Heapify","DoDijkstra","whichAlgo","table","unvisited","Push","curShortestPath","which","actualEnd","isFoundEnd","Length","curPos","GetClosestNode","forEach","nextPos","idx","total","GetScore","pow","GetHeuristic","abs","Pop","Dijkstra","DoDijkstra_old","strategy","retPos","retIndex","Dijkstra_old","UpdateTable","Start","ClearPath","ButtonEvent","sysSpeed","animation","CheckStopStatus","ClearWalls","checkStopStatus","Object","keys","split","ClearWeights","event","Addbomb","RemoveBomb","ClearBoard","CreateMaze","DropdownAlgorithm","algoContext","toggleHandler","buttonEvent","Nav","Item","NavDropdown","xs","title","onSelect","eventKey","DropdownAlgorithmHandler","onMouseEnter","onMouseLeave","Divider","Simple_Stair_Pattern","walls","towardUp","CreateAround","wallSet","Random","random","RandomEven","Binary_Tree","console","log","DoRecursiveDivision","width","height","boolDirection","door","randomX","_y","randomY","_x","RecursiveDivision","specialNodes","up","validWall","blockDirection","removedWallIndex","array","target","IndexOf","FindRoot","parentArray","Union","rankArray","index1","index3","Kruskal","parent","rank","x1","x2","xHead","yHead","Basic_Random_Maze","Basic_Weight_Maze","Prim","startNode","randomIndex","availableDirection","Eller","haveBuildedPath","buildWall","buildPath","DropdownMaze","speedStatus","NavLink","names","handlers","whichHandler","setWhichHandler","Link","onClick","preWhichHandler","algoStatus","NavAddBomb","isMount","useRef","useEffect","current","IsMount","NavButton","buttonName","setButtonName","myVariant","setMyVariant","algoName","NavClearBoard","DropdownSpeed","setTitle","Info","bannedBomb","setBannedBomb","bannedBFSDFS","setBannedBFSDFS","AlgorithmDescriptor","algorithmName","setAlgorithmName","discription1","setDiscription1","discription2","setDiscription2","d1","d2","IntroductionModal","pages","setPages","show","setShow","language","setLanguage","checked","setChecked","maxPages","data","Modal","backdrop","centered","dialogClassName","Body","Footer","Button","variant","onlabel","onstyle","offlabel","offstyle","style","onChange","pre","prePage","Email","handleClose","data-toggle","data-placement","data-original-title","src","alt","onHide","onSubmit","e","preventDefault","emailjs","sendForm","then","result","text","error","htmlFor","name","required","PC","collapseOnSelect","expand","Logo","Toggle","aria-controls","Collapse","Mobile","Header","RestrictComp","KeyboardEvent","key","MouseEvent","move","addEventListener","MouseDownHandler","whichComponent","MouseUpHandler","OnMouseEnterHanlder","whichOldComponent","whichNewComponent","TableUI","row","Array","from","col","mouesEvent","createTable","map","rowIndex","colIndex","onMouseUp","onMouseDown","align","border","cellSpacing","WeightModal","initShow","setInitShow","setTimeout","Row","Col","ProgressBar","now","label","min","Table","Spinner","App","useReducer","curAlgorithm","setCurAlgorithm","curSysStatus","setCurSysStatus","curBomb","setCurBomb","curSpeed","setCurSpeed","setTouch","setMove","setUpdate","setWeightValue","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.b5f3aa64.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\n\r\nfunction logo() {\r\n    return (\r\n        <Navbar.Brand href=\"/PathFinding/\" className='navbar-logo'>\r\n            {/* <img\r\n                src={process.env.PUBLIC_URL + '/logo.png'} // 取得public資料夾路徑\r\n                width=\"50\"\r\n                height=\"50\"\r\n                className='d-inline-block'\r\n                variant='test'\r\n                alt='Logo'\r\n            /> {' '} */}\r\n                    PathFinding\r\n        </Navbar.Brand>\r\n    )\r\n}\r\n\r\nexport default logo\r\n","import { createContext } from 'react'\nimport { position } from '../../Core/index'\n\n\nconst size = () => {\n    // console.log(navigator.userAgent)\n    if (navigator.userAgent.match(/Mobile/i)) {\n        return 15\n    } else {\n        return 23\n    }\n}\n\nconst objectHeight = () => {\n    if (navigator.userAgent.match(/Mobile/i)) {\n        return 120 + 0\n    } else {\n        return 162 + 100\n    }\n}\n\nexport const tableVar = {\n    rowSize: adjust(Math.floor((window.innerHeight - objectHeight()) / size())),\n    colSize: adjust(Math.floor(window.screen.availWidth / size())),\n    size: size(),\n\n    id: 0,\n    newId: 0\n}\n\nexport const originPos = {\n    origin_start: [adjust(Math.floor(tableVar.rowSize / 2)), adjust(Math.floor(tableVar.colSize / 4))],\n    origin_end: [adjust(Math.floor(tableVar.rowSize / 2)), adjust(tableVar.colSize - Math.floor(tableVar.colSize / 4))]\n\n}\n\nexport const weightValueRange = {\n    max: 20,\n    min: 0,\n    init: 20,\n    increase: 5,\n    waiting: 2000\n}\n\nexport const componentKind = {\n    add: \"wall\",\n    wall: \"wall\",\n\n    /*---------dynamic---------*/\n\n    weight: \"weight\",\n    weightSearchBomb: \"weightSearchBomb\",\n    weightSearch: \"weightSearch\",\n    weightPath: \"weightPath\",\n\n    start: \"start\",\n    startSearchBomb: \"startSearchBomb\",\n    startSearch: \"startSearch\",\n    startPath: \"startPath\",\n\n    end: \"end\",\n    endSearchBomb: \"endSearchBomb\",\n    endSearch: \"endSearch\",\n    endPath: \"endPath\",\n\n    bomb: \"bomb\",\n    bombSearchBomb: \"bombSearchBomb\",\n    bombSearch: \"bombSearch\",\n    bombPath: \"bombPath\",\n\n    search: \"search\",\n    searchBomb: \"searchBomb\",\n    path: \"path\",\n\n    /*----------static-----------*/\n\n    weightStatic: \"weightStatic\",\n    weightSearchBombStatic: \"weightSearchBombStatic\",\n    weightSearchStatic: \"weightSearchStatic\",\n    weightPathStatic: \"weightPathStatic\",\n\n    searchStatic: \"searchStatic\",\n    searchBombStatic: \"searchBombStatic\",\n    pathStatic: \"pathStatic\",\n\n    /*----------------------------*/\n\n    pathHead: \"pathHead\",\n    pathHeadLeft: \"pathHeadLeft\",\n    pathHeadRight: \"pathHeadRight\",\n    pathHeadUp: \"pathHeadUp\",\n    pathHeadDown: \"pathHeadDown\",\n\n    background: \"background\"\n}\n\nexport const keyboardSupport = {\n    plus: \"+\",\n    sub: \"-\",\n\n    w: \"w\",\n    down: true,\n}\n\nexport const synchronize = {\n    update: true,\n    algorithm: \"\",\n    sysStatus: \"IDLE\"\n}\n\n// touch status\nexport const touchContext = createContext()\nexport const touchInitial = { start: componentKind.background, end: componentKind.background, bomb: componentKind.background }\nexport const touchReducer = (state, action) => {\n    switch (action.componentKind) {\n        case componentKind.start:\n            return { ...state, start: action.under }\n        case componentKind.end:\n            return { ...state, end: action.under }\n        case componentKind.bomb:\n            return { ...state, bomb: action.under }\n        default:\n            return touchInitial\n    }\n}\n\n// move component\nexport const moveContext = createContext()\nexport const moveInitial = \"\"\nexport const moveReducer = (state, action) => {\n    switch (action) {\n        case componentKind.start:\n            return action\n        case componentKind.end:\n            return action\n        case componentKind.bomb:\n            return action\n        case componentKind.wall:\n            return action\n        case componentKind.weight:\n            return action\n        default:\n            return moveInitial\n    }\n}\n\n// result update status\nexport const updateContext = createContext()\nexport const updateInitial = false\nexport const updateReducer = (state, action) => {\n    switch (action) {\n        case \"True\":\n            return true\n        case \"False\":\n            return false\n        default:\n            return updateInitial\n    }\n}\n\nexport const weightValueContext = createContext()\nexport const weightValueInitial = { value: weightValueRange.init, status: true }\nexport const weightValueReducer = (state, action) => {\n    switch (action) {\n        case \"+\":\n            position.weightValue = state.value + weightValueRange.increase\n            return { value: position.weightValue, status: true }\n        case \"-\":\n            position.weightValue = state.value - weightValueRange.increase\n            return { value: position.weightValue, status: true }\n        case true:\n            return { value: position.weightValue, status: true }\n        case false:\n            return { value: position.weightValue, status: false }\n        default:\n            return weightValueInitial\n    }\n}\n\n// 保證奇數\n\nexport function adjust(size) {\n    if (size % 2 === 0) {\n        return size - 1\n    } else {\n        return size\n    }\n\n}\n\n","import React from 'react'\r\nimport { tableVar, weightValueRange, adjust } from '../Frontend/TableHelper/TableIndex'\r\n\r\n// component position\r\nexport var position = {\r\n    start: [adjust(Math.floor(tableVar.rowSize / 2)), adjust(Math.floor(tableVar.colSize / 4))],\r\n    end: [adjust(Math.floor(tableVar.rowSize / 2)), adjust(tableVar.colSize - Math.floor(tableVar.colSize / 4))],\r\n    bomb: false,\r\n    wall: [],\r\n    weight: [],\r\n    weightValue: weightValueRange.init,\r\n    rowSize: tableVar.rowSize,\r\n    colSize: tableVar.colSize\r\n}\r\n\r\n\r\n// 目前系統狀態\r\nexport const sysStatusContext = React.createContext();\r\nexport const initialsysStatus = \"LOADING\";\r\nexport const sysStatusReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'IDLE':\r\n            return 'IDLE';\r\n        case 'STOP':\r\n            return 'STOP';\r\n        case 'RUNNING':\r\n            return 'RUNNING';\r\n        case 'LOADING':\r\n            return 'LOADING';\r\n        default:\r\n            return initialsysStatus;\r\n    }\r\n}\r\n\r\n// 目前Animation狀態\r\nexport const animationStatusContext = React.createContext();\r\nexport const animationStatusInitial = \"Algorithm\";\r\nexport const animationStatusReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'Maze':\r\n            return 'Maze';\r\n        case 'Algorithm':\r\n            return 'Algorithm';\r\n        default:\r\n            return animationStatusInitial;\r\n    }\r\n}\r\n\r\n// Bomb status\r\nexport const bombContext = React.createContext();\r\nexport const bombInitial = false;\r\nexport const bombReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'True':\r\n            return true;\r\n        case 'False':\r\n            return false;\r\n        default:\r\n            return bombInitial\r\n    }\r\n}\r\n\r\n// Speed\r\nexport const speedContext = React.createContext();\r\nexport const speedInitial = [\"Fast\", 20];\r\nexport const speedReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'Fast':\r\n            return [\"Fast\", 20];\r\n        case 'Average':\r\n            return [\"Average\", 100];\r\n        case 'Slow':\r\n            return [\"Slow\", 1000];\r\n        default:\r\n            return bombInitial\r\n    }\r\n}\r\n\r\n// 目前系統是哪種演算法\r\nexport const algorithmContext = React.createContext();\r\nexport const initialAlgorithm = \"\";\r\nexport const algorithmReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'Algorithm_Dijkstra':\r\n            return 'Algorithm_Dijkstra';\r\n        case 'Algorithm_AStar':\r\n            return 'Algorithm_AStar';\r\n        case \"Algorithm_Greedy_Best_First\":\r\n            return 'Algorithm_Greedy_Best_First';\r\n        case \"Algorithm_Swarm\":\r\n            return 'Algorithm_Swarm';\r\n        case \"Algorithm_Convergent_Swarm\":\r\n            return 'Algorithm_Convergent_Swarm';\r\n        case \"Algorithm_Bidrectional_Swarm\":\r\n            return 'Algorithm_Bidrectional_Swarm';\r\n        case \"Algorithm_Breadth_First\":\r\n            return 'Algorithm_Breadth_First';\r\n        case \"Algorithm_Depth_First\":\r\n            return 'Algorithm_Depth_First';\r\n        case \"Algorithm_Dijkstra_old\":\r\n            return \"Algorithm_Dijkstra_old\";\r\n        default:\r\n            return initialAlgorithm;\r\n    }\r\n}","import { useState, useContext } from 'react';\nimport { sysStatusContext } from '../Core';\nimport '../App.scss';\n\nconst Colored = () => {\n    const sysStatus = useContext(sysStatusContext);\n    const [isHover, setIsHover] = useState(false);\n    const [className, setClassName] = useState(\"nav-link-default\");\n\n    const toggleHandler = () => {\n        if (isHover) {\n            setClassName(\"nav-link-default\");\n            setIsHover(false);\n        } else {\n            if (sysStatus.get !== \"IDLE\" && sysStatus.get !== \"STOP\") {\n                setClassName(\"nav-link-red\");\n            } else {\n                setClassName(\"nav-link-green\");\n            }\n            setIsHover(true);\n        }\n    }\n\n    return [className, toggleHandler];\n}\n\nexport default Colored\n","import { componentKind, tableVar } from './TableIndex'\nimport { position } from '../../Core/index'\n\n\nexport function setTable(index, kind, setPosition = false){\n\n    if(typeof index !== \"number\"){\n        index = parseInt(index[0]) * tableVar.colSize + parseInt(index[1])\n    }\n\n    if(index < 0){\n        return\n    }\n\n    document.getElementById(index.toString()).className = kind\n\n    if(setPosition){\n\n        const pos = [Math.floor(index / tableVar.colSize), index % tableVar.colSize]\n\n        if(position.wall[pos]){\n            delete position.wall[pos]\n        }else if(position.weight[pos]){\n            delete position.weight[pos]\n        }\n    \n        if(kind === componentKind.wall){\n            position.wall[pos] = true\n        }else if(kind === componentKind.weight){\n            position.weight[pos] = true\n        }else if(kind === componentKind.start){\n            position.start = pos\n        }else if(kind === componentKind.end){\n            position.end = pos\n        }else if(kind === componentKind.bomb){\n            position.bomb = pos\n        }else if(kind === componentKind.background){\n            if(position.bomb[0] === pos[0] && position.bomb[1] === pos[1]){\n                position.bomb = false\n            }\n        }\n\n    }\n\n    // console.log(position)\n\n}","import { tableVar, componentKind } from './TableIndex'\nimport { position } from '../../Core/index'\n\n\nfunction addComponentKind(kind) {\n    switch (kind) {\n        case componentKind.add:\n            return componentKind.background\n        default:\n            return componentKind.add\n    }\n}\n\nexport function WhichComponent(id, touch){ // MouseEvent\n\n    var pos = id\n\n    if(typeof id === \"number\"){\n        pos = [Math.floor(parseInt(id) / tableVar.colSize), parseInt(id) % tableVar.colSize]\n    }\n\n    if(position.start[0] === pos[0] && position.start[1] === pos[1]){\n        return {kind: componentKind.start, touch: touch.get.start, type: 0}\n    }else if(position.end[0] === pos[0] && position.end[1] === pos[1]){\n        return {kind: componentKind.end, touch: touch.get.end, type: 0}\n    }else if(position.bomb !== false && position.bomb[0] === pos[0] && position.bomb[1] === pos[1]){\n        return {kind: componentKind.bomb, touch: touch.get.bomb, type: 0}\n    }else if(position.wall[pos]){\n        return {kind: componentKind.wall, rKind: addComponentKind(componentKind.wall), type: 1}\n    }else if(position.weight[pos]){\n        return {kind: componentKind.weight, rKind: addComponentKind(componentKind.weight), type: 1}\n    }else{\n        return {kind: componentKind.background, rKind: componentKind.add, type: 1}\n    }\n\n}\n\n\nexport function WhichComponentSame(id){\n\n    var pos = id\n\n    if(typeof id === \"string\" || typeof id === \"number\"){\n        pos = [Math.floor(parseInt(id) / tableVar.colSize), parseInt(id) % tableVar.colSize]\n    }\n\n    if(position.start[0] === pos[0] && position.start[1] === pos[1]){\n        return 0\n    }else if(position.end[0] === pos[0] && position.end[1] === pos[1]){\n        return 1\n    }else if(position.bomb !== false && position.bomb[0] === pos[0] && position.bomb[1] === pos[1]){\n        return 2\n    }else if(position.weight[pos]){\n        return 3\n    }else if(position.wall[pos]){\n        return 4\n    }else{\n        return 5\n    }\n\n}\n\nexport function StartEndBombWeight(type, start, end, bomb, weight){\n\n    switch (type) {\n        case 0:\n            return start\n        case 1:\n            return end\n        case 2:\n            return bomb\n        case 3:\n            return weight\n        default:\n            return null\n    }\n\n}","import { componentKind } from './TableIndex'\nimport { setTable } from './SetTable'\nimport { WhichComponentSame, StartEndBombWeight } from './WhichComp'\nimport { position } from '../../Core/index'\n\n\nexport const stopStatus = {\n    searchBomb: [0, 0],\n    search: [0, 0],\n    path: 0,\n    pathID: [-1, -1],\n\n    searchResult: [],\n    bombResult: [],\n    pathResult: [],\n    pathDirectionResult: [],\n\n    algorithm: \"\",\n\n    maze: 0,\n    mazeResult: [],\n\n    animationStatus: false,\n    complete: true\n}\n\nexport function setAnimation(search, path, pathDirection, bomb, algorithm){\n    stopStatus.searchResult = search\n    stopStatus.pathResult = path\n    stopStatus.pathDirectionResult = pathDirection\n    stopStatus.bombResult = bomb\n    stopStatus.algorithm = algorithm\n}\n\nexport function setMazeAnimation(maze){\n    stopStatus.mazeResult = maze\n}\n\nexport function resetAnimation(){\n    stopStatus.searchBomb = [0, 0]\n    stopStatus.search = [0, 0]\n    stopStatus.path = 0\n    stopStatus.pathID = [-1, -1]\n\n    stopStatus.maze = 0\n\n    stopStatus.animationStatus = false\n    stopStatus.complete = true\n}\n\n\n/* Search */\n\nexport function SearchBombAnimation(search, bomb, path, pathDirection, speed, searchFunction, sysStatusFunction, updateFunction) {\n    stopStatus.complete = false\n    var count = stopStatus.searchBomb[0]\n\n    const searchBombAnimation = setInterval(() => {\n        if (count === search.length) {\n            stopStatus.searchBomb = [search.length, 0]\n            searchFunction(bomb, path, pathDirection, speed, PathAnimation, sysStatusFunction, updateFunction)\n            clearInterval(searchBombAnimation)\n\n        }else{\n            for(var i = (count === stopStatus.searchBomb[0]) * stopStatus.searchBomb[1];i < search[count].length;i++){\n\n                if(stopStatus.animationStatus === false){\n                    stopStatus.searchBomb = [count, i]\n                    sysStatusFunction()\n                    clearInterval(searchBombAnimation)\n                    return\n\n                }else{\n                    if (WhichComponentSame(search[count][i]) > 3) {\n                        if(position.bomb === false){\n                            setTable(search[count][i], componentKind.search)\n                        }else{\n                            setTable(search[count][i], componentKind.searchBomb)\n                        }\n                    }else{\n                        if(position.bomb === false){\n                            setTable(search[count][i], StartEndBombWeight(WhichComponentSame(search[count][i]), componentKind.startSearch, componentKind.endSearch, componentKind.bombSearch, componentKind.weightSearch))\n                        }else{\n                            setTable(search[count][i], StartEndBombWeight(WhichComponentSame(search[count][i]), componentKind.startSearchBomb, componentKind.endSearchBomb, componentKind.bombSearch, componentKind.weightSearchBomb))\n                        }\n                    }\n\n                }\n\n            }\n        }\n        count += 1\n    }, speed)\n}\n\nexport function SearchAnimation(bomb, path, pathDirection, speed, pathFunction, sysStatusFunction, updateFunction) {\n    var count = stopStatus.search[0]\n\n    const searchAnimation = setInterval(() => {\n        if (count === bomb.length) {\n            stopStatus.search = [bomb.length, 0]\n            pathFunction(path, speed, pathDirection, sysStatusFunction, updateFunction)\n            clearInterval(searchAnimation)\n\n        }else{\n            for(var i = (count === stopStatus.search[0]) * stopStatus.search[1];i < bomb[count].length;i++){\n\n                if(stopStatus.animationStatus === false){\n                    stopStatus.search = [count, i]\n                    sysStatusFunction()\n                    clearInterval(searchAnimation)\n                    return\n\n                }else{\n                    if (WhichComponentSame(bomb[count][i]) > 3) {\n                        setTable(bomb[count][i], componentKind.search)\n                    }else{\n                        setTable(bomb[count][i], StartEndBombWeight(WhichComponentSame(bomb[count][i]), componentKind.startSearch, componentKind.endSearch, componentKind.bombSearch, componentKind.weightSearch))\n                    }\n\n                }\n\n            }\n        }\n        count += 1\n    }, speed)\n}\n\nexport function PathAnimation(path, speed, pathDirection, sysStatusFunction, updateFunction) {\n    var [id, newid] = [stopStatus.pathID[0], stopStatus.pathID[1]]\n    var count = stopStatus.path\n\n    const pathAnimation = setInterval(() => {\n        if (count === path.length) {\n            resetAnimation()\n            updateFunction()\n            clearInterval(pathAnimation)\n\n        }else {\n            if(stopStatus.animationStatus === false){\n                stopStatus.path = count\n                stopStatus.pathID = [id, newid]\n                sysStatusFunction()\n                clearInterval(pathAnimation)\n                return\n\n            }else{\n                if (WhichComponentSame(path[count]) > 3) {\n                    newid = path[count]\n                    setTable(id, componentKind.path)\n                    setTable(newid, direction(pathDirection[count]))\n                    id = newid\n                }else{\n                    setTable(id, componentKind.path)\n                    setTable(path[count], StartEndBombWeight(WhichComponentSame(path[count]), direction(pathDirection[count]), direction(pathDirection[count]), componentKind.bombPath, componentKind.weightPath))\n                }\n\n            }\n\n        }\n        count += 1\n    }, speed)\n\n}\n\nexport function FinalAnimation(search, path, pathDirection, bomb){\n    for (var i = 0; i < search.length; i++) {\n        for (var j = 0; j < search[i].length; j++) {\n            if (WhichComponentSame(search[i][j]) > 3) {\n                if(position.bomb === false){\n                    setTable(search[i][j], componentKind.searchStatic)\n                }else{\n                    setTable(search[i][j], componentKind.searchBombStatic)\n                }\n            }else{\n                if(position.bomb === false){\n                    setTable(search[i][j], StartEndBombWeight(WhichComponentSame(search[i][j]), componentKind.startSearch, componentKind.endSearch, componentKind.bombSearch, componentKind.weightSearchStatic))\n                }else{\n                    setTable(search[i][j], StartEndBombWeight(WhichComponentSame(search[i][j]), componentKind.startSearchBomb, componentKind.endSearchBomb, componentKind.bombSearchBomb, componentKind.weightSearchBombStatic))\n                }\n            }\n        }\n    }\n    for (i = 0; i < bomb.length; i++) {\n        for (j = 0; j < bomb[i].length; j++) {\n            if (WhichComponentSame(bomb[i][j]) > 3) {\n                setTable(bomb[i][j], componentKind.searchStatic)\n            }else{\n                setTable(bomb[i][j], StartEndBombWeight(WhichComponentSame(bomb[i][j]), componentKind.startSearch, componentKind.endSearch, componentKind.bombSearch, componentKind.weightSearchStatic))\n            }\n        }\n    }\n    for (i = 0; i < path.length; i++) {\n        if (WhichComponentSame(path[i]) > 3) {\n            setTable(path[i], componentKind.pathStatic)\n        }else{\n            setTable(path[i], StartEndBombWeight(WhichComponentSame(path[i]), direction(pathDirection[i]), direction(pathDirection[i]), componentKind.bombPath, componentKind.weightPathStatic))\n        }\n    }\n}\n\n\n/* Maze */\n\nexport function MazeAnimation(maze, speed, sysStatusFunction, updateFunction) { // maze = [walls, weights]\n    stopStatus.complete = false\n\n    maze = maze[0]\n    speed = speed / 2\n\n    var count = stopStatus.maze\n    \n    const mazeAnimation = setInterval(() => {\n        if (count === maze.length) {\n            resetAnimation()\n            updateFunction()\n            clearInterval(mazeAnimation)\n\n        }else {\n            if (stopStatus.animationStatus === false){\n                stopStatus.maze = count\n                sysStatusFunction()\n                clearInterval(mazeAnimation)\n                return\n\n            }else{\n                if (WhichComponentSame(maze[count]) > 4) {\n                    setTable(maze[count], componentKind.wall, true)\n                }\n\n            }\n\n        }\n        count += 1\n    }, speed)\n}\n\nexport function FinalMazeAnimation(maze){ // maze = [walls, weights]\n    for(var i = 0; i < maze[0].length; i++){\n        setTable(maze[0][i], componentKind.wall, true)\n    }\n    for(i = 0; i < maze[1].length; i++){\n        setTable(maze[1][i], componentKind.weight, true)\n    }\n}\n\n\n/* Rocket left right up down */\n\nfunction direction(kind){\n\n    switch (kind) {\n        case \"left\":\n            return componentKind.pathHeadLeft\n        case \"right\":\n            return componentKind.pathHeadRight\n        case \"up\":\n            return componentKind.pathHeadUp\n        case \"down\":\n            return componentKind.pathHeadDown\n        default:\n            return componentKind.path\n    }\n\n}","class Queue {\n    constructor() {\n        this.queue = [];\n    }\n\n    append(val) {\n        this.queue.push(val);\n    }\n\n    popleft() {\n        if (this.isEmpty()) return -1;\n        return this.queue.shift();\n    }\n\n    isEmpty() {\n        return this.queue.length === 0;\n    }\n\n    getLength() {\n        return this.queue.length;\n    }\n\n    getArray() {\n        return this.queue;\n    }\n}\n\nexport default Queue;","class Distance {\n    constructor() {\n        this.dict = {};\n        this.max_d = 0;\n    }\n\n    // pos=[x, y], d=距離\n    set(pos, d) {\n        this.dict[pos] = d;\n        this.max_d = Math.max(this.max_d, d);\n    }\n\n    // 取得距離\n    get(pos) {\n        if (pos in this.dict) {\n            return this.dict[pos];\n        } else {\n            return -1;\n        }\n    }\n\n    remove(pos) {\n        if (pos in this.dict) {\n            delete this.dict[pos];\n        } else {\n            return -1;\n        }\n    }\n\n    // 從end開始找尋附近四周圍，第一個 \"有被找過的\" 且 \"距離最小的\"的點\n    // 回傳最短路徑 及 方向\n    getShortestPath(endPos) {\n        if (!(endPos in this.dict)) return []; // 若終點沒被找過，就回傳空值\n\n        var shortest = [endPos];\n        var shortestDirection = [];\n        var x = endPos[0];\n        var y = endPos[1];\n        var visited = new Set();\n\n        visited.add(endPos.toString());\n        while (this.max_d > 0) {\n            var curD = Infinity;\n            var curX = x;\n            var curY = y;\n            var dir = null;\n\n            // up\n            if ([x - 1, y] in this.dict && !(visited.has([x - 1, y].toString()))) {\n                if (this.dict[[x - 1, y]] < curD) {\n                    curX = x - 1;\n                    curY = y;\n                    curD = this.dict[[x - 1, y]];\n                    dir = \"down\"; // 上一個方向要反過來\n                }\n                visited.add([x - 1, y].toString());\n            }\n\n            // right\n            if ([x, y + 1] in this.dict && !(visited.has([x, y + 1].toString()))) {\n                if (this.dict[[x, y + 1]] < curD) {\n                    curX = x;\n                    curY = y + 1;\n                    curD = this.dict[[x, y + 1]];\n                    dir = \"left\"; // 上一個方向要反過來\n                }\n                visited.add([x, y + 1].toString());\n            }\n\n            // down\n            if ([x + 1, y] in this.dict && !(visited.has([x + 1, y].toString()))) {\n                if (this.dict[[x + 1, y]] < curD) {\n                    curX = x + 1;\n                    curY = y;\n                    curD = this.dict[[x + 1, y]];\n                    dir = \"up\"; // 上一個方向要反過來\n                }\n                visited.add([x + 1, y].toString());\n            }\n\n            // left\n            if ([x, y - 1] in this.dict && !(visited.has([x, y - 1].toString()))) {\n                if (this.dict[[x, y - 1]] < curD) {\n                    curX = x;\n                    curY = y - 1;\n                    curD = this.dict[[x, y - 1]];\n                    dir = \"right\"; // 上一個方向要反過來\n                }\n                visited.add([x, y - 1].toString());\n            }\n            x = curX;\n            y = curY;\n            shortest.unshift([x, y]);\n            shortestDirection.unshift(dir);\n            this.max_d = curD;\n        }\n        if (shortest.length === 1) return []; // 如果沒有找到路徑(只有終點自己)，則不用跑最短路徑\n        shortestDirection.unshift(shortestDirection[0]); // 加入改變方向找法\n\n        return [shortest, shortestDirection];\n    }\n\n    clear() {\n        this.dict = {};\n        this.max_d = 0;\n    }\n}\n\nexport default Distance;","import { position } from '../../Core';\nimport Queue from '../../Core/Queue';\nimport Distance from '../../Core/Distance';\n\nfunction BFS(startCallback, speed) {\n    var times = 1 + (position.bomb === false ? 0 : 1); // 如果有bomb要執行2次\n    var retSearchPath = [];\n    var retBombPath = [];\n    var retShortestPath = [];\n    var retDirection = [];\n\n    for (var i = 0; i < times; i++) {\n        var searchPath = [];\n        const visited = new Set();\n        const queue = new Queue();\n        var distance = new Distance();\n        var startPos = i === 0 ? position.start : position.bomb; // 第一次執行start，第二次bomb\n        var endPos = i === 0 && times > 1 ? position.bomb : position.end; // 第一次執行bomb，第二次end\n\n        distance.set(startPos, 0); // 加入自己\n        queue.append([startPos, 0]); // [pos, 距離]\n        visited.add(startPos.toString()); // 防止重複找尋\n        while (queue.getLength() > 0) {\n            var node = queue.popleft();\n            var x = node[0][0];\n            var y = node[0][1];\n            var nextD = node[1] + 1;\n\n            if (nextD > searchPath.length) searchPath.push([]); // 若有新的長度就增加array\n\n            if ([x, y].toString() === endPos.toString()) break; // 若找到終點就跳出\n\n            // left\n            if (y - 1 >= 0 && !([x, y - 1] in position.wall) && !(visited.has([x, y - 1].toString()))) {\n                queue.append([[x, y - 1], nextD]);\n                searchPath[nextD - 1].push([x, y - 1]);\n                distance.set([x, y - 1], nextD);\n                visited.add([x, y - 1].toString());\n            }\n\n            // up\n            if (x - 1 >= 0 && !([x - 1, y] in position.wall) && !(visited.has([x - 1, y].toString()))) {\n                queue.append([[x - 1, y], nextD]);\n                searchPath[nextD - 1].push([x - 1, y]);\n                distance.set([x - 1, y], nextD);\n                visited.add([x - 1, y].toString());\n            }\n\n            // right\n            // 這裡的position.rowSize怪怪的\n            if (y + 1 < position.colSize && !([x, y + 1] in position.wall) && !(visited.has([x, y + 1].toString()))) {\n                queue.append([[x, y + 1], nextD]);\n                searchPath[nextD - 1].push([x, y + 1]);\n                distance.set([x, y + 1], nextD);\n                visited.add([x, y + 1].toString());\n            }\n\n            // down\n            // 這裡的position.colSize怪怪的\n            if (x + 1 < position.rowSize && !([x + 1, y] in position.wall) && !(visited.has([x + 1, y].toString()))) {\n                queue.append([[x + 1, y], nextD]);\n                searchPath[nextD - 1].push([x + 1, y]);\n                distance.set([x + 1, y], nextD);\n                visited.add([x + 1, y].toString());\n            }\n\n        }\n\n        // 去除多找的一圈\n        while (distance.get(endPos) !== -1 && searchPath.length > distance.get(endPos)) {\n            searchPath.pop();\n        }\n\n        if (i === 0) {\n            retSearchPath = retSearchPath.concat(searchPath);\n        } else {\n            retBombPath = retBombPath.concat(searchPath);\n        }\n\n        if (distance.get(endPos) === -1) break; // 如果第一次沒找到終點，不加入最短路徑\n\n        // 取得最短路徑\n        var shortest = distance.getShortestPath(endPos);\n        retShortestPath = retShortestPath.concat(shortest[0]);\n        retDirection = retDirection.concat(shortest[1]);\n        if (i === 0 && times === 2) {\n            // 將尾巴（bomb）去除\n            retShortestPath.splice(retShortestPath.length - 1, 1);\n            retDirection.splice(retDirection.length - 1, 1);\n        }\n    }\n    retSearchPath.unshift([position.start]); // 加入起始點\n    // 執行 start 動畫\n    startCallback(retSearchPath, retShortestPath, retDirection, speed, retBombPath);\n}\nexport default BFS;","import { position } from '../../Core';\n\nfunction DFS(startCallback, speed) {\n    var retSearchPath = [];\n    var retBombPath = [];\n    var retShortestPath = [];\n    var retDirection = [];\n\n    // dfs 需bottom-up去找最短路徑\n    function DoDFS(x, y, endPos, visited, startPath, retShortestPath, retDirection) {\n        if (x < 0 || y < 0 || x >= position.rowSize || y >= position.colSize || [x, y] in position.wall || visited.has([x, y].toString())) {\n            return false;\n        }\n\n        visited.add([x, y].toString());\n        startPath.push([[x, y]]); // 每一層都是一個\n\n        if ([x, y].toString() === endPos.toString()) {\n            retShortestPath.unshift([x, y]);\n            return true;\n        }\n\n\n        if (DoDFS(x - 1, y, endPos, visited, startPath, retShortestPath, retDirection)) {// up\n            retShortestPath.unshift([x, y]);\n            retDirection.unshift(\"up\");\n            return true;\n        }\n        if (DoDFS(x, y + 1, endPos, visited, startPath, retShortestPath, retDirection)) {// right\n            retShortestPath.unshift([x, y]);\n            retDirection.unshift(\"right\");\n            return true;\n        }\n        if (DoDFS(x + 1, y, endPos, visited, startPath, retShortestPath, retDirection)) {// down\n            retShortestPath.unshift([x, y]);\n            retDirection.unshift(\"down\");\n            return true;\n        }\n        if (DoDFS(x, y - 1, endPos, visited, startPath, retShortestPath, retDirection)) {// left\n            retShortestPath.unshift([x, y]);\n            retDirection.unshift(\"left\");\n            return true;\n        }\n    }\n    const visited = new Set();\n    var start = position.start;\n    if (position.bomb) {\n        DoDFS(start[0], start[1], position.bomb, visited, retSearchPath, retShortestPath, retDirection);\n        start = position.bomb;\n        visited.clear();\n\n        // 有找到最小路徑才繼續\n        if (retShortestPath.length > 0) {\n            // bottom up 時 尾巴不確定方向，故現在加上方向\n            retShortestPath.splice(retShortestPath.length - 1, 1); // 去除bomb重複\n            var tmp = []; // 因為unshift，所以先暫存\n            var tmp2 = [];\n            DoDFS(start[0], start[1], position.end, visited, retBombPath, tmp, tmp2);\n            retShortestPath = retShortestPath.concat(tmp);\n            retDirection = retDirection.concat(tmp2);\n        }\n    } else {\n        DoDFS(start[0], start[1], position.end, visited, retBombPath, retShortestPath, retDirection);\n    }\n\n    // bottom up 時 尾巴不確定方向，故現在加上方向\n    retDirection.unshift(retDirection[0]); // 改變方向找法，往前推移一格\n    startCallback(retSearchPath, retShortestPath, retDirection, speed, retBombPath);\n}\n\nexport default DFS;","// Reference: https://www.programiz.com/dsa/priority-queue\n\n// 建立 min-heap\nclass PriorityQueue {\n    constructor() {\n        this.arr = [];\n    }\n\n    // 丟進來的東西有，table[pos][strategy], pos, Heuristic數字\n    // 因為如果一樣大，要取得距離終點小的\n    Push(score, heuristic, pos) {\n        if (this.arr.length === 0) {\n            this.arr.push([score, heuristic, pos]);\n        } else {\n            // 插入最後 -> heapify\n            this.arr.push([score, heuristic, pos]);\n            this.HeapifyAll(this.arr.length - 1); // 不用-1感覺也可以，等等試試\n        }\n    }\n\n    Pop() {\n        // 交換最後 -> heapify\n        let tmp = this.arr[0];\n        this.arr[0] = this.arr[this.arr.length - 1];\n        this.arr[this.arr.length - 1] = tmp;\n        this.arr.splice(this.arr.length - 1, 1);\n        this.HeapifyAll(this.arr.length - 1);\n        return tmp[2];\n    }\n\n    Peek() {\n        return this.arr[0][2];\n    }\n\n    Length() {\n        return this.arr.length;\n    }\n\n    Heapify(index) {\n        let n = this.arr.length;\n        let smallest = index;\n        let left = 2 * index;\n        let right = 2 * index + 1;\n\n        if (left < n) {\n            if (this.arr[smallest][0] > this.arr[left][0]) {\n                smallest = left;\n            } else if (this.arr[smallest][0] === this.arr[left][0]) {\n                if (this.arr[smallest][1] > this.arr[left][1]) {\n                    smallest = left;\n                }\n            }\n        }\n\n        if (right < n) {\n            if (this.arr[smallest][0] > this.arr[right][0]) {\n                smallest = right;\n            } else if (this.arr[smallest][0] === this.arr[right][0]) {\n                if (this.arr[smallest][1] > this.arr[right][1]) {\n                    smallest = right;\n                }\n            }\n        }\n\n        if (smallest !== index) {\n            let tmp = this.arr[index];\n            this.arr[index] = this.arr[smallest];\n            this.arr[smallest] = tmp;\n            this.Heapify(smallest);\n        }\n    }\n\n    HeapifyAll(index) {\n        for (let i = Math.floor(index / 2); i >= 0; i--) {\n            this.Heapify(i);\n        }\n    }\n}\n\nexport default PriorityQueue;","import { position } from '../../Core';\nimport PriorityQueue from '../../Core/PriorityQueue';\n\nfunction Dijkstra(whichAlgo, startCallback, speed) {\n    var retSearchPath = [];\n    var retBombPath = [];\n    var retShortestPath = [];\n    var retDirection = [];\n\n    if (position.bomb) {\n        retShortestPath = retShortestPath.concat(DoDijkstra(whichAlgo, position.start, position.bomb, retSearchPath, retDirection))\n\n        // 有找到最小路徑才繼續\n        if (retShortestPath.length > 0) {\n            retShortestPath.splice(retShortestPath.length - 1, 1); // 第一段的終點也是第二段的起點，故去除\n            retDirection.splice(retDirection.length - 1, 1); // 第一段的終點也是第二段的起點，故去除\n            let tmp = []; // 因為unshift所以暫存\n            retShortestPath = retShortestPath.concat(DoDijkstra(whichAlgo, position.bomb, position.end, retBombPath, tmp))\n            retDirection = retDirection.concat(tmp);\n        }\n    } else {\n        retShortestPath = retShortestPath.concat(DoDijkstra(whichAlgo, position.start, position.end, retSearchPath, retDirection))\n    }\n\n    // 執行 start 動畫\n    startCallback(retSearchPath, retShortestPath, retDirection, speed, retBombPath);\n}\n\n// 回傳最短路徑\nfunction DoDijkstra(whichAlgo, startPos, endPos, searchPath, retDirection) {\n    /*  //https://medium.com/basecs/finding-the-shortest-path-with-a-little-help-from-dijkstra-613149fbdc8e\n        Create Dijkstra table \n        \n        table = {pos : [shortest distance, previous vertex]}\n            * start pos : [0, null]\n            * use priority queue to pick the pos which contains current shortest disance.\n    */\n\n\n    // 設定table: 起始點為0，其他為無限大，所有的previous vertex均為null\n    // 設定目前最短路徑的queue\n    var table = [{}, {}];\n    var i, j;\n    for (i = 0; i < position.rowSize; i++) {\n        for (j = 0; j < position.colSize; j++) {\n            var pos = [i, j];\n\n            // 起始點走到pos的最短距離，上一個點，direction，total距離\n            table[0][pos] = [Infinity, null, null, Infinity];\n            table[1][pos] = [Infinity, null, null, Infinity]; // for 決定起始點（bidirection\n        }\n    }\n\n    var end = null; // 決定終點（可能bomb or end）\n    var unvisited = [new PriorityQueue(), new PriorityQueue()]; // [0]: start, [1]: end\n    switch (whichAlgo) {\n        case \"Dijkstra\":\n            table[0][startPos] = [0, null, \"up\", 0]; // 設定起始點\n            unvisited[0].Push(0, 0, startPos); // 設定目前最短路徑的queue\n            end = [endPos];\n            break;\n        case \"Astar\":\n            table[0][startPos] = [0, null, \"up\", 0]; // 設定起始點\n            unvisited[0].Push(0, 0, startPos); // 設定目前最短路徑的queue\n            end = [endPos];\n            break;\n        case \"Swarm\":\n            table[0][startPos] = [0, null, \"right\", 0]; // 設定起始點\n            unvisited[0].Push(0, 0, startPos); // 設定目前最短路徑的queue\n            end = [endPos];\n            break;\n        case \"GreedyBestFirstSearch\":\n            table[0][startPos] = [0, null, \"up\", 0]; // 設定起始點\n            unvisited[0].Push(0, 0, startPos); // 設定目前最短路徑的queue\n            end = [endPos];\n            break;\n        case \"ConvergentSwarm\":\n            table[0][startPos] = [0, null, \"right\", 0]; // 設定起始點\n            unvisited[0].Push(0, 0, startPos); // 設定目前最短路徑的queue\n            end = [endPos];\n            break;\n        case \"BidirectionSwarm\":\n            table[0][startPos] = [0, null, \"right\", 0]; // 設定起始點\n            table[1][endPos] = [0, null, \"left\", 0]; // 設定起始點\n            unvisited[0].Push(0, 0, startPos); // 設定目前最短路徑的queue\n            unvisited[1].Push(0, 0, endPos); // 設定目前最短路徑的queue\n            end = [endPos, startPos];\n            break;\n        default:\n            break;\n    }\n\n    /* 演算法開始 */\n    var curShortestPath = []\n    var which = 1; // 0 for start, 1 for end\n    var actualEnd = null;\n    var isFoundEnd = false;\n    var visited = [new Set(), new Set()]; // [0]: start, [1]: end\n\n    while (unvisited[0].Length() > 0 || unvisited[1].Length() > 0) {\n\n        // 選要走哪邊\n        if (unvisited[0].Length() > 0 && unvisited[1].Length() > 0) {\n            which = (which + 1) % 2;\n        } else if (unvisited[0].Length() > 0) {\n            which = 0;\n        } else if (unvisited[1].Length() > 0) {\n            which = 1;\n        }\n\n        // 1. 選出當前最小路徑的點\n        var curPos = null;\n        curPos = GetClosestNode(unvisited[which]);\n\n        if (curPos in position.wall) {\n            continue; // 牆壁不走\n        }\n\n        // 2. 計算相鄰且尚未走過的點\n        var up = curPos[0] - 1 >= 0 ? [curPos[0] - 1, curPos[1]] : null;\n        var right = curPos[1] + 1 < position.colSize ? [curPos[0], curPos[1] + 1] : null;\n        var down = curPos[0] + 1 < position.rowSize ? [curPos[0] + 1, curPos[1]] : null;\n        var left = curPos[1] - 1 >= 0 ? [curPos[0], curPos[1] - 1] : null;\n\n        // eslint-disable-next-line\n        [up, right, down, left].forEach((nextPos, idx) => {\n            if (!nextPos || nextPos in position.wall) return; // 若超過邊界 or 是牆壁\n\n            // 走過的也要更新，只是不會加入unvisited，因此不會在上面continue\n            var total = null;\n            var weight = (nextPos in position.weight ? position.weightValue : 0);\n            switch (whichAlgo) {\n                case \"Dijkstra\":\n                    // 策略為：只考慮 目前總分+權重+轉向分數\n                    total = table[which][curPos][0] + weight + GetScore(table[which][curPos][2], idx);\n                    break;\n                case \"Astar\":\n                    // 策略為：只考慮 目前總分+權重+轉向分數\n                    total = table[which][curPos][0] + weight + GetScore(table[which][curPos][2], idx);\n                    break;\n                case \"Swarm\":\n                    // 策略為：只考慮 目前總分+權重+轉向分數+估算\n                    total = table[which][curPos][0] + weight + GetScore(table[which][curPos][2], idx) + Math.pow(GetHeuristic(nextPos, end[which]), 2);\n                    break;\n                case \"GreedyBestFirstSearch\":\n                    // 策略為：只考慮 估值+轉向分數\n                    total = table[which][curPos][0] + GetScore(table[which][nextPos][2], idx);\n                    break;\n                case \"ConvergentSwarm\":\n                    // 策略為：只考慮 目前總分+權重+轉向分數+估算\n                    total = table[which][curPos][0] + (weight + GetScore(table[which][curPos][2], idx)) * Math.pow(GetHeuristic(nextPos, end[which]), 7);\n                    break;\n                case \"BidirectionSwarm\":\n                    // 策略為：只考慮 目前總分+權重+轉向分數+估算\n                    total = table[which][curPos][0] + weight + GetScore(table[which][curPos][2], idx) + Math.pow(GetHeuristic(nextPos, end[which]), 2);\n                    break;\n                default:\n                    break;\n            }\n\n            if (total <= table[which][nextPos][0]) {\n                table[which][nextPos][0] = total;\n                table[which][nextPos][1] = curPos;\n                switch (idx) {\n                    case 0:\n                        if (which === 0) table[which][nextPos][2] = \"up\";\n                        else table[which][nextPos][2] = \"down\";\n                        break;\n                    case 1:\n                        if (which === 0) table[which][nextPos][2] = \"right\";\n                        else table[which][nextPos][2] = \"left\";\n                        break;\n                    case 2:\n                        if (which === 0) table[which][nextPos][2] = \"down\";\n                        else table[which][nextPos][2] = \"up\";\n                        break;\n                    case 3:\n                        if (which === 0) table[which][nextPos][2] = \"left\";\n                        else table[which][nextPos][2] = \"right\";\n                        break;\n                    default:\n                        break;\n                }\n\n                switch (whichAlgo) {\n                    case \"Dijkstra\":\n                        table[which][nextPos][3] = table[which][nextPos][0];\n                        break;\n                    case \"Astar\":\n                        table[which][nextPos][3] = table[which][nextPos][0] + GetHeuristic(nextPos, endPos);\n                        break;\n                    case \"Swarm\":\n                        table[which][nextPos][3] = table[which][nextPos][0];\n                        break;\n                    case \"GreedyBestFirstSearch\":\n                        table[which][nextPos][3] = table[which][nextPos][0] + GetScore(table[which][nextPos][2], idx);\n                        break;\n                    case \"ConvergentSwarm\":\n                        table[which][nextPos][3] = table[which][nextPos][0];\n                        break;\n                    case \"BidirectionSwarm\":\n                        table[which][nextPos][3] = table[which][nextPos][0];\n                        break;\n                    default:\n                        break;\n                }\n            }\n\n            // 加入尚未走過的點 \n            if (!visited[which].has(curPos.toString())) {\n                unvisited[which].Push(table[which][nextPos][3], GetHeuristic(nextPos, endPos), nextPos);\n            }\n\n            // 若找尋過程有對方搜尋到的，則更新actualEnd\n            if (whichAlgo === \"BidirectionSwarm\") {\n                if (visited[(which + 1) % 2].has(curPos.toString())) {\n                    if (actualEnd === null) {\n                        actualEnd = curPos;\n                        var tmp = actualEnd;\n                        while (tmp) { // 因為找到start時的previous vertex為null\n                            if (which === 0) {\n                                curShortestPath.unshift(tmp); // bidirection 左右兩邊要插入的方式相反\n                                retDirection.unshift(table[which][tmp][2]);\n                            } else {\n                                curShortestPath.push(tmp);\n                                retDirection.push(table[which][tmp][2]);\n                            }\n                            tmp = table[which][tmp][1];\n                        }\n                        if (which === 1) {\n                            // end 奇數個: actualEnd下面會在計算一次，而因為要保證「過彎處為上一個的方向」，故下面不計算actualEnd\n                        } else {\n                            // start 偶數個: actualEnd下面會在計算一次，因此去除\n                            curShortestPath.splice(curShortestPath.length - 1, 1);\n                            retDirection.splice(retDirection.length - 1, 1);\n                        }\n                    } else {\n                        isFoundEnd = true;\n                    }\n                }\n            } else {\n                if (nextPos.toString() === endPos.toString()) { // 看是否找到終點了\n                    actualEnd = nextPos;\n                    isFoundEnd = true;\n\n                    // 因為是找四周，所以找到end之後，要把end資訊加入其中\n                    table[which][actualEnd][1] = curPos;\n                }\n            }\n        })\n\n        if (!visited[which].has(curPos.toString())) {\n            searchPath.push([curPos]); // 加入搜尋範圍\n            visited[which].add(curPos.toString()); // 加入已走過\n        }\n\n        if (isFoundEnd) { // 找到終點跳出\n            searchPath.push([actualEnd]); // 先加入258行，再加入終點\n            break;\n        }\n    }\n\n    // 若有找到終點再判斷最小路徑\n    if (isFoundEnd) {\n        curPos = actualEnd;\n        if (whichAlgo !== \"BidirectionSwarm\") which = 1;\n        while (curPos) { // 因為找到start時的previous vertex為null\n            if (which === 1) {\n                if (whichAlgo === \"BidirectionSwarm\") {\n                    if (curPos.toString() !== actualEnd.toString()) { // 因為要保證「過彎處為上一個的方向」，故下面不計算actualEnd\n                        curShortestPath.unshift(curPos); // bidirection 左右兩邊要插入的方式相反\n                        retDirection.unshift(table[(which + 1) % 2][curPos][2]);\n                    }\n                } else {\n                    curShortestPath.unshift(curPos); // bidirection 左右兩邊要插入的方式相反\n                    retDirection.unshift(table[(which + 1) % 2][curPos][2]);\n                }\n            } else {\n                curShortestPath.push(curPos);\n                retDirection.push(table[(which + 1) % 2][curPos][2]);\n            }\n            curPos = table[(which + 1) % 2][curPos][1];\n        }\n    }\n\n    // 因為是找四周圍，只更新是周圍，所以頭的資訊不會被更新，因此去除頭且延伸目前的第一個位置即可\n    retDirection.splice(0, 1);\n    retDirection.unshift(retDirection[0]);\n    // BidirectionSwarm 有兩個頭，所以尾巴的頭也要做一次\n    if (whichAlgo === \"BidirectionSwarm\") {\n        retDirection.unshift(retDirection[0]);\n        retDirection.splice(retDirection.length - 1, 1);\n    }\n    return curShortestPath;\n}\n\n// 推測值：用距離來表示，因為是棋盤，所以改成最短距離幾格\nfunction GetHeuristic(startPos, endPos) {\n    return Math.abs(endPos[0] - startPos[0]) + Math.abs(endPos[1] - startPos[1]);\n}\n\n// 找出分數最小點，策略：考慮所有的分數 目前總分+權重+轉向分數+估值\nfunction GetClosestNode(unvisited) {\n    let retPos = unvisited.Pop();\n    return retPos;\n}\n\n// 取得轉向分數\n// 考慮轉向分數是為了只搜尋一條線，如果沒有這個分數，則搜尋會變成三條線，因為１點的前下上 距離終點 的估值可能相同，所以會走三條路\nfunction GetScore(direction, index) {\n    var score = 0;\n    switch (direction) {\n        case \"up\":\n            switch (index) {\n                case 0:\n                    score = 1;\n                    break;\n                case 1:\n                    score = 2;\n                    break;\n                case 2:\n                    score = 3;\n                    break;\n                case 3:\n                    score = 2;\n                    break;\n                default:\n                    break;\n            }\n            break;\n        case \"right\":\n            switch (index) {\n                case 0:\n                    score = 2;\n                    break;\n                case 1:\n                    score = 1;\n                    break;\n                case 2:\n                    score = 2;\n                    break;\n                case 3:\n                    score = 3;\n                    break;\n                default:\n                    break;\n            }\n            break;\n        case \"down\":\n            switch (index) {\n                case 0:\n                    score = 3;\n                    break;\n                case 1:\n                    score = 2;\n                    break;\n                case 2:\n                    score = 1;\n                    break;\n                case 3:\n                    score = 2;\n                    break;\n                default:\n                    break;\n            }\n            break;\n        case \"left\":\n            switch (index) {\n                case 0:\n                    score = 2;\n                    break;\n                case 1:\n                    score = 3;\n                    break;\n                case 2:\n                    score = 2;\n                    break;\n                case 3:\n                    score = 1;\n                    break;\n                default:\n                    break;\n            }\n            break;\n        default:\n            break;\n    }\n    return score;\n}\n\nexport default Dijkstra;","import { position } from '../../Core';\n\nfunction Dijkstra_old(whichAlgo, startCallback, speed) {\n    var retSearchPath = [];\n    var retBombPath = [];\n    var retShortestPath = [];\n    var retDirection = [];\n\n    if (position.bomb) {\n        retShortestPath = retShortestPath.concat(DoDijkstra_old(whichAlgo, position.start, position.bomb, retSearchPath, retDirection))\n\n        // 有找到最小路徑才繼續\n        if (retShortestPath.length > 0) {\n            retShortestPath.splice(retShortestPath.length - 1, 1); // 第一段的終點也是第二段的起點，故去除\n            retDirection.splice(retDirection.length - 1, 1); // 第一段的終點也是第二段的起點，故去除\n            let tmp = []; // 因為unshift所以暫存\n            retShortestPath = retShortestPath.concat(DoDijkstra_old(whichAlgo, position.bomb, position.end, retBombPath, tmp))\n            retDirection = retDirection.concat(tmp);\n        }\n    } else {\n        retShortestPath = retShortestPath.concat(DoDijkstra_old(whichAlgo, position.start, position.end, retSearchPath, retDirection))\n    }\n\n    // 執行 start 動畫\n    startCallback(retSearchPath, retShortestPath, retDirection, speed, retBombPath);\n}\n\n// 回傳最短路徑\nfunction DoDijkstra_old(whichAlgo, startPos, endPos, searchPath, retDirection) {\n    /*  //https://medium.com/basecs/finding-the-shortest-path-with-a-little-help-from-dijkstra-613149fbdc8e\n        Create Dijkstra table \n        \n        table = {pos : [shortest distance, previous vertex]}\n            * start pos : [0, null]\n            * use priority queue to pick the pos which contains current shortest disance.\n    */\n\n\n    // 設定table: 起始點為0，其他為無限大，所有的previous vertex均為null\n    // 設定目前最短路徑的queue\n    var table = [{}, {}];\n    var i, j;\n    for (i = 0; i < position.rowSize; i++) {\n        for (j = 0; j < position.colSize; j++) {\n            var pos = [i, j];\n\n            // 起始點走到pos的最短距離，上一個點，direction，total距離\n            table[0][pos] = [Infinity, null, null, Infinity];\n            table[1][pos] = [Infinity, null, null, Infinity]; // for 決定起始點（bidirection\n        }\n    }\n\n    var end = null; // 決定終點（可能bomb or end）\n    var unvisited = [[], []]; // [0]: start, [1]: end\n    switch (whichAlgo) {\n        case \"Dijkstra\":\n            table[0][startPos] = [0, null, \"up\", 0]; // 設定起始點\n            unvisited[0].push(startPos); // 設定目前最短路徑的queue\n            end = [endPos];\n            break;\n        case \"Astar\":\n            table[0][startPos] = [0, null, \"up\", 0]; // 設定起始點\n            unvisited[0].push(startPos); // 設定目前最短路徑的queue\n            end = [endPos];\n            break;\n        case \"Swarm\":\n            table[0][startPos] = [0, null, \"right\", 0]; // 設定起始點\n            unvisited[0].push(startPos); // 設定目前最短路徑的queue\n            end = [endPos];\n            break;\n        case \"GreedyBestFirstSearch\":\n            table[0][startPos] = [0, null, \"up\", 0]; // 設定起始點\n            unvisited[0].push(startPos); // 設定目前最短路徑的queue\n            end = [endPos];\n            break;\n        case \"ConvergentSwarm\":\n            table[0][startPos] = [0, null, \"right\", 0]; // 設定起始點\n            unvisited[0].push(startPos); // 設定目前最短路徑的queue\n            end = [endPos];\n            break;\n        case \"BidirectionSwarm\":\n            table[0][startPos] = [0, null, \"right\", 0]; // 設定起始點\n            table[1][endPos] = [0, null, \"left\", 0]; // 設定起始點\n            unvisited[0].push(startPos); // 設定目前最短路徑的queue\n            unvisited[1].push(endPos); // 設定目前最短路徑的queue\n            end = [endPos, startPos];\n            break;\n        default:\n            break;\n    }\n\n    /* 演算法開始 */\n    var curShortestPath = []\n    var which = 1; // 0 for start, 1 for end\n    var actualEnd = null;\n    var isFoundEnd = false;\n    var visited = [new Set(), new Set()]; // [0]: start, [1]: end\n\n    while (unvisited[0].length > 0 || unvisited[1].length > 0) {\n\n        // 選要走哪邊\n        if (unvisited[0].length > 0 && unvisited[1].length > 0) {\n            which = (which + 1) % 2;\n        } else if (unvisited[0].length > 0) {\n            which = 0;\n        } else if (unvisited[1].length > 0) {\n            which = 1;\n        }\n\n        // 1. 選出當前最小路徑的點\n        var curPos = null;\n        curPos = GetClosestNode(table[which], 3, unvisited[which], end[which]);\n\n        if (curPos in position.wall) {\n            continue; // 牆壁不走\n        }\n\n        // 2. 計算相鄰且尚未走過的點\n        var up = curPos[0] - 1 >= 0 ? [curPos[0] - 1, curPos[1]] : null;\n        var right = curPos[1] + 1 < position.colSize ? [curPos[0], curPos[1] + 1] : null;\n        var down = curPos[0] + 1 < position.rowSize ? [curPos[0] + 1, curPos[1]] : null;\n        var left = curPos[1] - 1 >= 0 ? [curPos[0], curPos[1] - 1] : null;\n\n        // eslint-disable-next-line\n        [up, right, down, left].forEach((nextPos, idx) => {\n            if (!nextPos || nextPos in position.wall) return; // 若超過邊界 or 是牆壁\n\n            // 走過的也要更新，只是不會加入unvisited，因此不會在上面continue\n            var total = null;\n            var weight = (nextPos in position.weight ? position.weightValue : 0);\n            switch (whichAlgo) {\n                case \"Dijkstra\":\n                    // 策略為：只考慮 目前總分+權重+轉向分數\n                    total = table[which][curPos][0] + weight + GetScore(table[which][curPos][2], idx);\n                    break;\n                case \"Astar\":\n                    // 策略為：只考慮 目前總分+權重+轉向分數\n                    total = table[which][curPos][0] + weight + GetScore(table[which][curPos][2], idx);\n                    break;\n                case \"Swarm\":\n                    // 策略為：只考慮 目前總分+權重+轉向分數+估算\n                    total = table[which][curPos][0] + weight + GetScore(table[which][curPos][2], idx) + Math.pow(GetHeuristic(nextPos, end[which]), 2);\n                    break;\n                case \"GreedyBestFirstSearch\":\n                    // 策略為：只考慮 估值+轉向分數\n                    total = table[which][curPos][0] + GetScore(table[which][nextPos][2], idx);\n                    break;\n                case \"ConvergentSwarm\":\n                    // 策略為：只考慮 目前總分+權重+轉向分數+估算\n                    total = table[which][curPos][0] + (weight + GetScore(table[which][curPos][2], idx)) * Math.pow(GetHeuristic(nextPos, end[which]), 7);\n                    break;\n                case \"BidirectionSwarm\":\n                    // 策略為：只考慮 目前總分+權重+轉向分數+估算\n                    total = table[which][curPos][0] + weight + GetScore(table[which][curPos][2], idx) + Math.pow(GetHeuristic(nextPos, end[which]), 2);\n                    break;\n                default:\n                    break;\n            }\n\n            if (total <= table[which][nextPos][0]) {\n                table[which][nextPos][0] = total;\n                table[which][nextPos][1] = curPos;\n                switch (idx) {\n                    case 0:\n                        if (which === 0) table[which][nextPos][2] = \"up\";\n                        else table[which][nextPos][2] = \"down\";\n                        break;\n                    case 1:\n                        if (which === 0) table[which][nextPos][2] = \"right\";\n                        else table[which][nextPos][2] = \"left\";\n                        break;\n                    case 2:\n                        if (which === 0) table[which][nextPos][2] = \"down\";\n                        else table[which][nextPos][2] = \"up\";\n                        break;\n                    case 3:\n                        if (which === 0) table[which][nextPos][2] = \"left\";\n                        else table[which][nextPos][2] = \"right\";\n                        break;\n                    default:\n                        break;\n                }\n\n                switch (whichAlgo) {\n                    case \"Dijkstra\":\n                        table[which][nextPos][3] = table[which][nextPos][0];\n                        break;\n                    case \"Astar\":\n                        table[which][nextPos][3] = table[which][nextPos][0] + GetHeuristic(nextPos, endPos);\n                        break;\n                    case \"Swarm\":\n                        table[which][nextPos][3] = table[which][nextPos][0];\n                        break;\n                    case \"GreedyBestFirstSearch\":\n                        table[which][nextPos][3] = table[which][nextPos][0] + GetScore(table[which][nextPos][2], idx);\n                        break;\n                    case \"ConvergentSwarm\":\n                        table[which][nextPos][3] = table[which][nextPos][0];\n                        break;\n                    case \"BidirectionSwarm\":\n                        table[which][nextPos][3] = table[which][nextPos][0];\n                        break;\n                    default:\n                        break;\n                }\n            }\n\n            // 加入尚未走過的點 \n            if (!visited[which].has(curPos.toString())) {\n                unvisited[which].push(nextPos);\n            }\n\n            // 若找尋過程有對方搜尋到的，則更新actualEnd\n            if (whichAlgo === \"BidirectionSwarm\") {\n                if (visited[(which + 1) % 2].has(curPos.toString())) {\n                    if (actualEnd === null) {\n                        actualEnd = curPos;\n                        var tmp = actualEnd;\n                        while (tmp) { // 因為找到start時的previous vertex為null\n                            if (which === 0) {\n                                curShortestPath.unshift(tmp); // bidirection 左右兩邊要插入的方式相反\n                                retDirection.unshift(table[which][tmp][2]);\n                            } else {\n                                curShortestPath.push(tmp);\n                                retDirection.push(table[which][tmp][2]);\n                            }\n                            tmp = table[which][tmp][1];\n                        }\n                        if (which === 1) {\n                            // end 奇數個: actualEnd下面會在計算一次，而因為要保證「過彎處為上一個的方向」，故下面不計算actualEnd\n                        } else {\n                            // start 偶數個: actualEnd下面會在計算一次，因此去除\n                            curShortestPath.splice(curShortestPath.length - 1, 1);\n                            retDirection.splice(retDirection.length - 1, 1);\n                        }\n                    } else {\n                        isFoundEnd = true;\n                    }\n                }\n            } else {\n                if (nextPos.toString() === endPos.toString()) { // 看是否找到終點了\n                    actualEnd = nextPos;\n                    isFoundEnd = true;\n\n                    // 因為是找四周，所以找到end之後，要把end資訊加入其中\n                    table[which][actualEnd][1] = curPos;\n                }\n            }\n        })\n\n        if (!visited[which].has(curPos.toString())) {\n            searchPath.push([curPos]); // 加入搜尋範圍\n            visited[which].add(curPos.toString()); // 加入已走過\n        }\n\n        if (isFoundEnd) { // 找到終點跳出\n            searchPath.push([actualEnd]); // 先加入258行，再加入終點\n            break;\n        }\n    }\n\n    // 若有找到終點再判斷最小路徑\n    if (isFoundEnd) {\n        curPos = actualEnd;\n        if (whichAlgo !== \"BidirectionSwarm\") which = 1;\n        while (curPos) { // 因為找到start時的previous vertex為null\n            if (which === 1) {\n                if (whichAlgo === \"BidirectionSwarm\") {\n                    if (curPos.toString() !== actualEnd.toString()) { // 因為要保證「過彎處為上一個的方向」，故下面不計算actualEnd\n                        curShortestPath.unshift(curPos); // bidirection 左右兩邊要插入的方式相反\n                        retDirection.unshift(table[(which + 1) % 2][curPos][2]);\n                    }\n                } else {\n                    curShortestPath.unshift(curPos); // bidirection 左右兩邊要插入的方式相反\n                    retDirection.unshift(table[(which + 1) % 2][curPos][2]);\n                }\n            } else {\n                curShortestPath.push(curPos);\n                retDirection.push(table[(which + 1) % 2][curPos][2]);\n            }\n            curPos = table[(which + 1) % 2][curPos][1];\n        }\n    }\n\n    // 因為是找四周圍，只更新是周圍，所以頭的資訊不會被更新，因此去除頭且延伸目前的第一個位置即可\n    retDirection.splice(0, 1);\n    retDirection.unshift(retDirection[0]);\n    // BidirectionSwarm 有兩個頭，所以尾巴的頭也要做一次\n    if (whichAlgo === \"BidirectionSwarm\") {\n        retDirection.unshift(retDirection[0]);\n        retDirection.splice(retDirection.length - 1, 1);\n    }\n    return curShortestPath;\n}\n\n// 推測值：用距離來表示，因為是棋盤，所以改成最短距離幾格\nfunction GetHeuristic(startPos, endPos) {\n    return Math.abs(endPos[0] - startPos[0]) + Math.abs(endPos[1] - startPos[1]);\n}\n\n// 找出分數最小點，策略：考慮所有的分數 目前總分+權重+轉向分數+估值\nfunction GetClosestNode(table, strategy, unvisited, endPos) {\n    let retPos, retIndex;\n    for (var i = 0; i < unvisited.length; i++) {\n        if (!retPos || table[retPos][strategy] > table[unvisited[i]][strategy]) {\n            retPos = unvisited[i];\n            retIndex = i;\n\n            // 若相等則取得 估值小的（距離目標近的）\n        } else if (table[retPos][strategy] === table[unvisited[i]][strategy]) {\n            if (GetHeuristic(retPos, endPos) > GetHeuristic(unvisited[i], endPos)) {\n                retPos = unvisited[i];\n                retIndex = i;\n            }\n        }\n    }\n\n    unvisited.splice(retIndex, 1);\n    return retPos;\n}\n\n// 取得轉向分數\n// 考慮轉向分數是為了只搜尋一條線，如果沒有這個分數，則搜尋會變成三條線，因為１點的前下上 距離終點 的估值可能相同，所以會走三條路\nfunction GetScore(direction, index) {\n    var score = 0;\n    switch (direction) {\n        case \"up\":\n            switch (index) {\n                case 0:\n                    score = 1;\n                    break;\n                case 1:\n                    score = 2;\n                    break;\n                case 2:\n                    score = 3;\n                    break;\n                case 3:\n                    score = 2;\n                    break;\n                default:\n                    break;\n            }\n            break;\n        case \"right\":\n            switch (index) {\n                case 0:\n                    score = 2;\n                    break;\n                case 1:\n                    score = 1;\n                    break;\n                case 2:\n                    score = 2;\n                    break;\n                case 3:\n                    score = 3;\n                    break;\n                default:\n                    break;\n            }\n            break;\n        case \"down\":\n            switch (index) {\n                case 0:\n                    score = 3;\n                    break;\n                case 1:\n                    score = 2;\n                    break;\n                case 2:\n                    score = 1;\n                    break;\n                case 3:\n                    score = 2;\n                    break;\n                default:\n                    break;\n            }\n            break;\n        case \"left\":\n            switch (index) {\n                case 0:\n                    score = 2;\n                    break;\n                case 1:\n                    score = 3;\n                    break;\n                case 2:\n                    score = 2;\n                    break;\n                case 3:\n                    score = 1;\n                    break;\n                default:\n                    break;\n            }\n            break;\n        default:\n            break;\n    }\n    return score;\n}\n\nexport default Dijkstra_old;","import BFS from '../../Backend/Algorithms/BFS';\nimport DFS from '../../Backend/Algorithms/DFS';\nimport Dijkstra from '../../Backend/Algorithms/Dijkstra';\nimport Dijkstra_old from '../../Backend/Algorithms/Dijkstra_old';\n\nexport function UpdateTable(Start, ClearPath, algorithm, speed) {\n    ClearPath(false)\n    switch (algorithm.get) {\n        case \"Algorithm_Dijkstra\":\n            Dijkstra(\"Dijkstra\", Start, speed.get[1]);\n            break;\n        case 'Algorithm_AStar':\n            Dijkstra(\"Astar\", Start, speed.get[1]);\n            break;\n        case \"Algorithm_Greedy_Best_First\":\n            Dijkstra(\"GreedyBestFirstSearch\", Start, speed.get[1]);\n            break;\n        case \"Algorithm_Swarm\":\n            Dijkstra(\"Swarm\", Start, speed.get[1]);\n            break;\n        case \"Algorithm_Convergent_Swarm\":\n            Dijkstra(\"ConvergentSwarm\", Start, speed.get[1]);\n            break;\n        case \"Algorithm_Bidrectional_Swarm\":\n            Dijkstra(\"BidirectionSwarm\", Start, speed.get[1]);\n            break;\n        case \"Algorithm_Breadth_First\":\n            BFS(Start, speed.get[1]);\n            break;\n        case \"Algorithm_Depth_First\":\n            DFS(Start, speed.get[1]);\n            break;\n        case \"Algorithm_Dijkstra_old\":\n            Dijkstra_old(\"Dijkstra\", Start, speed.get[1]);\n            break;\n        default:\n            break;\n    }\n}","import { useContext } from 'react'\nimport { tableVar, touchContext, updateContext, componentKind, synchronize, originPos } from './TableIndex'\nimport { SearchAnimation, SearchBombAnimation, MazeAnimation, FinalAnimation, FinalMazeAnimation, stopStatus, resetAnimation, setAnimation, setMazeAnimation } from './Animation'\nimport { sysStatusContext, algorithmContext, bombContext, speedContext, animationStatusContext, position } from '../../Core'\nimport { setTable } from './SetTable'\nimport { UpdateTable } from './UpdateTable'\nimport { WhichComponentSame } from './WhichComp'\n\n\nfunction ButtonEvent() {\n    const [touch, update] = [useContext(touchContext), useContext(updateContext)]\n    const [algorithm, bomb, sysSpeed, sysStatus, animation] = [useContext(algorithmContext), useContext(bombContext), useContext(speedContext), useContext(sysStatusContext), useContext(animationStatusContext)]\n\n    const Start = (search = stopStatus.searchResult, path = stopStatus.pathResult, pathDirection = stopStatus.pathDirectionResult, speed = sysSpeed.get[1], bomb = stopStatus.bombResult) => {\n        if(stopStatus.animationStatus){\n            stopStatus.animationStatus = false\n            return\n        }\n\n        if (sysStatus.get === \"IDLE\" || (sysStatus.get === \"STOP\" && algorithm.get !== stopStatus.algorithm)){\n            setAnimation(search, path, pathDirection, bomb, algorithm.get)\n            // resetAnimation()  // 執行start之前都會call ClearPath()\n        }\n\n        if (update.get && synchronize.update) {\n            FinalAnimation(search, path, pathDirection, bomb)\n        } else {\n            // console.log(\"Start\")\n            sysStatus.set(\"RUNNING\")\n            stopStatus.animationStatus = true\n            SearchBombAnimation(search, bomb, path, pathDirection, speed, SearchAnimation, \n                () => sysStatus.set(\"STOP\"), \n                () => {\n                    update.set(\"True\")\n                    synchronize.update = true\n                    sysStatus.set(\"IDLE\")\n                }\n            )\n        }\n    }\n\n    const CreateMaze = (maze = stopStatus.mazeResult, speed = sysSpeed.get[1]) => {\n        if (sysStatus.get === \"IDLE\" || (sysStatus.get === \"STOP\" && animation.get === \"Algorithm\")){\n            setMazeAnimation(maze)\n            // resetAnimation()  // 執行start之前都會call ClearPath()\n        }\n\n        if (speed === 0) {\n            FinalMazeAnimation(maze)\n        } else {\n            sysStatus.set(\"RUNNING\")\n            animation.set(\"Maze\")\n            stopStatus.animationStatus = true\n            MazeAnimation(maze, speed, () => sysStatus.set(\"STOP\"), () => {sysStatus.set(\"IDLE\"); animation.set(\"Algorithm\")})\n        }\n    }\n\n    const CheckStopStatus = () => {\n        if (sysStatus.get === \"STOP\"){\n            if(animation.get === \"Maze\"){\n                ClearWalls(false)\n                animation.set(\"Algorithm\")\n            } else {\n                ClearPath()\n            }\n            sysStatus.set(\"IDLE\")\n        }\n    }\n\n    const Addbomb = () => {\n        // console.log(\"AddBomb\")\n        const index = Math.floor(tableVar.rowSize / 2) * tableVar.colSize + Math.floor(tableVar.colSize / 2)\n\n        if (WhichComponentSame(index) <= 2) {\n            return\n        }\n\n        bomb.set(\"True\")\n        setTable(index, componentKind.bomb, true)\n\n        CheckStopStatus()\n\n        if (update.get) {\n            UpdateTable(Start, ClearPath, algorithm, sysSpeed)\n        }\n    }\n\n    const RemoveBomb = (checkStopStatus = true) => {\n        // console.log(\"RemoveBomb\")\n        if(position.bomb !== false){\n            setTable(position.bomb, componentKind.background, true)\n        }  \n        bomb.set(\"False\")\n\n        if(checkStopStatus){\n            CheckStopStatus()\n        }\n\n        if (update.get) {\n            UpdateTable(Start, ClearPath, algorithm, sysSpeed)\n        }\n    }\n\n    const ClearWalls = (checkStopStatus = true) => {\n        // console.log(\"ClearWall\")\n        const wall = Object.keys(position.wall)\n        for (var i = 0; i < wall.length; i++) {\n            setTable(wall[i].split(\",\"), componentKind.background, true)\n        }\n        ClearWeights(false)\n        ClearPath()\n        \n        touch.set(\"\")\n\n        if (checkStopStatus === true){\n            CheckStopStatus()\n        }\n    }\n\n    const ClearWeights = (checkStopStatus = true) => {\n        // console.log(\"ClearWeights\")\n        const weight = Object.keys(position.weight)\n\n        for (var i = 0; i < weight.length; i++) {\n            setTable(weight[i].split(\",\"), componentKind.background, true)\n        }\n        if(touch.get.start !== componentKind.wall){\n            touch.set({componentKind: componentKind.start, under: componentKind.background})\n        }\n        if(touch.get.end !== componentKind.wall){\n            touch.set({componentKind: componentKind.end, under: componentKind.background})\n        }\n        if(touch.get.bomb !== componentKind.wall){\n            touch.set({componentKind: componentKind.bomb, under: componentKind.background})\n        }\n\n        if(checkStopStatus){\n            CheckStopStatus()\n        }\n    }\n\n    const ClearPath = (event = true) => {\n        // console.log(\"ClearPath\")\n\n        if (event) {\n            update.set(\"False\")\n            synchronize.update = false\n        }\n\n        for (var i = 0; i < tableVar.rowSize * tableVar.colSize; i++) {\n            if (WhichComponentSame(i) >= 5) {\n                setTable(i, componentKind.background)\n            } else if (WhichComponentSame(i) === 3) {\n                setTable(i, componentKind.weightStatic)\n            } else if (WhichComponentSame(i) === 2) {\n                setTable(i, componentKind.bomb)\n            } else if (WhichComponentSame(i) === 1) {\n                setTable(i, componentKind.end)\n            } else if (WhichComponentSame(i) === 0) {\n                setTable(i, componentKind.start)\n            }\n        }\n\n        if(animation.get === \"Algorithm\"){\n            resetAnimation()\n        }\n    }\n\n    const ClearBoard = () => {\n        // console.log(\"ClearBoard\")\n        update.set(\"False\")\n        for (var i = 0; i < tableVar.rowSize * tableVar.colSize; i++) {\n            setTable(i, componentKind.background, true)\n        }\n        setTable(originPos.origin_start[0] * tableVar.colSize + originPos.origin_start[1], componentKind.start, true)\n        setTable(originPos.origin_end[0] * tableVar.colSize + originPos.origin_end[1], componentKind.end, true)\n        touch.set(\"\")\n        bomb.set(\"False\")\n        CheckStopStatus()\n    }\n\n    return { Start, Addbomb, RemoveBomb, ClearWalls, ClearPath, ClearBoard, CreateMaze, ClearWeights }\n}\n\nexport default ButtonEvent\n\n\n\n","import React, { useContext } from 'react';\r\nimport { NavDropdown, Nav } from 'react-bootstrap';\r\nimport { algorithmContext, sysStatusContext } from '../../../Core';\r\nimport Colored from '../../../HOC/Colored';\r\nimport ButtonEvent from '../../TableHelper/ButtonEvent';\r\n\r\nfunction DropdownAlgorithm() {\r\n    const algoContext = useContext(algorithmContext);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const [className, toggleHandler] = Colored();\r\n    const buttonEvent = ButtonEvent()\r\n\r\n    const DropdownAlgorithmHandler = (eventKey) => {\r\n\r\n        if (sysStatus.get !== \"IDLE\" && sysStatus.get !== \"STOP\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Algorithm_Dijkstra\":\r\n                algoContext.set('Algorithm_Dijkstra');\r\n                break;\r\n            case \"Algorithm_AStar\":\r\n                algoContext.set('Algorithm_AStar');\r\n                break;\r\n            case \"Algorithm_Greedy_Best_First\":\r\n                algoContext.set('Algorithm_Greedy_Best_First');\r\n                break;\r\n            case \"Algorithm_Swarm\":\r\n                algoContext.set('Algorithm_Swarm');\r\n                break;\r\n            case \"Algorithm_Convergent_Swarm\":\r\n                algoContext.set('Algorithm_Convergent_Swarm');\r\n                break;\r\n            case \"Algorithm_Bidrectional_Swarm\":\r\n                buttonEvent.RemoveBomb(false); // 按下去後要清空bomb // false只是換演算法，不ClearPath\r\n                algoContext.set('Algorithm_Bidrectional_Swarm');\r\n                break;\r\n            case \"Algorithm_Breadth_First\":\r\n                buttonEvent.ClearWeights(false); // 按下去後要清空weight // false只是換演算法，不ClearPath\r\n                algoContext.set('Algorithm_Breadth_First');\r\n                break;\r\n            case \"Algorithm_Depth_First\":\r\n                buttonEvent.ClearWeights(false); // 按下去後要清空weight // false只是換演算法，不ClearPath\r\n                algoContext.set('Algorithm_Depth_First');\r\n                break;\r\n            case \"Algorithm_Dijkstra_old\":\r\n                algoContext.set('Algorithm_Dijkstra_old');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item>\r\n            <NavDropdown xs={1} title={<span className={className}>Algorithms</span>} id=\"DropdownAlgorithm\" onSelect={(eventKey) => DropdownAlgorithmHandler(eventKey)}\r\n                onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}\r\n            >\r\n                <NavDropdown.Item eventKey=\"Algorithm_Dijkstra\">Dijkstra's Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_AStar\">A* Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Greedy_Best_First\">Greedy Best-First Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Swarm\">Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Convergent_Swarm\">Convergent Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Bidrectional_Swarm\">Bidirectional Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Breadth_First\">Breadth-First Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Depth_First\">Depth-First Search</NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item eventKey=\"Algorithm_Dijkstra_old\">(Old) Dijkstra's Algorithm</NavDropdown.Item>\r\n            </NavDropdown>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default DropdownAlgorithm;","import { position } from '../../Core';\n\nfunction Simple_Stair_Pattern() {\n    var walls = [];\n    var weights = [];\n    var towardUp = true;\n    var x = position.rowSize;\n\n    for (var y = 0; y < position.colSize; y++) {\n        if (towardUp) {\n            x--;\n            if (x < 0) {\n                towardUp = false;\n                x = 1;\n            }\n        } else {\n            x++;\n            if (x >= position.rowSize) {\n                towardUp = true;\n                x = position.rowSize - 2;\n            }\n        }\n        walls.push([x, y]);\n    }\n    return [walls, weights];\n}\n\nexport default Simple_Stair_Pattern;","import { position } from '../../Core';\n\n// 取得四周圍\nexport const CreateAround = (wallSet = new Set()) => {\n    var walls = [];\n    var x = 0;\n    var y = 0;\n\n    // 取得外圍\n    var tmp = position.colSize - 1;\n    for (y = 0; y <= tmp; y++) {\n        walls.push([0, y]);\n        walls.push([0, tmp]);\n        wallSet.add([0, y].toString());\n        wallSet.add([0, tmp].toString());\n        tmp--;\n    }\n\n    for (x = 0; x < position.rowSize; x++) {\n        walls.push([x, 0]);\n        walls.push([x, position.colSize - 1]);\n        wallSet.add([x, 0].toString());\n        wallSet.add([x, position.colSize - 1].toString());\n\n    }\n\n    tmp = position.colSize - 1;\n    for (y = 0; y <= tmp; y++) {\n        walls.push([position.rowSize - 1, y]);\n        walls.push([position.rowSize - 1, tmp]);\n        wallSet.add([position.rowSize - 1, y].toString());\n        wallSet.add([position.rowSize - 1, tmp].toString());\n        tmp--;\n    }\n    return walls;\n}\n\nexport const IndexOf = (array, target) => {\n    for (let i = 0; i < array.length; i++) {\n        if (target.toString() === array[i].toString()) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nexport const Random = (n) => {\n    return Math.floor(Math.random() * n);\n}\n\nexport const RandomEven = (n) => {\n    return Math.floor(Math.random() * n / 2) * 2;\n}","import { position } from '../../Core';\nimport { CreateAround } from './Core';\n\nfunction Binary_Tree() {\n    var wallSet = new Set();\n    var walls = CreateAround(wallSet);\n    var weights = [];\n    var x = 0;\n    var y = 0;\n\n    // Binary Tree to get random maze\n    // http://weblog.jamisbuck.org/2011/2/1/maze-generation-binary-tree-algorithm\n    for (x = 2; x <= position.rowSize - 2; x += 2) {\n        for (y = 2; y <= position.colSize - 2; y += 2) {\n            if (wallSet.has([x - 2, y].toString()) && wallSet.has([x, y - 2].toString())) {\n                var randomFace = Math.floor(Math.random() * 2) + 1;// 1=上，2=左\n                switch (randomFace) {\n                    case 1:\n                        walls.push([x - 1, y]);\n                        wallSet.add([x - 1, y].toString());\n                        break;\n                    case 2:\n                        walls.push([x, y - 1]);\n                        wallSet.add([x, y - 1].toString());\n                        break;\n                    default:\n                        break;\n                }\n            } else if (wallSet.has([x - 2, y].toString())) {\n                walls.push([x - 1, y]);\n                wallSet.add([x - 1, y].toString());\n            } else if (wallSet.has([x, y - 2].toString())) {\n                walls.push([x, y - 2]);\n                wallSet.add([x, y - 1].toString());\n            } else {\n                console.log('Some Error in Binary_Tree_Maze()');\n            }\n            walls.push([x, y]);\n            wallSet.add([x, y].toString());\n        }\n    }\n\n    return [walls, weights];\n}\n\nexport default Binary_Tree;","import { position } from '../../Core';\nimport { CreateAround, Random, RandomEven, IndexOf } from './Core';\n\nconst direction = {\n    horizontal: 0,\n    vertical: 1\n}\n\nfunction RecursiveDivision(whichAlgo) {\n    var wallSet = new Set();\n    var walls = CreateAround(wallSet);\n    var weights = [];\n\n    // true代表水平，false代表垂直\n    // 改用最後一個參數選定要跑哪個方向\n    switch (whichAlgo) {\n        case \"RecursiveDivision\":\n            DoRecursiveDivision(0, 0, position.colSize, position.rowSize, wallSet, walls);\n            break;\n        case \"RecursiveDivision_Vertical\":\n            DoRecursiveDivision(0, 0, position.colSize, position.rowSize, wallSet, walls, true);\n            break;\n        case \"RecursiveDivision_Horizontal\":\n            DoRecursiveDivision(0, 0, position.colSize, position.rowSize, wallSet, walls, false);\n            break;\n        default:\n            break;\n    }\n\n    // 建立牆壁時，因為不會考慮特殊node，所以還是有機會在node周圍建立起牆壁，而形成死路 https://i.imgur.com/r6gYt39.png\n    // 因此跑完之後，去看特殊node是否四周圍死路\n    // 若為死路，則周圍隨機去除一個合法的wall即可\n    var specialNodes = [position.start, position.bomb, position.end];\n    for (let i = 0; i < specialNodes.length; i++) {\n        let curPos = specialNodes[i];\n\n        if (!curPos) continue; // 如果特殊node不存在，就不判斷\n\n        let up = curPos[0] - 1 >= 0 ? [curPos[0] - 1, curPos[1]] : null;\n        let right = curPos[1] + 1 < position.colSize ? [curPos[0], curPos[1] + 1] : null;\n        let down = curPos[0] + 1 < position.rowSize ? [curPos[0] + 1, curPos[1]] : null;\n        let left = curPos[1] - 1 >= 0 ? [curPos[0], curPos[1] - 1] : null;\n\n        let validWall = [];\n        let blockDirection = 0;\n        // eslint-disable-next-line\n        [up, right, down, left].forEach(nextPos => {\n            if (nextPos === null) {\n                blockDirection++;\n            } else if (wallSet.has(nextPos.toString())) {\n                validWall.push(nextPos);\n                blockDirection++;\n            }\n        })\n        if (blockDirection === 4) {\n            let removedWallIndex = Random(validWall.length);\n            walls.splice(IndexOf(walls, validWall[removedWallIndex]), 1);\n        }\n    }\n\n    return [walls, weights];\n}\n\n// 與正常版的差別在於，選擇切水平或是垂直的條件不同\n// 水平偏移（horizontal skew）：表示優先跑左邊，所以第一個遞迴規定跑水平，第二個規定跑垂直\nfunction DoRecursiveDivision(x, y, width, height, wallSet, walls, boolDirection = null) {\n    // 而且為了保證道路暢通，兩個牆壁+一個空白才會形成一個道路\n    // 因此長跟寬必須至少大於3\n    if (width < 4 || height < 4) {\n        return;\n    }\n\n    // 選擇切割方向：挑選短的那邊，一樣就random\n    var curDirection = null;\n    if (boolDirection === null) {\n        if (width < height) curDirection = direction.horizontal;\n        else if (width > height) curDirection = direction.vertical;\n        else curDirection = Random(2);\n    } else {\n        if (boolDirection) {\n            curDirection = direction.vertical;\n        }\n        else {\n            curDirection = direction.horizontal;\n        }\n    }\n\n\n    var door;\n    if (curDirection === direction.horizontal) {\n        // 假設現在height=11，表示x=x0跟x=10的那整條都是牆壁\n        // 則 x建立牆壁的範圍為 2~8 (牆壁跟牆壁中間要留一條路)\n\n        // 因此x要x0+2，而剩下的random範圍為0~6且只能為偶數\n        var randomX = x + 2 + RandomEven(height - 4);\n\n        // 假設width = 9，表示y=y0跟y=8的那整條都是牆壁\n        // 開路的範圍為 y0+ 1~7（但開路必為奇數），而剩下的random範圍為0~6且只能為偶數\n        door = y + 1 + RandomEven(width - 3);\n\n        // 建立牆壁，範圍從 y0~y0+width\n        for (var _y = y; _y < y + width; _y++) {\n            if (_y !== door) {\n                walls.push([randomX, _y]);\n                wallSet.add([randomX, _y].toString());\n            }\n        }\n\n        // 跑 x,y,width 且 height變成了剛剛選的高-x0（跑上面）\n        DoRecursiveDivision(x, y, width, randomX - x, wallSet, walls, boolDirection); // 第一個規定跑指定方向\n\n        // 跑 新x, y, width 且 height變成了 目前總高 - 剛剛選的高度(跑下面)\n        DoRecursiveDivision(randomX, y, width, height - (randomX - x), wallSet, walls, !boolDirection); // 第二個規定跑(!指定方向)\n    } else {\n        // 垂直雷同\n        var randomY = y + 2 + RandomEven(width - 4);\n        door = x + 1 + RandomEven(height - 3);\n\n        for (var _x = x; _x < x + height; _x++) {\n            if (_x !== door) {\n                walls.push([_x, randomY]);\n                wallSet.add([_x, randomY].toString());\n            }\n        }\n\n        DoRecursiveDivision(x, y, randomY - y, height, wallSet, walls, boolDirection); // 第一個規定跑指定方向\n        DoRecursiveDivision(x, randomY, width - (randomY - y), height, wallSet, walls, !boolDirection); // 第二個規定跑(!指定方向)\n    }\n}\n\nexport default RecursiveDivision;","import { position } from '../../Core';\nimport { Random, RandomEven } from './Core';\n\n// Kruskal 雖然是要找最小權重，但是maze的權重都是相同的\n// 因此此演算法就變成，隨機找一個，跟周圍相連，且不要形成cycle\n// 這種特性就可以用來建立隨機迷宮的牆壁\n// 但不會保證活路\nfunction Kruskal() {\n    var wallSet = new Set();\n    var walls = [];\n    var weights = [];\n\n    // 建立parent與rank陣列 來判斷是否有cycle及union\n    var parent = {};\n    var rank = {};\n    for (let i = 0; i < position.rowSize; i++) {\n        for (let j = 0; j < position.colSize; j++) {\n            parent[[i, j]] = [i, j];// 每個人的root一開始都是自己\n            rank[[i, j]] = 0;// 每個人的rank一開始都是0\n        }\n    }\n\n    // 長度為三，因為只能在偶數位置建立牆壁，所以長度三才能與其他牆壁相連\n    // 用佔比率來終止迴圈，0.51是經驗法則\n    while (wallSet.size / (position.rowSize * position.colSize) < 0.51) {\n\n        // 取 產生偶數位置起點\n        let x = [RandomEven(position.rowSize), RandomEven(position.colSize)];\n        let x1 = null;\n        let x2 = null;\n        let xHead = null;\n        let yHead = null;\n        let face = Random(4);\n        switch (face) {\n            case 0: // 走上\n                if (x[0] - 2 < 0) continue;\n                x1 = [x[0] - 1, x[1]];\n                x2 = [x[0] - 2, x[1]];\n                xHead = FindRoot(parent, x);\n                yHead = FindRoot(parent, x2);\n                break;\n            case 1: // 走右\n                if (x[1] + 2 >= position.colSize) continue;\n                x1 = [x[0], x[1] + 1];\n                x2 = [x[0], x[1] + 2];\n                xHead = FindRoot(parent, x);\n                yHead = FindRoot(parent, x2);\n                break;\n            case 2:\n                if (x[0] + 2 >= position.rowSize) continue;\n                x1 = [x[0] + 1, x[1]];\n                x2 = [x[0] + 2, x[1]];\n                xHead = FindRoot(parent, x);\n                yHead = FindRoot(parent, x2);\n                break;\n            case 3:\n                if (x[1] - 2 < 0) continue;\n                x1 = [x[0], x[1] - 1];\n                x2 = [x[0], x[1] - 2];\n                xHead = FindRoot(parent, x);\n                yHead = FindRoot(parent, x2);\n                break;\n            default:\n                return [];\n        }\n\n\n        if (xHead !== yHead) {\n            walls.push(x);\n            walls.push(x1);\n            walls.push(x2);\n            wallSet.add(x.toString());\n            wallSet.add(x1.toString());\n            wallSet.add(x2.toString());\n            Union(parent, rank, x, x2);\n        }\n    }\n\n    return [walls, weights];\n}\n\n/* Disjoint Set */\n// parentArray => index的爸爸在parentArray[index] = parentIndex\n// index => 目前是誰\nfunction FindRoot(parentArray, index) {\n    if (parentArray[index] !== index) {\n        // 記得邊找邊更新\n        parentArray[index] = FindRoot(parentArray, parentArray[index]);\n    }\n    return parentArray[index];\n}\n\n\n// parentArray => index的爸爸在parentArray[index] = parentIndex\n// rankArray => 每個點的階層是多少，數字大表示越接近root\n// index1, index3 => 哪兩個點要union\nfunction Union(parentArray, rankArray, index1, index3) {\n    // 要用頭去union\n    index1 = FindRoot(parentArray, index1);\n    index3 = FindRoot(parentArray, index3);\n\n    if (index1 === index3) {\n        return;\n    }\n\n    // 如果rank3 > rank1 => index1的爸爸是index3\n    if (rankArray[index1] < rankArray[index3]) {\n        parentArray[index1] = index3;\n\n        // 如果rank3 < rank1 => index3的爸爸是index1\n    } else if (rankArray[index1] > rankArray[index3]) {\n        parentArray[index3] = index1;\n\n        // 如果rank3 === rank1 => 選一個來組合，並讓爸爸的RANK+1\n    } else {\n        parentArray[index3] = index1;\n        rankArray[index1] += 1;\n    }\n}\n\n\nexport default Kruskal;","import { position } from '../../Core';\n\nconst probability = 0.2\n\nfunction Basic_Random_Maze(){\n    const wall = []\n    const weights = []\n\n    const [height, width] = [position.rowSize, position.colSize]\n    for(var i = 0; i < height; i++){\n        for(var j = 0; j < width; j++){\n            if(Math.random() < probability){\n                if(i === position.start[0] && j === position.start[1]){\n                    continue\n                }else if(i === position.end[0] && j === position.end[1]){\n                    continue\n                }else if(position.bomb !== false && i === position.bomb[0] && j === position.bomb[1]){\n                    continue\n                }else{\n                    wall.push([i, j])\n                }\n            }\n        }\n    }\n\n    return [wall, weights]\n}\n\nexport default Basic_Random_Maze","import { position } from '../../Core';\n\nconst probability = 0.35\n\nfunction Basic_Weight_Maze(){\n    const wall = []\n    const weight = []\n\n    const [height, width] = [position.rowSize, position.colSize]\n    for(var i = 0; i < height; i++){\n        for(var j = 0; j < width; j++){\n            if(Math.random() < probability){\n                if(i === position.start[0] && j === position.start[1]){\n                    continue\n                }else if(i === position.end[0] && j === position.end[1]){\n                    continue\n                }else if(position.bomb !== false && i === position.bomb[0] && j === position.bomb[1]){\n                    continue\n                }else{\n                    weight.push([i, j])\n                }\n            }\n        }\n    }\n\n    return [wall, weight]\n}\n\nexport default Basic_Weight_Maze","import { position } from '../../Core';\nimport { Random, RandomEven } from './Core';\n\n// 從一點出發找四周圍最小的權重\n// 但隨機迷宮可以改成\n// 從一點出發，往四周圍前進，並只去隨機找有走過的點\nfunction Prim() {\n    var walls = [];\n    var weights = [];\n\n\n    // Random Pick a position\n    // 取偶數，因為牆壁長度為３，棋盤長寬為奇數，所以取偶數才能伸展到四邊\n    var startNode = [2 + RandomEven(position.rowSize - 4), 2 + RandomEven(position.colSize - 4)];\n    var visited = new Set();\n    var queue = [startNode];\n\n    while (queue.length > 0) {\n        var randomIndex = RandomEven(queue.length); // random pick a node\n        var node = queue[randomIndex];\n\n        var availableDirection = [];\n\n        if (node[0] - 2 >= 0 && !visited.has([node[0] - 2, node[1]].toString())) {\n            availableDirection.push([[node[0] - 2, node[1]], [node[0] - 1, node[1]]]);\n        }\n        if (node[1] + 2 < position.colSize && !visited.has([node[0], node[1] + 2].toString())) {\n            availableDirection.push([[node[0], node[1] + 2], [node[0], node[1] + 1]]);\n        }\n        if (node[0] + 2 < position.rowSize && !visited.has([node[0] + 2, node[1]].toString())) {\n            availableDirection.push([[node[0] + 2, node[1]], [node[0] + 1, node[1]]]);\n        }\n        if (node[1] - 2 >= 0 && !visited.has([node[0], node[1] - 2].toString())) {\n            availableDirection.push([[node[0], node[1] - 2], [node[0], node[1] - 1]]);\n        }\n\n        // 若四個方位都沒有可能，再把考慮點去掉\n        if (availableDirection.length === 0) {\n            queue.splice(randomIndex, 1);\n            continue;\n        }\n\n        // 隨機挑一個方位\n        randomIndex = Random(availableDirection.length);\n        node = availableDirection[randomIndex];\n\n        // 加入此方位的牆壁\n        walls.push(node[1]);\n        walls.push(node[0]);\n\n        // 加入已走過的點\n        visited.add(node[0].toString());\n\n        // 加入考慮點\n        queue.push(node[0]);\n    }\n    return [walls, weights];\n}\n\nexport default Prim;","import { position } from '../../Core';\nimport { CreateAround, Random } from './Core';\n\nfunction Eller() {\n    var weights = [];\n    var walls = CreateAround();\n    /*\n    道路從第二層開始，牆壁從第一層開始\n    因為預設第一層的道路都是暢通的（周圍圍起來，要留出一格道路），故道路要+1\n    之後的每層每次抓取右邊兩格（一個道路一個牆壁）\n    若牆壁建立，則看「已經建立過道路了沒」（保證每個set都至少有一個建立道路（Eller））\n        若已經建立了，則看道路是否要建立\n            要建立=沒事\n            不建立=道路下方建立一個牆壁\n        若沒有建立，則這個要建立道路（也就是不要在道路下方建立一格牆壁）\n            = 沒事\n        「已經建立過道路了沒」 = false （重新計算）\n    若牆壁不建立，則\n        看道路是否要建立\n            要建立=「已經建立過道路了沒=True」\n            不建立=道路下方建立一個牆壁\n    \n    edge長度為2\n    */\n    // 要保證最下方跟最右方是暢通的，因為周圍有框起來\n    for (let i = 1; i < position.rowSize - 3; i += 2) {\n        var haveBuildedPath = false;\n        for (let j = 1; j < position.colSize - 3; j += 2) {\n            var buildWall = 1 === Random(2) ? true : false;\n            var buildPath = 1 === Random(2) ? true : false;\n\n            // 牆壁，看是否要建立牆壁\n            if (buildWall) {\n                walls.push([i, j + 1]);\n                walls.push([i + 1, j + 1]);\n\n                if (haveBuildedPath) {\n                    if (!buildPath) {\n                        walls.push([i + 1, j]);\n                        walls.push([i + 1, j + 1]);\n                    }\n                }\n                haveBuildedPath = false;\n            } else {\n                // 為了保持迷宮的感覺，牆壁不能太少\n                // 因此改成每個set只能有一個開口，且開口大小為1\n                if (buildPath && !haveBuildedPath) {\n                    haveBuildedPath = true;\n                    walls.push([i + 1, j + 1]); // 開口大小為1，所以開口的右方也要是牆壁\n                } else {\n                    walls.push([i + 1, j]);\n                    walls.push([i + 1, j + 1]);\n                }\n            }\n        }\n    }\n\n    return [walls, weights];\n}\n\n\nexport default Eller;","import React, { useContext } from 'react'\r\nimport { NavDropdown, Nav } from 'react-bootstrap';\r\nimport { sysStatusContext, speedContext } from '../../../Core';\r\nimport Colored from '../../../HOC/Colored';\r\nimport ButtonEvent from '../../TableHelper/ButtonEvent';\r\nimport Simple_Stair_Pattern from '../../../Backend/Maze/Simple_Stair_Pattern';\r\nimport Binary_Tree from '../../../Backend/Maze/Binary_Tree';\r\nimport RecursiveDivision from '../../../Backend/Maze/RecursiveDivision';\r\nimport Kruskal from '../../../Backend/Maze/Kruskal';\r\nimport Basic_Random_Maze from '../../../Backend/Maze/Basic_Random_Maze';\r\nimport Basic_Weight_Maze from '../../../Backend/Maze/Basic_Weight_Maze';\r\nimport Prim from '../../../Backend/Maze/Prim';\r\nimport Eller from '../../../Backend/Maze/Eller';\r\n\r\nfunction DropdownMaze() {\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const speedStatus = useContext(speedContext);\r\n    const [className, toggleHandler] = Colored();\r\n    const buttonEvent = ButtonEvent();\r\n    const speed = speedStatus.get[1];\r\n\r\n    const DropdownMazeHandler = (eventKey) => {\r\n        if (sysStatus.get !== \"IDLE\" && sysStatus.get !== \"STOP\") {\r\n            return;\r\n        }\r\n        buttonEvent.ClearPath()\r\n        buttonEvent.ClearWalls()\r\n        switch (eventKey) {\r\n            case \"Maze_Recursive_Division\":\r\n                buttonEvent.CreateMaze(RecursiveDivision(\"RecursiveDivision\"), speed);\r\n                break;\r\n            case \"Maze_Recursive_Division_vertical\":\r\n                buttonEvent.CreateMaze(RecursiveDivision(\"RecursiveDivision_Vertical\"), speed);\r\n                break;\r\n            case \"Maze_Recursive_Division_horizontal\":\r\n                buttonEvent.CreateMaze(RecursiveDivision(\"RecursiveDivision_Horizontal\"), speed);\r\n                break;\r\n            case \"Maze_Basic_Random\":\r\n                buttonEvent.CreateMaze(Basic_Random_Maze(), 0)\r\n                break;\r\n            case \"Maze_Basic_Weight_Maze\":\r\n                buttonEvent.CreateMaze(Basic_Weight_Maze(), 0)\r\n                break;\r\n            case \"Maze_Simple_stair_pattern\":\r\n                buttonEvent.CreateMaze(Simple_Stair_Pattern(), speed);\r\n                break;\r\n            case \"Maze_Binary_Tree\":\r\n                buttonEvent.CreateMaze(Binary_Tree(), speed);\r\n                break;\r\n            case \"Maze_Kruskal\":\r\n                buttonEvent.CreateMaze(Kruskal(), speed);\r\n                break;\r\n            case \"Maze_Prim\":\r\n                buttonEvent.CreateMaze(Prim(), speed);\r\n                break;\r\n            case \"Maze_Eller\":\r\n                buttonEvent.CreateMaze(Eller(), speed);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item>\r\n            <NavDropdown xs={1} title={<span className={className}>Mazes & Patterns</span>} id=\"DropdownMaze\" onSelect={DropdownMazeHandler}\r\n                onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}\r\n            >\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division\">Recursive Division</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division_vertical\">Recursive Division(vertical skew)</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division_horizontal\">Recursive Division(horizontal skew)</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Basic_Random\">Basic Random Maze</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Basic_Weight_Maze\">Basic Weight Maze</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Simple_stair_pattern\">Simple Stair Pattern</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Binary_Tree\">Binary Tree Generator</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Kruskal\">Kruskal's Maze</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Prim\">Prim's Maze</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Eller\">Eller's Maze</NavDropdown.Item>\r\n            </NavDropdown>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default DropdownMaze;","import React, { useState, useContext } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { sysStatusContext } from '../../../Core';\r\nimport Colored from '../../../HOC/Colored';\r\n\r\nfunction NavLink({ names, handlers }) {\r\n    const [whichHandler, setWhichHandler] = useState(0);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const [className, toggleHandler] = Colored();\r\n\r\n    const localHandler = () => {\r\n        if (sysStatus.get !== \"IDLE\" && sysStatus.get !== \"STOP\") {\r\n            return;\r\n        }\r\n\r\n        setWhichHandler(preWhichHandler => (preWhichHandler + 1) % handlers.length);\r\n        handlers[whichHandler]();\r\n    }\r\n\r\n    return (\r\n        <Nav.Item xs={1}>\r\n            <Nav.Link onClick={localHandler} className={className} onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}>{names[whichHandler]}</Nav.Link>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default NavLink\r\n","import { useState, useContext } from 'react';\nimport { sysStatusContext, algorithmContext } from '../Core';\nimport '../App.scss';\n\nconst Colored = () => {\n    const sysStatus = useContext(sysStatusContext);\n    const algoStatus = useContext(algorithmContext);\n    const [isHover, setIsHover] = useState(false);\n    const [className, setClassName] = useState(\"nav-link-default\");\n\n    const toggleHandler = () => {\n        if (isHover) {\n            setClassName(\"nav-link-default\");\n            setIsHover(false);\n        } else {\n            if ((sysStatus.get !== \"IDLE\" && sysStatus.get !== \"STOP\") || algoStatus.get === \"\" || algoStatus.get === \"Algorithm_Bidrectional_Swarm\") {\n                setClassName(\"nav-link-red\");\n            } else {\n                setClassName(\"nav-link-green\");\n            }\n            setIsHover(true);\n        }\n    }\n\n    return [className, toggleHandler];\n}\n\nexport default Colored\n","import React, { useState, useContext, useEffect } from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport { bombContext, sysStatusContext, algorithmContext } from '../../../Core';\nimport Colored from '../../../HOC/Colored_AddButton';\nimport { IsMount } from '../../../Core/IsMount.js'\n\nfunction NavAddBomb({ names, handlers }) {\n    const [whichHandler, setWhichHandler] = useState(0);\n    const bomb = useContext(bombContext);\n    const sysStatus = useContext(sysStatusContext);\n    const algoContext = useContext(algorithmContext);\n    const [className, toggleHandler] = Colored();\n    const isMount = IsMount();\n\n    useEffect(() => {\n        if (isMount) return; // 防止第一次render也會跑進來執行\n\n        if (bomb.get === true) {\n            setWhichHandler(1);\n        } else {\n            setWhichHandler(0);\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [bomb])\n\n    useEffect(() => {\n        if (isMount) return;\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [whichHandler])\n\n    const localHandler = () => {\n        if (isMount) return;\n\n        if ((sysStatus.get !== \"IDLE\" && sysStatus.get !== \"STOP\") || algoContext.get === \"\" || algoContext.get === \"Algorithm_Bidrectional_Swarm\") {\n            return;\n        }\n\n        handlers[whichHandler]();\n    }\n\n\n    return (\n        <Nav.Item xs={1}>\n            <Nav.Link onClick={localHandler} className={className} onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}>{names[whichHandler]}</Nav.Link>\n        </Nav.Item>\n    )\n}\n\nexport default NavAddBomb\n","import { useRef, useEffect } from 'react';\n\nexport const IsMount = () => {\n    const isMount = useRef(true);\n\n    useEffect(() => {\n        isMount.current = false;\n    }, [])\n\n    return isMount.current;\n}\n\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { algorithmContext, sysStatusContext, speedContext, animationStatusContext } from '../../../Core';\r\nimport ButtonEvent from '../../TableHelper/ButtonEvent';\r\nimport { stopStatus } from '../../TableHelper/Animation'\r\nimport BFS from '../../../Backend/Algorithms/BFS';\r\nimport DFS from '../../../Backend/Algorithms/DFS';\r\nimport Dijkstra from '../../../Backend/Algorithms/Dijkstra';\r\nimport Dijkstra_old from '../../../Backend/Algorithms/Dijkstra_old';\r\n\r\nconst NavButton = () => {\r\n\r\n    const [buttonName, setButtonName] = useState(\"Visualize !\");\r\n    const [myVariant, setMyVariant] = useState(\"\");\r\n    const algoContext = useContext(algorithmContext);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const speed = useContext(speedContext);\r\n    const animation = useContext(animationStatusContext)\r\n    const buttonEvent = ButtonEvent();\r\n\r\n    useEffect(() => {\r\n        setMyVariant('buttonEnable');\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        var algoName = \"\";\r\n        switch (algoContext.get) {\r\n            case \"Algorithm_Dijkstra\":\r\n                algoName = \"Dijkstra's\";\r\n                break;\r\n            case 'Algorithm_AStar':\r\n                algoName = \"A*\";\r\n                break;\r\n            case \"Algorithm_Greedy_Best_First\":\r\n                algoName = \"Greedy\";\r\n                break;\r\n            case \"Algorithm_Swarm\":\r\n                algoName = \"Swarm\";\r\n                break;\r\n            case \"Algorithm_Convergent_Swarm\":\r\n                algoName = \"Convergent Swarm\";\r\n                break;\r\n            case \"Algorithm_Bidrectional_Swarm\":\r\n                algoName = \"Bidrectional Swarm\";\r\n                break;\r\n            case \"Algorithm_Breadth_First\":\r\n                algoName = \"BFS\";\r\n                break;\r\n            case \"Algorithm_Depth_First\":\r\n                algoName = \"DFS\";\r\n                break;\r\n            case \"Algorithm_Dijkstra_old\":\r\n                algoName = \"Dijkstra's\";\r\n                break;\r\n            default:\r\n                algoName = \"\";\r\n                break;\r\n        }\r\n        setButtonName(`Visualize ${algoName}!`);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [algoContext.get])\r\n\r\n    useEffect(() => {\r\n        if (sysStatus.get === 'RUNNING') {\r\n            setMyVariant('buttonDisable');\r\n        } else {\r\n            setMyVariant('buttonEnable');\r\n        }\r\n    }, [sysStatus.get])\r\n\r\n\r\n    const handler = () => {\r\n        if (sysStatus.get === \"RUNNING\") {\r\n            buttonEvent.Start()\r\n            return\r\n\r\n        } else if (sysStatus.get === \"STOP\") {\r\n            if (animation.get === \"Maze\") {\r\n                buttonEvent.CreateMaze()\r\n                return\r\n\r\n            } else if (algoContext.get === stopStatus.algorithm) {\r\n                buttonEvent.Start()\r\n                return\r\n\r\n            }\r\n        }\r\n\r\n        if (algoContext.get === \"\") {\r\n            setButtonName(\"Pick an Algorithm\");\r\n        } else {\r\n            buttonEvent.ClearPath();\r\n            switch (algoContext.get) {\r\n                case \"Algorithm_Dijkstra\":\r\n                    Dijkstra(\"Dijkstra\", buttonEvent.Start, speed.get[1]);\r\n                    break;\r\n                case 'Algorithm_AStar':\r\n                    Dijkstra(\"Astar\", buttonEvent.Start, speed.get[1]);\r\n                    break;\r\n                case \"Algorithm_Greedy_Best_First\":\r\n                    Dijkstra(\"GreedyBestFirstSearch\", buttonEvent.Start, speed.get[1]);\r\n                    break;\r\n                case \"Algorithm_Swarm\":\r\n                    Dijkstra(\"Swarm\", buttonEvent.Start, speed.get[1]);\r\n                    break;\r\n                case \"Algorithm_Convergent_Swarm\":\r\n                    Dijkstra(\"ConvergentSwarm\", buttonEvent.Start, speed.get[1]);\r\n                    break;\r\n                case \"Algorithm_Bidrectional_Swarm\":\r\n                    Dijkstra(\"BidirectionSwarm\", buttonEvent.Start, speed.get[1]);\r\n                    break;\r\n                case \"Algorithm_Breadth_First\":\r\n                    BFS(buttonEvent.Start, speed.get[1]);\r\n                    break;\r\n                case \"Algorithm_Depth_First\":\r\n                    DFS(buttonEvent.Start, speed.get[1]);\r\n                    break;\r\n                case \"Algorithm_Dijkstra_old\":\r\n                    Dijkstra_old(\"Dijkstra\", buttonEvent.Start, speed.get[1]);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item>\r\n            <button className={myVariant} onClick={handler}>{buttonName}</button>\r\n        </Nav.Item>\r\n    )\r\n};\r\n\r\nexport default NavButton\r\n","import React, { useState, useContext } from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport { sysStatusContext } from '../../../Core';\nimport Colored from '../../../HOC/Colored';\n\nfunction NavClearBoard({ names, handlers }) {\n    const [whichHandler, setWhichHandler] = useState(0);\n    const sysStatus = useContext(sysStatusContext);\n    const [className, toggleHandler] = Colored();\n\n    const localHandler = () => {\n        if (sysStatus.get !== \"IDLE\" && sysStatus.get !== \"STOP\") {\n            return;\n        }\n\n        setWhichHandler(preWhichHandler => (preWhichHandler + 1) % handlers.length);\n        handlers[whichHandler]();\n    }\n\n    return (\n        <Nav.Item xs={1}>\n            <Nav.Link onClick={localHandler} className={className} onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}>{names[whichHandler]}</Nav.Link>\n        </Nav.Item>\n    )\n}\n\nexport default NavClearBoard\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport { sysStatusContext } from '../../../Core';\r\nimport { speedContext } from '../../../Core';\r\nimport Colored from '../../../HOC/Colored';\r\n\r\nfunction DropdownSpeed() {\r\n    const [title, setTitle] = useState('Average');\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const speed = useContext(speedContext);\r\n    const [className, toggleHandler] = Colored();\r\n\r\n    useEffect(() => {\r\n        setTitle(speed.get[0]);\r\n    }, [speed.get])\r\n\r\n\r\n    const DropdownSpeedHandler = (eventKey) => {\r\n        if (sysStatus.get !== \"IDLE\" && sysStatus.get !== \"STOP\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Fast\":\r\n                speed.set(\"Fast\");\r\n                break;\r\n            case \"Average\":\r\n                speed.set(\"Average\");\r\n                break;\r\n            case \"Slow\":\r\n                speed.set(\"Slow\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <NavDropdown xs={1} title={<span className={className}>Speed: {title}</span>} id=\"DropdownSpeed\" onSelect={DropdownSpeedHandler}\r\n            onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}\r\n        >\r\n            <NavDropdown.Item eventKey=\"Fast\">Fast</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Average\">Average</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Slow\">Slow</NavDropdown.Item>\r\n        </NavDropdown>\r\n    )\r\n}\r\n\r\nexport default DropdownSpeed;","import { useState, useContext, useEffect } from 'react';\nimport { algorithmContext } from '../../../Core';\n\nfunction Info() {\n\tconst [bannedBomb, setBannedBomb] = useState(\"\");\n\tconst [bannedBFSDFS, setBannedBFSDFS] = useState(\"\");\n\tconst algoContext = useContext(algorithmContext);\n\n\tuseEffect(() => {\n\t\tif (algoContext.get === \"Algorithm_Bidrectional_Swarm\") {\n\t\t\tsetBannedBomb(\"banned\");\n\t\t} else {\n\t\t\tsetBannedBomb(\"\");\n\t\t}\n\n\t\tif (algoContext.get === \"Algorithm_Breadth_First\" || algoContext.get === \"Algorithm_Depth_First\") {\n\t\t\tsetBannedBFSDFS(\"banned\");\n\t\t} else {\n\t\t\tsetBannedBFSDFS(\"\");\n\t\t}\n\t}, [algoContext.get])\n\n\treturn (\n\t\t<div id=\"mainInfo\">\n\t\t\t<ul>\n\t\t\t\t<li> <div className=\"Info-Start-Node\"></div>Start Node </li>\n\t\t\t\t<li> <div className=\"Info-End-Node\"></div>Target Node </li>\n\t\t\t\t<li className={bannedBomb}> <div className=\"Info-Bomb-Node\"></div>Gas Node </li>\n\t\t\t\t<li className={bannedBFSDFS}> <div className=\"Info-Weight-Node\"></div>Weight Node </li>\n\t\t\t\t<li> <div className=\"Info-Unvisited-Node\"></div>Unvisited Node </li>\n\t\t\t\t<li> <div className=\"Info-Visited-Node\"></div><div className=\"Info-Visited1-Node\"></div>Visited Node </li>\n\t\t\t\t<li> <div className=\"Info-ShortestPathNode-Node\"></div>Shortest-Path Node </li>\n\t\t\t\t<li> <div className=\"Info-WallNode-Node\"></div>Wall Node </li>\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n\nexport default Info;","import { useState, useContext, useEffect } from 'react';\nimport { algorithmContext } from '../../../Core';\n\nfunction AlgorithmDescriptor() {\n    const [algorithmName, setAlgorithmName] = useState('Pick an algorithm and visualize it!');\n    const [discription1, setDiscription1] = useState('');\n    const [discription2, setDiscription2] = useState('');\n    const algoContext = useContext(algorithmContext);\n\n    useEffect(() => {\n        var algoName = \"\";\n        var d1 = \"\";\n        var d2 = \"\";\n        switch (algoContext.get) {\n            case \"Algorithm_Dijkstra\":\n                algoName = \"Dijkstra's Algorithm\";\n                d1 = \"weighted\";\n                d2 = \"guarantees\";\n                break;\n            case 'Algorithm_AStar':\n                algoName = \"A* Search\";\n                d1 = \"weighted\";\n                d2 = \"guarantees\";\n                break;\n            case \"Algorithm_Greedy_Best_First\":\n                algoName = \"Greedy Best-first Search\";\n                d1 = \"weighted\";\n                d2 = \"does not guarantee\";\n                break;\n            case \"Algorithm_Swarm\":\n                algoName = \"Swarm Algorithm\";\n                d1 = \"weighted\";\n                d2 = \"does not guarantee\";\n                break;\n            case \"Algorithm_Convergent_Swarm\":\n                algoName = \"Convergent Swarm Algorithm\";\n                d1 = \"weighted\";\n                d2 = \"does not guarantee\";\n                break;\n            case \"Algorithm_Bidrectional_Swarm\":\n                algoName = \"Bidrectional Swarm Algorithm\";\n                d1 = \"weighted\";\n                d2 = \"does not guarantee\";\n                break;\n            case \"Algorithm_Breadth_First\":\n                algoName = \"Breath-first Search\";\n                d1 = \"unweighted\";\n                d2 = \"guarantee\";\n                break;\n            case \"Algorithm_Depth_First\":\n                algoName = \"Depth-first Search\";\n                d1 = \"unweighted\";\n                d2 = \"does not guarantee\";\n                break;\n            default:\n                algoName = \"Pick an algorithm and visualize it!\";\n                d1 = \"\";\n                d2 = \"\";\n                break;\n        }\n\n        setAlgorithmName(algoName);\n        setDiscription1(d1);\n        setDiscription2(d2);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [algoContext.get])\n\n    if (algoContext.get === \"\") {\n        return (\n            <div id=\"algorithmDescriptor\">\n                {algorithmName}\n            </div>\n        )\n    } else {\n        return (\n            <div id=\"algorithmDescriptor\">\n                <b>{algorithmName}</b> is <i>{discription1}</i> and <i>{discription2}</i> the shortest path!\n            </div>\n        )\n    }\n\n}\n\nexport default AlgorithmDescriptor;","import React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport data from '../../../Resources/Data/Modalnfo.json';\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react'\n\nfunction IntroductionModal() {\n    const [pages, setPages] = useState(1);\n    const [show, setShow] = useState(true);\n    const [language, setLanguage] = useState(0);\n    const [checked, setChecked] = useState(true);\n    const maxPages = data.length;\n\n    const HandlePrevious = () => {\n        setPages(prePage => prePage - 1 >= 1 ? prePage - 1 : prePage);\n    }\n\n    const HandleNext = () => {\n        if (pages + 1 > maxPages) {\n            setShow(false);\n            return;\n        }\n        setPages(prePage => prePage + 1 <= maxPages ? prePage + 1 : prePage);\n    }\n\n    return (\n        <Modal show={show} size='xl' backdrop=\"static\" centered dialogClassName=\"Modal\">\n            <div className=\"ml-auto Modal-Page\">{`${pages}/${maxPages}`}</div>\n            <div className=\"Modal-Title\">{data[pages - 1][\"Title\"][language]}</div>\n\n            <Modal.Body className=\"Modal-Body\">\n                <p className=\"Modal-BodyText\">{data[pages - 1][\"Dialog\"][language]}</p>\n                <p className=\"Modal-BodyText1\">{data[pages - 1][\"Body\"][language]}</p>\n                {pages === 1 ? <div className=\"Logo\"></div> : null}\n                {pages === 2 ? <div className=\"ShortestPath\"></div> : null}\n                {pages === 3 ? <div className=\"Algorithm\"></div> : null}\n                {pages === 4 ? <div className=\"Maze\"></div> : null}\n                {pages === 5 ? <div className=\"WallWeight\"></div> : null}\n                {pages === 6 ? <div className=\"WeightValue\"></div> : null}\n                {pages === 7 ? <div className=\"AddBomb\"></div> : null}\n                {pages === 8 ? <div className=\"StartDrag\"></div> : null}\n                {pages === 9 ? <div className=\"Other\"></div> : null}\n                {pages === 10 ? (language === 1 ? <p className=\"Modal-BodyText1\">本專案由 <a href=\"https://github.com/novayo\">novayo</a> 及 <a href=\"https://github.com/ChengTsungPao\">ChengTsungPao</a> 共同製作</p> : <p className=\"Modal-BodyText1\">This application made by <a href=\"https://github.com/novayo\">novayo</a> and <a href=\"https://github.com/ChengTsungPao\">ChengTsungPao</a>.</p>) : null}\n            </Modal.Body>\n\n            <Modal.Footer>\n                <Button className=\"mr-auto Model-Button-success\" variant='outline-success' size=\"md\" onClick={() => setShow(false)}>Skip Tutorial</Button>\n                <BootstrapSwitchButton\n                    checked={checked}\n                    onlabel='En'\n                    onstyle='outline-info'\n                    offlabel='Ch'\n                    offstyle='outline-success'\n                    size=\"md\" // eslint-disable-next-line \n                    style='mr-auto' // 這裡會有怪怪的warning，所以加上上面的註解去除warning\n                    onChange={(checked) => {\n                        if (checked) {\n                            setLanguage(0);\n                        } else {\n                            setLanguage(1);\n                        }\n                        setChecked(pre => !pre);\n                    }}\n                />\n                <Button className=\"Model-Button-danger\" variant='outline-danger' size=\"md\" onClick={() => HandlePrevious()}>Previous</Button>\n                <Button className=\"Model-Button-success\" variant='outline-success' size=\"md\" onClick={() => HandleNext()}>Next</Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default IntroductionModal\n","import React, { useState } from 'react'\nimport Modal from 'react-bootstrap/Modal';\nimport emailjs from 'emailjs-com';\n\n// emailjs: https://dashboard.emailjs.com/admin/templates/57jjeff\nfunction Email() {\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    function SendEmail(e) {\n        e.preventDefault();\n        console.log(e.target)\n        emailjs.sendForm('PathFinding', 'template_642ox18', e.target, 'user_ukZuD8qr4KxKtc2jHeC1M')\n            .then((result) => {\n                console.log(result.text);\n            }, (error) => {\n                console.log(error.text);\n            });\n        handleClose();\n    }\n\n    return (\n        <>\n            <div id=\"container-floating\">\n                <div id=\"floating-button\" data-toggle=\"tooltip\" data-placement=\"left\" data-original-title=\"Create\" onClick={handleShow}>\n                    <img className=\"edit\" src=\"https://i.imgur.com/1vyJaJF.png\" alt=\"\" />\n                </div>\n            </div>\n\n            {/* Form Style 4: https://www.sanwebe.com/2014/08/css-html-forms-designs */}\n            <Modal show={show} size='md' onHide={handleClose} centered dialogClassName=\"Modal1\">\n                <form className=\"form-style-4\" onSubmit={SendEmail}>\n                    <label htmlFor=\"field1\">\n                        <span>Enter Your Name</span><input type=\"text\" name=\"from_name\" required />\n                    </label>\n                    <label htmlFor=\"field2\">\n                        <span>Email Address</span><input type=\"email\" name=\"user_email\" required />\n                    </label>\n                    <label htmlFor=\"field4\">\n                        <span>Message to Us</span><textarea name=\"message\" required></textarea>\n                    </label>\n                    <label>\n                        <span> </span><input type=\"submit\" value=\"Send Letter\" />\n                    </label>\n                </form>\n            </Modal>\n        </>\n    )\n}\n\nexport default Email\n","import React from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Logo from '../Elements/Logo';\nimport DropdownAlgorithm from '../Elements/DropdownAlgorithm';\nimport DropdownMaze from '../Elements/DropdownMaze';\nimport NavLink from '../Elements/NavLink';\nimport NavAddBomb from '../Elements/NavAddBomb';\nimport NavButton from '../Elements/NavButton';\nimport NavClearBoard from '../Elements/NavClearBoard';\nimport DropdownSpeed from '../Elements/DropdownSpeed';\nimport ButtonEvent from '../../TableHelper/ButtonEvent';\nimport Info from '../Elements/Info';\nimport AlgorithmDescriptor from '../Elements/AlgorithmDescriptor';\nimport IntroductionModal from '../Elements/IntroductionModal';\nimport Email from '../Elements/Email';\n\nfunction PC() {\n    const buttonEvent = ButtonEvent()\n\n    return (\n        <>\n            <IntroductionModal />\n            <Navbar collapseOnSelect expand=\"xl\" className=\"navbar\">\n                <Logo />\n                <Navbar.Toggle aria-controls=\"Collapse\" />\n                <Navbar.Collapse id=\"Collapse\" className='nvbar-collapse'>\n                    <Nav className=\"nav-bar\">\n                        <DropdownAlgorithm />\n                        <DropdownMaze />\n                        <NavAddBomb names={[\"Add Gas\", \"Remove Gas\"]} handlers={[buttonEvent.Addbomb, buttonEvent.RemoveBomb]} />\n                        <NavButton />\n                        <NavClearBoard names={[\"Clear Board\"]} handlers={[buttonEvent.ClearBoard]} />\n                        <NavLink names={[\"Clear Walls & Weights\"]} handlers={[buttonEvent.ClearWalls]} />\n                        <NavLink names={[\"Clear Path\"]} handlers={[buttonEvent.ClearPath]} />\n                        <DropdownSpeed />\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n            <Info />\n            <AlgorithmDescriptor />\n            <Email />\n        </>\n    )\n}\n\n\n\nexport default PC\n","import React from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Logo from '../Elements/Logo';\nimport DropdownAlgorithm from '../Elements/DropdownAlgorithm';\nimport DropdownMaze from '../Elements/DropdownMaze';\nimport NavLink from '../Elements/NavLink';\nimport NavAddBomb from '../Elements/NavAddBomb';\nimport NavButton from '../Elements/NavButton';\nimport NavClearBoard from '../Elements/NavClearBoard';\nimport DropdownSpeed from '../Elements/DropdownSpeed';\nimport ButtonEvent from '../../TableHelper/ButtonEvent';\nimport AlgorithmDescriptor from '../Elements/AlgorithmDescriptor';\nimport IntroductionModal from '../Elements/IntroductionModal';\n// import Email from '../Elements/Email';\n\nfunction Mobile() {\n    const buttonEvent = ButtonEvent()\n\n    return (\n        <>\n            <IntroductionModal />\n            <Navbar collapseOnSelect expand=\"xl\" className=\"navbar\">\n                <Logo />\n                <Navbar.Toggle aria-controls=\"Collapse\" />\n                <Navbar.Collapse id=\"Collapse\" className='navbar-collapse'>\n                    <Nav className=\"nav-bar\">\n                        <DropdownAlgorithm />\n                        <DropdownMaze />\n                        <NavAddBomb names={[\"Add Gas\", \"Remove Gas\"]} handlers={[buttonEvent.Addbomb, buttonEvent.RemoveBomb]} />\n                        <NavClearBoard names={[\"Clear Board\"]} handlers={[buttonEvent.ClearBoard]} />\n                        <NavLink names={[\"Clear Walls & Weights\"]} handlers={[buttonEvent.ClearWalls]} />\n                        <NavLink names={[\"Clear Path\"]} handlers={[buttonEvent.ClearPath]} />\n                        <DropdownSpeed />\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n            <NavButton />\n            <AlgorithmDescriptor />\n            {/* <Email /> */}\n        </>\n    )\n}\n\n\nexport default Mobile\n","import PC from './HeaderHelper/HeaderHepler/PC';\r\nimport Mobile from './HeaderHelper/HeaderHepler/Mobile';\r\n\r\nfunction Header() {\r\n\r\n    if (navigator.userAgent.match(/Mobile/i)) {\r\n        import('./HeaderHelper/Css/Mobile.css');\r\n        return (\r\n            <Mobile />\r\n        )\r\n    } else {\r\n        import('./HeaderHelper/Css/PC.css');\r\n        return (\r\n            <PC />\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default Header\r\n","\nexport function RestrictComp(algorithm){\n\n    switch (algorithm.get) {\n        case \"Algorithm_Dijkstra\":\n            return { wall: true, weight: true, bomb: true }\n        case \"Algorithm_AStar\":\n            return { wall: true, weight: true, bomb: true }\n        case \"Algorithm_Greedy_Best_First\":\n            return { wall: true, weight: true, bomb: true }\n        case \"Algorithm_Swarm\":\n            return { wall: true, weight: true, bomb: true }\n        case \"Algorithm_Convergent_Swarm\":\n            return { wall: true, weight: true, bomb: true }\n        case \"Algorithm_Bidrectional_Swarm\":\n            return { wall: true, weight: true, bomb: false }\n        case \"Algorithm_Breadth_First\":\n            return { wall: true, weight: false, bomb: true }\n        case \"Algorithm_Depth_First\":\n            return { wall: true, weight: false, bomb: true }\n        default:\n            return { wall: true, weight: true, bomb: true }\n    }   \n}","import { componentKind, keyboardSupport, weightValueRange } from './TableIndex'\nimport { position } from '../../Core/index'\nimport { RestrictComp } from './RestrictComp'\n\n\nexport function KeyboardEvent(event, algorithm, weightValue = null) {\n    // console.log(\"KeyboardEvent\")\n\n    if(RestrictComp(algorithm).weight === false){\n        if(weightValue != null){\n            componentKind.add = false\n            keyboardSupport.down = false\n        }else{\n            componentKind.add = componentKind.wall\n            keyboardSupport.down = true\n        }\n        return\n    \n    }\n\n    if(event.key === keyboardSupport.w){\n        if(componentKind.add === componentKind.wall){\n            componentKind.add = componentKind.weight\n            keyboardSupport.down = false\n        }else{\n            componentKind.add = componentKind.wall\n            keyboardSupport.down = true\n        }\n\n    }else if(event.key === keyboardSupport.plus && position.weightValue + weightValueRange.increase <= weightValueRange.max){\n        if(weightValue != null){\n            weightValue.set(\"+\")\n            keyboardSupport.down = false\n        }else{\n            keyboardSupport.down = true\n        }\n\n    }else if(event.key === keyboardSupport.sub && position.weightValue - weightValueRange.increase >= weightValueRange.min){\n        if(weightValue != null){\n            weightValue.set(\"-\")\n            keyboardSupport.down = false\n        }else{\n            keyboardSupport.down = true\n        }\n\n    }else if(event.key === keyboardSupport.plus || event.key === keyboardSupport.sub){\n        if(weightValue != null){\n            weightValue.set(!weightValue.get.status)\n            keyboardSupport.down = false\n        }else{\n            keyboardSupport.down = true\n        }\n    }\n\n    // console.log(position.weightValue)\n\n}\n","import { useContext, useEffect } from 'react'\nimport { sysStatusContext, algorithmContext, speedContext, animationStatusContext } from '../../Core/index'\nimport { tableVar, touchContext, moveContext, updateContext, weightValueContext, componentKind, keyboardSupport, synchronize } from './TableIndex'\nimport { setTable } from './SetTable'\nimport { UpdateTable } from './UpdateTable'\nimport { WhichComponent } from './WhichComp'\nimport { KeyboardEvent } from './KeyboardEvent'\nimport ButtonEvent from './ButtonEvent'\n\n\nfunction MouseEvent() {\n    const [touch, move, update, weightValue, animation] = [useContext(touchContext), useContext(moveContext), useContext(updateContext), useContext(weightValueContext), useContext(animationStatusContext)]\n    const [algorithm, speed, sysStatus] = [useContext(algorithmContext), useContext(speedContext), useContext(sysStatusContext)]\n    const buttonEvent = ButtonEvent()\n\n    useEffect(() => {\n        synchronize.algorithm = algorithm\n        synchronize.sysStatus = sysStatus\n        // eslint-disable-next-line\n    }, [algorithm.get, sysStatus.get])\n\n    document.addEventListener('keydown', function(event) {\n        if(synchronize.sysStatus.get !== \"IDLE\" && synchronize.sysStatus.get !== \"STOP\"){\n            return\n        }\n        if(keyboardSupport.down){\n            KeyboardEvent(event, synchronize.algorithm, weightValue)\n        }\n    })\n    document.addEventListener('keyup', function(event) {\n        if(keyboardSupport.down === false){\n            KeyboardEvent(event, synchronize.algorithm)\n        }\n    })\n\n    const CheckStopStatus = () => {\n        if (sysStatus.get === \"STOP\"){\n            if(animation.get === \"Maze\"){\n                buttonEvent.ClearWalls(false)\n                animation.set(\"Algorithm\")\n            } else {\n                buttonEvent.ClearPath()\n            }\n            sysStatus.set(\"IDLE\")\n        }\n    }\n\n    const MouseDownHandler = (e) => {\n        // console.log(\"MouseDownHandler \" + e.target.id)\n\n        if ((sysStatus.get !== \"IDLE\" && sysStatus.get !== \"STOP\") || componentKind.add === false) {\n            return\n        }\n\n        e.preventDefault()\n\n        tableVar.id = parseInt(e.target.id)\n        const whichComponent = WhichComponent(tableVar.id, touch)\n\n        if(whichComponent.type){\n            CheckStopStatus()\n            setTable(tableVar.id, whichComponent.rKind, true)\n            move.set(componentKind.add)\n\n        }else{\n            move.set(whichComponent.kind)\n        }\n    }\n\n    const MouseUpHandler = (e) => {\n        // console.log(\"MouseUpHandler \" + e.target.id)\n\n        if ((sysStatus.get !== \"IDLE\" && sysStatus.get !== \"STOP\") || componentKind.add === false) {\n            return\n        }\n\n        move.set(\"\")\n\n        if(update.get && move.get !== \"\"){\n            UpdateTable(buttonEvent.Start, buttonEvent.ClearPath, algorithm, speed)\n        }\n    }\n\n    const OnMouseEnterHanlder = (e) => {\n        // console.log(\"OnMouseEnterHanlder \" + e.target.id)\n\n        if ((sysStatus.get !== \"IDLE\" && sysStatus.get !== \"STOP\") || componentKind.add === false) {\n            return\n        }\n\n        tableVar.newId = parseInt(e.target.id)\n        const whichOldComponent = WhichComponent(tableVar.id, touch)\n        const whichNewComponent = WhichComponent(tableVar.newId, touch)\n\n        if(move.get === componentKind.add && whichNewComponent.type){\n            setTable(tableVar.newId, whichNewComponent.rKind, true)\n            tableVar.id = parseInt(tableVar.newId)\n            CheckStopStatus()\n\n        }else if(move.get !== componentKind.add && move.get !== \"\" && whichNewComponent.type){\n            setTable(tableVar.id, whichOldComponent.touch, true)\n            touch.set({componentKind: whichOldComponent.kind, under: whichNewComponent.kind})\n            setTable(tableVar.newId, whichOldComponent.kind, true)\n            tableVar.id = parseInt(tableVar.newId)\n            CheckStopStatus()\n        }\n\n        if(update.get && move.get !== \"\"){\n            UpdateTable(buttonEvent.Start, buttonEvent.ClearPath, algorithm, speed)\n        }\n    }\n\n    return {MouseDownHandler, MouseUpHandler, OnMouseEnterHanlder}\n\n}\n\nexport default MouseEvent","import { useEffect } from 'react'\nimport MouseEvent from './MouseEvent'\nimport { tableVar, componentKind, originPos } from './TableIndex'\n\nfunction TableUI() {\n    const [rowSize, colSize, size] = [tableVar.rowSize, tableVar.colSize, tableVar.size]\n\n    const row = Array.from(Array(rowSize).keys())\n    const col = Array.from(Array(colSize).keys())\n\n    const mouesEvent = MouseEvent()\n    const [MouseDownHandler, MouseUpHandler, OnMouseEnterHanlder] = [mouesEvent.MouseDownHandler, mouesEvent.MouseUpHandler, mouesEvent.OnMouseEnterHanlder]\n\n    const createTable = row.map((rowIndex, index) => {\n        return ( \n            <tr key = {index} height={size}>\n                {col.map((colIndex, index) => {\n                    // console.log(rowIndex + \" \" + colIndex)\n                    return (\n                        <td id = {rowIndex * colSize + colIndex} key = {index} className = {componentKind.background} width = {size} onMouseUp = {MouseUpHandler} onMouseDown = {MouseDownHandler} onMouseEnter = {OnMouseEnterHanlder}>\n                            {}\n                        </td>)}\n                    )}\n            </tr>)}\n        )\n\n    useEffect(() => {\n        document.getElementById((originPos.origin_start[0] * tableVar.colSize + originPos.origin_start[1]).toString()).className = componentKind.start\n        document.getElementById((originPos.origin_end[0] * tableVar.colSize + originPos.origin_end[1]).toString()).className = componentKind.end\n    }, [])\n    \n\n    return (\n        <div className = \"tablePadding\">\n            <table id = \"board\" className = \"board\" align=\"center\" border=\"1\" cellSpacing=\"0\">\n                <tbody>\n                    {createTable}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default TableUI\n","import { useEffect, useContext, useState } from 'react'\nimport { weightValueContext, updateContext, weightValueRange } from './TableIndex'\nimport { algorithmContext, speedContext, position } from '../../Core/index'\nimport { UpdateTable } from './UpdateTable'\nimport ButtonEvent from './ButtonEvent'\nimport Modal from 'react-bootstrap/Modal';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport ProgressBar from 'react-bootstrap/ProgressBar';\n\n\nfunction WeightModal() {\n    // console.log(\"WeightModal\")\n    const [weightValue, update, algorithm, speed] = [useContext(weightValueContext), useContext(updateContext), useContext(algorithmContext), useContext(speedContext)]\n    const [initShow, setInitShow] = useState(false)\n    const [show, setShow] = useState(0)\n    const buttonEvent = ButtonEvent()\n    \n    useEffect(() => {\n        if(initShow){\n            setShow(show => show + 1)\n            setTimeout(() => {\n                setShow(show => {\n                    if(show === 0){\n                        return 0\n                    }else{\n                        return show - 1\n                    }\n                })\n            }, weightValueRange.waiting)\n\n        }\n        setInitShow(true)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [weightValue.get])\n\n    useEffect(() => {\n        if(show === 0 && update.get && Object.keys(position.weight).length !== 0){\n            UpdateTable(buttonEvent.Start, buttonEvent.ClearPath, algorithm, speed)\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [show])\n\n    const handleClose = () => {\n        setShow(0)\n    }\n\n    return (\n        <div>\n            <Modal show = {show > 0} size = \"sm\" onHide = {handleClose} dialogClassName = \"weightModal\">\n                <Modal.Body>\n                    <Row>\n                        <Col xs = {1}><div className = \"weightImage\"/></Col>\n                        <Col><ProgressBar className = \"progress\" now={weightValue.get.value} label={weightValue.get.value} min = {weightValueRange.min} max = {weightValueRange.max} /></Col>\n                    </Row>    \n                </Modal.Body>\n            </Modal>\n        </div>\n    )\n}\n\nexport default WeightModal\n","import TableUI from './TableHelper/TableUI';\nimport { useContext, useEffect } from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { sysStatusContext } from '../Core';\nimport WeightModal from './TableHelper/WeightModal';\n\nfunction Table() {  \n\tconst sysStatus = useContext(sysStatusContext);\n\n\tuseEffect(()=>{\n\t\tsetTimeout(()=>{sysStatus.set(\"IDLE\");}, 1000);\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [])\n\t\n\n\tif (sysStatus.get === \"LOADING\"){\n\t\treturn (<Spinner animation=\"border\" variant=\"warning\" />);\n\t}\n\telse{\n\t\treturn (\n\t        <div id = \"UI\">\n\t            <TableUI/>\n\t\t\t\t<WeightModal />\n\t        </div>\n\t    )\n\t}\n}\n\nexport default Table\n","import './App.scss';\nimport { useReducer } from 'react';\nimport Header from './Frontend/Header';\nimport { algorithmReducer, initialAlgorithm, algorithmContext } from './Core';\nimport { sysStatusReducer, initialsysStatus, sysStatusContext } from './Core';\nimport { bombContext, bombInitial, bombReducer } from './Core';\nimport { speedContext, speedInitial, speedReducer } from './Core';\nimport { animationStatusContext, animationStatusInitial, animationStatusReducer } from './Core';\nimport Table from './Frontend/Table';\nimport { touchReducer, touchInitial, touchContext } from './Frontend/TableHelper/TableIndex';\nimport { moveReducer, moveInitial, moveContext } from './Frontend/TableHelper/TableIndex';\nimport { weightValueReducer, weightValueInitial, weightValueContext } from './Frontend/TableHelper/TableIndex';\nimport { updateReducer, updateInitial, updateContext } from './Frontend/TableHelper/TableIndex';\n\nfunction App() {\n  const [curAlgorithm, setCurAlgorithm] = useReducer(algorithmReducer, initialAlgorithm);\n  const [curSysStatus, setCurSysStatus] = useReducer(sysStatusReducer, initialsysStatus);\n  const [curBomb, setCurBomb] = useReducer(bombReducer, bombInitial);\n  const [curSpeed, setCurSpeed] = useReducer(speedReducer, speedInitial);\n  const [touch, setTouch] = useReducer(touchReducer, touchInitial)\n  const [move, setMove] = useReducer(moveReducer, moveInitial)\n  const [update, setUpdate] = useReducer(updateReducer, updateInitial)\n  const [weightValue, setWeightValue] = useReducer(weightValueReducer, weightValueInitial)\n  const [animation, setAnimation] = useReducer(animationStatusReducer, animationStatusInitial)\n\n  return (\n    <div className=\"App\">\n      {/* <IntroductionModal /> */}\n      <animationStatusContext.Provider value={{ get: animation, set: setAnimation }}>\n        <weightValueContext.Provider value={{ get: weightValue, set: setWeightValue }}>\n          <updateContext.Provider value={{ get: update, set: setUpdate }}>\n            <moveContext.Provider value={{ get: move, set: setMove }}>\n              <touchContext.Provider value={{ get: touch, set: setTouch }}>\n                <speedContext.Provider value={{ get: curSpeed, set: setCurSpeed }}>\n                  <bombContext.Provider value={{ get: curBomb, set: setCurBomb }}>\n                    <sysStatusContext.Provider value={{ get: curSysStatus, set: setCurSysStatus }}>\n                      <algorithmContext.Provider value={{ get: curAlgorithm, set: setCurAlgorithm }}>\n                        <Header />\n                        {/* <Info />\n                        <AlgorithmDescriptor /> */}\n                        <Table />\n                        {/* <Email /> */}\n                      </algorithmContext.Provider>\n                    </sysStatusContext.Provider>\n                  </bombContext.Provider>\n                </speedContext.Provider>\n              </touchContext.Provider>\n            </moveContext.Provider>\n          </updateContext.Provider>\n        </weightValueContext.Provider>\n      </animationStatusContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}