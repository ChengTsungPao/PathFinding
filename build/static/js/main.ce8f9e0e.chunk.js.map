{"version":3,"sources":["Core/index.js","frontend/HeaderHelper/Logo.js","frontend/HeaderHelper/DropdownAlgorithm.js","frontend/HeaderHelper/DropdownMaze.js","HOC/Colored.js","frontend/HeaderHelper/NavLink.js","frontend/HeaderHelper/NavAddBomb.js","frontend/HeaderHelper/NavButton.js","frontend/HeaderHelper/DropdownSpeed.js","frontend/TableHelper/TableIndex.js","frontend/TableHelper/MouseEvent.js","frontend/TableHelper/TableUI.js","frontend/TableHelper/ButtonEvent.js","frontend/Header.js","frontend/Table.js","App.js","reportWebVitals.js","index.js"],"names":["sysStatusContext","React","createContext","initialsysStatus","sysStatusReducer","state","action","bombContext","bombReducer","algorithmContext","algorithmReducer","logo","Navbar","Brand","href","className","src","process","width","height","variant","alt","DropdownAlgorithm","algoContext","useContext","sysStatus","Nav","Item","NavDropdown","xs","title","id","onSelect","eventKey","get","set","DropdownAlgorithmHandler","DropdownMaze","alert","Colored","useState","isHover","setIsHover","setClassName","NavLink","names","handlers","whichHandler","setWhichHandler","toggleHandler","Link","onClick","preWhichHandler","length","onMouseEnter","onMouseLeave","NavAddBomb","bomb","useEffect","NavButton","buttonName","setButtonName","myVariant","setMyVariant","algoName","Button","size","setTimeout","DropdownSpeed","setTitle","tableContext","rowSize","Math","floor","window","screen","colSize","startInit","search","path","speed","picture","wall","start","end","background","clickButton","buttonKind","Init","AddBomb","RemoveBomb","ClearWalls","ClearBoard","ClearPath","MouseEvent","tableVarContext","setWall","setBomb","bombComponent","startComponent","endComponent","touch","setTouch","move","setMove","initialTable","Array","from","keys","index","tableColor","setTableColor","temp","slice","console","log","i","count","SearchAnimation","setInterval","clearInterval","ReactDOM","render","document","getElementById","PathAnimation","MouseDownHandler","e","preventDefault","target","parseInt","MouseUpHandler","OnMouseEnterHanlder","OnMouseOutHanlder","TableUI","row","col","mouesEvent","createTable","map","rowIndex","colIndex","bgcolor","onMouseUp","onMouseDown","onMouseOut","align","border","cellSpacing","ButtonEvent","Addbomb","Start","Header","buttonEvent","collapseOnSelect","expand","bg","Logo","Toggle","aria-controls","Collapse","Table","App","useReducer","curAlgorithm","setCurAlgorithm","curSysStatus","setCurSysStatus","curBomb","setCurBomb","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.ce8f9e0e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n// 目前系統狀態\r\nexport const sysStatusContext = React.createContext();\r\nexport const initialsysStatus = \"IDLE\";\r\nexport const sysStatusReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'IDLE':\r\n            return 'IDLE';\r\n        case 'RUNNING':\r\n            return 'RUNNING';\r\n        default:\r\n            return initialsysStatus;\r\n    }\r\n}\r\n\r\n// Bomb status\r\nexport const bombContext = React.createContext();\r\nexport const bombInitial = false;\r\nexport const bombReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'True':\r\n            return true;\r\n        case 'False':\r\n            return false;\r\n        default:\r\n            return bombInitial\r\n    }\r\n}\r\n\r\n// Speed\r\nexport const speedContext = React.createContext({ status: \"average\" });\r\n\r\n// 目前系統是哪種演算法\r\nexport const algorithmContext = React.createContext();\r\nexport const initialAlgorithm = \"\";\r\nexport const algorithmReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'Algorithm_Dijkstra':\r\n            return 'Algorithm_Dijkstra';\r\n        case 'Algorithm_APlus':\r\n            return 'Algorithm_APlus';\r\n        case \"Algorithm_Greedy_Best_First\":\r\n            return 'Algorithm_Greedy_Best_First';\r\n        case \"Algorithm_Swarm\":\r\n            return 'Algorithm_Swarm';\r\n        case \"Algorithm_Convergent_Swarm\":\r\n            return 'Algorithm_Convergent_Swarm';\r\n        case \"Algorithm_Bidrectional_Swarm\":\r\n            return 'Algorithm_Bidrectional_Swarm';\r\n        case \"Algorithm_Breadth_First\":\r\n            return 'Algorithm_Breadth_First';\r\n        case \"Algorithm_Depth_First\":\r\n            return 'Algorithm_Depth_First';\r\n        default:\r\n            return initialAlgorithm;\r\n    }\r\n}","import React from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\n\r\nfunction logo() {\r\n    return (\r\n        <Navbar.Brand href=\"/PathingFinding/\" className='Navbar-logo'>\r\n            <img\r\n                src={process.env.PUBLIC_URL + '/logo.png'} // 取得public資料夾路徑\r\n                width=\"50\"\r\n                height=\"50\"\r\n                className='d-inline-block'\r\n                variant='test'\r\n                alt='Logo'\r\n            /> {' '}\r\n                    Path-Finding\r\n        </Navbar.Brand>\r\n    )\r\n}\r\n\r\nexport default logo\r\n","import React, { useContext } from 'react';\r\nimport { NavDropdown, Nav } from 'react-bootstrap';\r\nimport { algorithmContext, sysStatusContext } from '../../Core';\r\n\r\nfunction DropdownAlgorithm({ className }) {\r\n    const algoContext = useContext(algorithmContext);\r\n    const sysStatus = useContext(sysStatusContext);\r\n\r\n    const DropdownAlgorithmHandler = (eventKey) => {\r\n\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Algorithm_Dijkstra\":\r\n                algoContext.set('Algorithm_Dijkstra');\r\n                break;\r\n            case \"Algorithm_APlus\":\r\n                algoContext.set('Algorithm_APlus');\r\n                break;\r\n            case \"Algorithm_Greedy_Best_First\":\r\n                algoContext.set('Algorithm_Greedy_Best_First');\r\n                break;\r\n            case \"Algorithm_Swarm\":\r\n                algoContext.set('Algorithm_Swarm');\r\n                break;\r\n            case \"Algorithm_Convergent_Swarm\":\r\n                algoContext.set('Algorithm_Convergent_Swarm');\r\n                break;\r\n            case \"Algorithm_Bidrectional_Swarm\":\r\n                algoContext.set('Algorithm_Bidrectional_Swarm');\r\n                break;\r\n            case \"Algorithm_Breadth_First\":\r\n                algoContext.set('Algorithm_Breadth_First');\r\n                break;\r\n            case \"Algorithm_Depth_First\":\r\n                algoContext.set('Algorithm_Depth_First');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item>\r\n            <NavDropdown xs={1} title=\"Algorithms\" id=\"DropdownAlgorithm\" onSelect={(eventKey) => DropdownAlgorithmHandler(eventKey)} className={className}\r\n            >\r\n                <NavDropdown.Item eventKey=\"Algorithm_Dijkstra\">Dijkstra's Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_APlus\">A+ Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Greedy_Best_First\">Greedy Best-First Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Swarm\">Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Convergent_Swarm\">Convergent Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Bidrectional_Swarm\">Bidirectional Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Breadth_First\">Breadth-First Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Depth_First\">Depth-First Search</NavDropdown.Item>\r\n            </NavDropdown>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default DropdownAlgorithm;","import React, { useContext } from 'react'\r\nimport { NavDropdown, Nav } from 'react-bootstrap';\r\nimport { sysStatusContext } from '../../Core';\r\n\r\nfunction DropdownMaze({ className }) {\r\n    const sysStatus = useContext(sysStatusContext);\r\n\r\n    const DropdownMazeHandler = (eventKey) => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Maze_Recursive_Division\":\r\n                alert(\"Maze_Recursive_Division\");\r\n                break;\r\n            case \"Maze_Recursive_Division_vertical\":\r\n                alert(\"Maze_Recursive_Division_vertical\");\r\n                break;\r\n            case \"Maze_Recursive_Division_horizontal\":\r\n                alert(\"Maze_Recursive_Division_horizontal\");\r\n                break;\r\n            case \"Maze_Basic_Random\":\r\n                alert(\"Maze_Basic_Random\");\r\n                break;\r\n            case \"Maze_Basic_Weight_Maze\":\r\n                alert(\"Maze_Basic_Weight_Maze\");\r\n                break;\r\n            case \"Maze_Simple_stair_pattern\":\r\n                alert(\"Maze_Simple_stair_pattern\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item>\r\n            <NavDropdown xs={1} title=\"Mazes & Patterns\" id=\"DropdownMaze\" onSelect={DropdownMazeHandler} className={className}>\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division\">Recursive Division</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division_vertical\">Recursive Division(vertical skew)</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division_horizontal\">Recursive Division(horizontal skew)</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Basic_Random\">Basic Random Maze</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Basic_Weight_Maze\">Basic Weight Maze</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Simple_stair_pattern\">Simple Stair Pattern</NavDropdown.Item>\r\n            </NavDropdown>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default DropdownMaze;","import { useState, useContext } from 'react';\nimport { sysStatusContext } from '../Core';\nimport '../App.scss';\n\nconst Colored = () => {\n    const sysStatus = useContext(sysStatusContext);\n    const [isHover, setIsHover] = useState(false);\n    const [className, setClassName] = useState(\"nav-link-default\");\n\n    const toggleHandler = () => {\n        if (isHover) {\n            setClassName(\"nav-link-default\");\n            setIsHover(false);\n        } else {\n            if (sysStatus.get !== \"IDLE\") {\n                setClassName(\"nav-link-red\");\n            } else {\n                setClassName(\"nav-link-green\");\n            }\n            setIsHover(true);\n        }\n    }\n\n    return [className, toggleHandler];\n}\n\nexport default Colored\n","import React, { useState, useContext } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { sysStatusContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\n\r\nfunction NavLink({ names, handlers }) {\r\n    const [whichHandler, setWhichHandler] = useState(0);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const [className, toggleHandler] = Colored();\r\n\r\n    const localHandler = () => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        setWhichHandler(preWhichHandler => (preWhichHandler + 1) % handlers.length);\r\n        handlers[whichHandler]();\r\n    }\r\n\r\n    return (\r\n        <Nav.Item xs={1}>\r\n            <Nav.Link onClick={localHandler} className={className} onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}>{names[whichHandler]}</Nav.Link>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default NavLink\r\n","/* Links inteface */\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport { bombContext, sysStatusContext } from '../../Core';\nimport Colored from '../../HOC/Colored';\n\nfunction NavAddBomb({ names, handlers }) {\n    const [whichHandler, setWhichHandler] = useState(0);\n    const bomb = useContext(bombContext);\n    const sysStatus = useContext(sysStatusContext);\n    const [className, toggleHandler] = Colored();\n\n\n    useEffect(() => {\n\n        if (bomb.get === true) {\n            setWhichHandler(1);\n        } else {\n            setWhichHandler(0);\n        }\n\n        handlers[whichHandler]();\n    }, [bomb, handlers, whichHandler])\n\n    const localHandler = () => {\n\n        if (sysStatus.get !== \"IDLE\") {\n            return;\n        }\n\n        if (bomb.get === true) {\n            bomb.set(\"False\");\n        } else {\n            bomb.set(\"True\");\n        }\n    }\n\n    return (\n        <Nav.Item xs={1}>\n            <Nav.Link onClick={localHandler} className={className} onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}>{names[whichHandler]}</Nav.Link>\n        </Nav.Item>\n    )\n}\n\nexport default NavAddBomb\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { algorithmContext, sysStatusContext } from '../../Core';\r\n\r\nconst NavButton = () => {\r\n\r\n    const [buttonName, setButtonName] = useState(\"Visualize !\");\r\n    const [myVariant, setMyVariant] = useState(\"\");\r\n    const algoContext = useContext(algorithmContext);\r\n    const sysStatus = useContext(sysStatusContext);\r\n\r\n    useEffect(() => {\r\n        setMyVariant('success');\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        var algoName = \"\";\r\n        switch (algoContext.get) {\r\n            case \"Algorithm_Dijkstra\":\r\n                algoName = \"Dijkstra's\";\r\n                break;\r\n            case 'Algorithm_APlus':\r\n                algoName = \"A*\";\r\n                break;\r\n            case \"Algorithm_Greedy_Best_First\":\r\n                algoName = \"Greedy\";\r\n                break;\r\n            case \"Algorithm_Swarm\":\r\n                algoName = \"Swarm\";\r\n                break;\r\n            case \"Algorithm_Convergent_Swarm\":\r\n                algoName = \"Convergent Swarm\";\r\n                break;\r\n            case \"Algorithm_Bidrectional_Swarm\":\r\n                algoName = \"Bidrectional Swarm\";\r\n                break;\r\n            case \"Algorithm_Breadth_First\":\r\n                algoName = \"BFS\";\r\n                break;\r\n            case \"Algorithm_Depth_First\":\r\n                algoName = \"DFS\";\r\n                break;\r\n            default:\r\n                algoName = \"\";\r\n                break;\r\n        }\r\n\r\n        setButtonName(`Visualize ${algoName}!`);\r\n    }, [algoContext.get])\r\n\r\n    const resetButton = () => {\r\n        setMyVariant('success');\r\n        sysStatus.set(\"IDLE\");\r\n    }\r\n\r\n    const handler = () => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        if (algoContext.get === \"\") {\r\n            setButtonName(\"Pick an Algorithm\");\r\n        } else {\r\n            sysStatus.set(\"RUNNING\");\r\n            setMyVariant('danger');\r\n            setTimeout(() => resetButton(), 10000);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item xs={1}>\r\n            <Button id=\"navButton\" variant={myVariant} size=\"lg\" onClick={handler}>{buttonName}</Button>\r\n        </Nav.Item>\r\n    )\r\n};\r\n\r\nexport default NavButton\r\n","import React, { useState, useContext } from 'react';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport { sysStatusContext } from '../../Core';\r\n\r\nfunction DropdownSpeed({ className }) {\r\n    const [title, setTitle] = useState('Average');\r\n    const sysStatus = useContext(sysStatusContext);\r\n\r\n    const DropdownSpeedHandler = (eventKey) => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Fast\":\r\n                setTitle(\"Fast\");\r\n                alert(\"Speed Fast!\");\r\n                break;\r\n            case \"Average\":\r\n                setTitle(\"Average\");\r\n                alert(\"Speed Average!\");\r\n                break;\r\n            case \"Slow\":\r\n                setTitle(\"Slow\");\r\n                alert(\"Speed Slow!\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <NavDropdown xs={1} title={`Speed: ${title}`} id=\"DropdownSpeed\" onSelect={DropdownSpeedHandler} className={className}>\r\n            <NavDropdown.Item eventKey=\"Fast\">Fast</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Average\">Average</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Slow\">Slow</NavDropdown.Item>\r\n        </NavDropdown>\r\n    )\r\n}\r\n\r\nexport default DropdownSpeed;","import { createContext } from 'react'\n\n\nexport const tableContext = createContext(\n    {\n        rowSize: Math.floor(window.screen.height / 30) - 7, \n        colSize: Math.floor(window.screen.width / 30), \n        size: 30,\n        startInit: \"InitTable\", \n        search: \"init\",\n        path: \"init\",\n        speed: 500,\n        picture: {wall: \"#0000E6\", bomb: \"red\", start: \"#E69500\", end: \"#E000E0\", background: \"white\", search: \"#26FFFF\", path: \"#F0F000\"},\n        clickButton: \"init\",\n        buttonKind: {Init: \"init\", AddBomb: \"AddBomb\", RemoveBomb: \"RemoveBomb\", ClearWalls: \"ClearWalls\", ClearBoard: \"ClearBoard\", start: \"start\", ClearPath: \"ClearPath\"}\n    }\n)\n\n\n  ","import { useState, useContext, useEffect } from 'react'\nimport { tableContext } from './TableIndex'\nimport ReactDOM from 'react-dom'\nimport TableUI from './TableUI';\n\n\nfunction MouseEvent() {\n    const tableVarContext = useContext(tableContext)\n    const [rowSize, colSize] = [tableVarContext.rowSize, tableVarContext.colSize]\n    const picture = tableVarContext.picture\n\n    const [wall, setWall] = useState(false)\n    const [bomb, setBomb] = useState(false)\n    const [touch, setTouch] = useState({bombComponent: false, startComponent: false, endComponent: false})\n    const [move, setMove] = useState({bombComponent: false, startComponent: false, endComponent: false})\n\n    const initialTable = Array.from(Array(rowSize * colSize).keys(), index => {\n        if(index === Math.floor(rowSize / 2) * colSize + Math.floor(colSize / 4)){\n            return picture.start\n        }else if(index === Math.floor(rowSize / 2 + 1) * colSize - Math.floor(colSize / 4)){\n            return picture.end\n        }else{\n            return picture.background\n        }\n    })\n    const [tableColor, setTableColor] = useState(initialTable)\n    var temp = tableColor.slice()\n\n    function SearchAnimation(search, speed, count) { \n        const SearchAnimation = setInterval(() => {\n            console.log(count)\n            if(count === search.length){\n                clearInterval(SearchAnimation)\n            }else{\n                for(var i = 0;i < search[count].length;i++){\n                    temp[search[count][i][0] * tableVarContext.colSize + search[count][i][1]] = picture.search\n                }\n                setTableColor(temp)\n            }\n            count += 1\n            ReactDOM.render(\n                <TableUI />,\n                document.getElementById('UI')\n            )\n        }, speed)\n    }\n\n    function PathAnimation(path, speed, count) {         \n        const PathAnimation = setInterval(() => {\n            console.log(count)\n            if(count === path.length){\n                clearInterval(PathAnimation)\n            }else{\n                temp[path[count][0] * tableVarContext.colSize + path[count][1]] = picture.path\n                console.log(path[count][0] * tableVarContext.colSize + path[count][1])\n                setTableColor(temp)\n            }\n            count += 1\n            ReactDOM.render(\n                <TableUI />,\n                document.getElementById('UI')\n            )\n        }, speed)\n    }\n\n    useEffect(() => {\n        console.log(\"ButtonHanlder\")\n        if(bomb === false && tableVarContext.clickButton === tableVarContext.buttonKind.AddBomb){\n            console.log(\"AddBomb\")\n            setBomb(true)\n            temp[Math.floor(rowSize / 2) * colSize + Math.floor(colSize / 2)] = picture.bomb\n            setTableColor(temp)\n            tableVarContext.clickButton = \"\"\n\n        }else if(bomb && tableVarContext.clickButton === tableVarContext.buttonKind.RemoveBomb){\n            console.log(\"RemoveBomb\")\n            for(var i = 0; i < rowSize * colSize;i++){\n                if(temp[i] === picture.bomb){\n                    temp[i] = picture.background\n                }\n            }\n            setBomb(false)\n            setTableColor(temp)\n            tableVarContext.clickButton = \"\"\n\n        }else if(tableVarContext.clickButton === tableVarContext.buttonKind.ClearWalls){\n            console.log(\"ClearWall\")\n            for(var i = 0; i < rowSize * colSize;i++){\n                if(temp[i] === picture.wall){\n                    temp[i] = picture.background\n                }\n            }\n            setTableColor(temp)\n            setTouch(false)\n            tableVarContext.clickButton = \"\"\n\n        }else if(tableVarContext.clickButton === tableVarContext.buttonKind.ClearBoard){\n            console.log(\"ClearBoard\")\n            setTableColor(initialTable)\n            setBomb(false)\n            setTouch(false)\n            tableVarContext.clickButton = \"\"\n\n        }else if(tableVarContext.clickButton === tableVarContext.buttonKind.start){\n            console.log(\"Start\")\n            const [search, path, speed] = [tableVarContext.search, tableVarContext.path, tableVarContext.speed]\n            tableVarContext.startInit = temp.slice()\n            var count = 0\n            SearchAnimation(search, speed, count)\n            setTimeout(() => {PathAnimation(path, speed, count)}, speed * (search.length + 1))\n            tableVarContext.clickButton = \"\"\n\n        }else if(tableVarContext.clickButton === tableVarContext.buttonKind.ClearPath){\n            console.log(\"ClearPath\")\n            setTableColor(tableVarContext.startInit)\n            tableVarContext.clickButton = \"\"\n\n        }else if(tableVarContext.clickButton === tableVarContext.buttonKind.Init){\n            tableVarContext.clickButton = \"\"\n            ReactDOM.render(\n                <TableUI />,\n                document.getElementById('UI')\n            )\n        }\n    }, [tableVarContext.clickButton])\n\n    const MouseUpHandler = (e) => {\n        console.log(\"MouseUpHandler \" + e.target.id)\n        if(wall){\n            setWall(false)\n        }else{\n            if(temp[parseInt(e.target.id)] === picture.bomb){\n                setMove({...move, bombComponent: false})\n            }else if(temp[parseInt(e.target.id)] === picture.start){\n                setMove({...move, startComponent: false})\n            }else{\n                setMove({...move, endComponent: false})\n            }\n        }\n    }\n\n    const MouseDownHandler = (e) => {\n        e.preventDefault()\n        console.log(\"ClickDownHandler \" + e.target.id)\n        if(temp[parseInt(e.target.id)] !== picture.bomb && temp[parseInt(e.target.id)] !== picture.start && temp[parseInt(e.target.id)] !== picture.end){\n            setWall(true)\n            if(temp[parseInt(e.target.id)] === picture.background){\n                temp[parseInt(e.target.id)] = picture.wall\n            }else{\n                temp[parseInt(e.target.id)] = picture.background\n            }\n            setTableColor(temp)\n        }else{\n            if(temp[parseInt(e.target.id)] === picture.bomb){\n                setMove({...move, bombComponent: true})\n            }else if(temp[parseInt(e.target.id)] === picture.start){\n                setMove({...move, startComponent: true})\n            }else{\n                setMove({...move, endComponent: true})\n            }\n        }\n    }\n\n    const OnMouseEnterHanlder = (e) => {\n        console.log(\"OnMouseEnterHanlder \" + e.target.id)\n        if(wall && temp[parseInt(e.target.id)] !== picture.bomb && temp[parseInt(e.target.id)] !== picture.start && temp[parseInt(e.target.id)] !== picture.end){\n            if(temp[parseInt(e.target.id)] === picture.wall){\n                temp[parseInt(e.target.id)] = picture.background\n            }else{\n                temp[parseInt(e.target.id)] = picture.wall\n            }\n            setTableColor(temp)\n        }else{\n            if(move.bombComponent && temp[parseInt(e.target.id)] !== picture.start && temp[parseInt(e.target.id)] !== picture.end){\n                if(temp[parseInt(e.target.id)] === picture.wall){\n                    setTouch({...touch, bombComponent: true})\n                }else{\n                    setTouch({...touch, bombComponent: false})\n                }\n                temp[parseInt(e.target.id)] = picture.bomb\n                setTableColor(temp)\n            }else if(move.startComponent && temp[parseInt(e.target.id)] !== picture.bomb && temp[parseInt(e.target.id)] !== picture.end){\n                if(temp[parseInt(e.target.id)] === picture.wall){\n                    setTouch({...touch, startComponent: true})\n                }else{\n                    setTouch({...touch, startComponent: false})\n                }\n                temp[parseInt(e.target.id)] = picture.start\n                setTableColor(temp)\n            }else if(move.endComponent && temp[parseInt(e.target.id)] !== picture.bomb && temp[parseInt(e.target.id)] !== picture.start){\n                if(temp[parseInt(e.target.id)] === picture.wall){\n                    setTouch({...touch, endComponent: true})\n                }else{\n                    setTouch({...touch, endComponent: false})\n                }\n                temp[parseInt(e.target.id)] = picture.end\n                setTableColor(temp)\n            }\n        }\n    }\n\n    const OnMouseOutHanlder = (e) => {\n        console.log(\"OnMouseOutHanlder \" + e.target.id)\n        if(wall === false){\n            if(move.bombComponent && temp[parseInt(e.target.id)] !== picture.start && temp[parseInt(e.target.id)] !== picture.end){\n                if(touch.bombComponent){\n                    temp[parseInt(e.target.id)] = picture.wall\n                }else{\n                    temp[parseInt(e.target.id)] = picture.background\n                }\n                setTableColor(temp)\n            }else if(move.startComponent && temp[parseInt(e.target.id)] !== picture.bomb && temp[parseInt(e.target.id)] !== picture.end){\n                if(touch.startComponent){\n                    temp[parseInt(e.target.id)] = picture.wall\n                }else{\n                    temp[parseInt(e.target.id)] = picture.background\n                }\n                setTableColor(temp)\n            }else if(move.endComponent && temp[parseInt(e.target.id)] !== picture.bomb && temp[parseInt(e.target.id)] !== picture.start){\n                if(touch.endComponent){\n                    temp[parseInt(e.target.id)] = picture.wall\n                }else{\n                    temp[parseInt(e.target.id)] = picture.background\n                }\n                setTableColor(temp)\n            }\n        }\n    }\n\n    return {MouseDownHandler, MouseUpHandler, OnMouseEnterHanlder, OnMouseOutHanlder, tableColor}\n\n}\n\nexport default MouseEvent\n\n\n","import React, { useContext } from 'react'\nimport MouseEvent from './MouseEvent'\nimport { tableContext } from './TableIndex'\n\n\nfunction TableUI() {\n    const tableVarContext = useContext(tableContext)\n    const [rowSize, colSize, size] = [tableVarContext.rowSize, tableVarContext.colSize, tableVarContext.size]\n\n    const row = Array.from(Array(rowSize).keys())\n    const col = Array.from(Array(colSize).keys())\n\n    const mouesEvent = MouseEvent()\n    const [MouseDownHandler, MouseUpHandler, OnMouseEnterHanlder, OnMouseOutHanlder, tableColor] = [mouesEvent.MouseDownHandler, mouesEvent.MouseUpHandler, mouesEvent.OnMouseEnterHanlder, mouesEvent.OnMouseOutHanlder, mouesEvent.tableColor]\n\n    const createTable = row.map((rowIndex, index) => {\n        return ( \n            <tr key = {index} height={size}>\n                {col.map((colIndex, index) => {\n                    // console.log(rowIndex + \" \" + colIndex)\n                    return (\n                        <td id = {rowIndex * colSize + colIndex} key = {index} bgcolor = {tableColor[rowIndex * colSize + colIndex]} width={size} onMouseUp = {MouseUpHandler} onMouseDown = {MouseDownHandler} onMouseEnter = {OnMouseEnterHanlder} onMouseOut = {OnMouseOutHanlder}>\n                            {}\n                        </td>)}\n                    )}\n            </tr>)}\n        )\n      \n    return (\n        <div>\n            <table id = \"board\" align=\"center\" border=\"1\" cellSpacing=\"0\" >\n                <tbody>\n                    {createTable}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default TableUI\n","import { useContext } from 'react'\nimport TableUI from './TableUI';\nimport { tableContext } from './TableIndex'\nimport ReactDOM from 'react-dom'\n\n\nfunction ButtonEvent() {\n    const tableVarContext = useContext(tableContext)\n\n    const Addbomb = () => {\n        tableVarContext.clickButton = tableVarContext.buttonKind.AddBomb\n        ReactDOM.render(\n            <TableUI />,\n            document.getElementById('UI')\n        )\n    }\n\n    const RemoveBomb = () => {\n        tableVarContext.clickButton = tableVarContext.buttonKind.RemoveBomb\n        ReactDOM.render(\n            <TableUI />,\n            document.getElementById('UI')\n        )\n    }\n    \n    const ClearWalls = () => {\n        tableVarContext.clickButton = tableVarContext.buttonKind.ClearWalls\n        ReactDOM.render(\n            <TableUI />,\n            document.getElementById('UI')\n        )\n    }\n    \n    const ClearBoard = () => {\n        tableVarContext.clickButton = tableVarContext.buttonKind.ClearBoard\n        ReactDOM.render(\n            <TableUI />,\n            document.getElementById('UI')\n        )\n    }\n\n    const Start = (search, path, speed) => (e) => {\n        tableVarContext.search = search\n        tableVarContext.path = path\n        tableVarContext.speed = speed\n        tableVarContext.clickButton = tableVarContext.buttonKind.start\n        ReactDOM.render(\n            <TableUI />,\n            document.getElementById('UI')\n        )\n    }\n\n    const ClearPath = () => {\n        tableVarContext.clickButton = tableVarContext.buttonKind.ClearPath\n        ReactDOM.render(\n            <TableUI />,\n            document.getElementById('UI')\n        )\n    }\n\n    return {Addbomb, RemoveBomb, ClearWalls, ClearBoard, Start, ClearPath}\n}\n\nexport default ButtonEvent\n\n\n\n","import React from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Logo from './HeaderHelper/Logo';\r\nimport DropdownAlgorithm from './HeaderHelper/DropdownAlgorithm';\r\nimport DropdownMaze from './HeaderHelper/DropdownMaze';\r\nimport NavLink from './HeaderHelper/NavLink';\r\nimport NavAddBomb from './HeaderHelper/NavAddBomb';\r\nimport NavButton from './HeaderHelper/NavButton';\r\nimport DropdownSpeed from './HeaderHelper/DropdownSpeed';\r\nimport ButtonEvent from './TableHelper/ButtonEvent';\r\n\r\nfunction Header() {\r\n    const buttonEvent = ButtonEvent()\r\n\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"xl\" bg='dark' variant='dark'>\r\n            <Logo />\r\n            <Navbar.Toggle aria-controls=\"Collapse\" />\r\n            <Navbar.Collapse id=\"Collapse\" className='nvbar-collapse'>\r\n                <Nav className=\"nav-bar\">\r\n                    <DropdownAlgorithm />\r\n                    <DropdownMaze />\r\n                    <NavAddBomb names={[\"Add Bomb\", \"Remove Bomb\"]} handlers={[buttonEvent.Addbomb, buttonEvent.RemoveBomb]} />\r\n                    <NavButton />\r\n                    <NavLink names={[\"Clear Board\"]} handlers={[buttonEvent.ClearBoard]} />\r\n                    <NavLink names={[\"Clear Walls & Weights\"]} handlers={[buttonEvent.ClearWalls]} />\r\n                    <NavLink names={[\"Clear Path\"]} handlers={[() => alert('Clear Path !')]} />\r\n                    <DropdownSpeed />\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Header\r\n","import TableUI from './TableHelper/TableUI'\n\nfunction Table() {    \n    return (\n        <div id = \"UI\">\n            <TableUI/>\n        </div>\n    )\n}\n\nexport default Table\n","import './App.scss';\nimport { algorithmReducer, initialAlgorithm, algorithmContext } from './Core';\nimport { sysStatusReducer, initialsysStatus, sysStatusContext } from './Core';\nimport { bombContext, bombInitial, bombReducer } from './Core';\nimport Header from './frontend/Header';\nimport { useReducer } from 'react';\nimport Table from './frontend/Table';\nimport ButtonEvent from './frontend/TableHelper/ButtonEvent'\n\n\nfunction App() {\n  const [curAlgorithm, setCurAlgorithm] = useReducer(algorithmReducer, initialAlgorithm);\n  const [curSysStatus, setCurSysStatus] = useReducer(sysStatusReducer, initialsysStatus);\n  const [curBomb, setCurBomb] = useReducer(bombReducer, bombInitial);\n  const [search, path, speed] = [[[[1, 2], [2, 2], [3, 2], [4, 2], [5, 2], [6, 2], [7, 2], [8, 2], [9, 2], [10, 2]],\n  [[1, 3], [2, 3], [3, 3], [4, 3], [5, 3], [6, 3], [7, 3], [8, 3], [9, 3], [10, 3]],\n  [[1, 4], [2, 4], [3, 4], [4, 4], [5, 4], [6, 4], [7, 4], [8, 4], [9, 4], [10, 4]],\n  [[1, 5], [2, 5], [3, 5], [4, 5], [5, 5], [6, 5], [7, 5], [8, 5], [9, 5], [10, 5]],\n  [[1, 6], [2, 6], [3, 6], [4, 6], [5, 6], [6, 6], [7, 6], [8, 6], [9, 6], [10, 6]]]\n    ,\n  [[1, 2], [2, 2], [3, 2], [4, 2], [5, 2], [6, 2], [7, 2], [8, 2], [9, 2], [10, 2]]\n    ,\n    50\n  ]\n  const buttonEvent = ButtonEvent()\n\n  return (\n    <div className=\"App\">\n      <bombContext.Provider value={{ get: curBomb, set: setCurBomb }}>\n        <sysStatusContext.Provider value={{ get: curSysStatus, set: setCurSysStatus }}>\n          <algorithmContext.Provider value={{ get: curAlgorithm, set: setCurAlgorithm }}>\n            <Header />\n          </algorithmContext.Provider>\n        </sysStatusContext.Provider>\n      </bombContext.Provider>\n      <Table />\n      <button onClick={buttonEvent.Start(search, path, speed)}>start</button>\n      <button onClick={buttonEvent.ClearPath}>ClearPath</button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}