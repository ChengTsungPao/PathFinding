{"version":3,"sources":["Frontend/HeaderHelper/Logo.js","Frontend/TableHelper/TableIndex.js","Core/index.js","HOC/Colored.js","Frontend/TableHelper/SetTable.js","Frontend/TableHelper/WhichComp.js","Frontend/TableHelper/Animation.js","Core/Queue.js","Core/Distance.js","Backend/Algorithms/BFS.js","Backend/Algorithms/DFS.js","Backend/Algorithms/Dijkstra.js","Frontend/TableHelper/UpdateTable.js","Frontend/TableHelper/ButtonEvent.js","Frontend/HeaderHelper/DropdownAlgorithm.js","Backend/Maze/Simple_Stair_Pattern.js","Backend/Maze/Core.js","Backend/Maze/Binary_Tree.js","Backend/Maze/RecursiveDivision.js","Backend/Maze/RecursiveDivision_Horizontal.js","Backend/Maze/RecursiveDivision_Vertical.js","Frontend/HeaderHelper/DropdownMaze.js","Frontend/HeaderHelper/NavLink.js","HOC/Colored_AddButton.js","Frontend/HeaderHelper/NavAddBomb.js","Core/IsMount.js","Frontend/HeaderHelper/NavButton.js","Frontend/HeaderHelper/NavClearBoard.js","Frontend/HeaderHelper/DropdownSpeed.js","Frontend/Header.js","Frontend/TableHelper/KeyboardEvent.js","Frontend/TableHelper/MouseEvent.js","Frontend/TableHelper/TableUI.js","Frontend/Table.js","Frontend/HeaderHelper/Info.js","Frontend/HeaderHelper/AlgorithmDescriptor.js","Frontend/HeaderHelper/IntroductionModal.js","App.js","reportWebVitals.js","index.js"],"names":["logo","Navbar","Brand","href","className","src","process","width","height","variant","alt","tableVar","rowSize","Math","floor","window","screen","availHeight","colSize","availWidth","size","id","newId","componentKind","add","wall","weight","bomb","start","end","background","search","searchFinal","searchBomb","searchBombFinal","path","pathFinal","pathHead","keyboardSupport","w","down","touchContext","createContext","touchInitial","touchReducer","state","action","under","moveContext","moveReducer","updateContext","updateReducer","position","sysStatusContext","React","initialsysStatus","sysStatusReducer","bombContext","bombInitial","bombReducer","speedContext","speedInitial","speedReducer","algorithmContext","algorithmReducer","Colored","sysStatus","useContext","useState","isHover","setIsHover","setClassName","get","setTable","index","kind","document","getElementById","toString","pos","addComponentKind","WhichComponent","touch","type","rKind","WhichComponentType","Animation","arr","speed","count","myCallbackFunction","newid","arrAnimation","setInterval","length","clearInterval","SearchBombAnimation","sysStatusFunction","searchBombAnimation","PathAnimation","i","SearchAnimation","searchAnimation","Queue","this","queue","val","push","isEmpty","shift","Distance","dict","max_d","d","max","endPos","shortest","x","y","visited","Set","curD","Infinity","curX","curY","has","unshift","BFS","startCallback","times","retSearchPath","retBombPath","retShortestPath","searchPath","distance","startPos","set","append","getLength","node","popleft","nextD","pop","getShortestPath","concat","DFS","DoDFS","startPath","level","clear","DoDijkstra","j","weights","current_shortest_path","PriorityQueue","table","enqueue","isFoundEnd","_","curPos","dequeue","forEach","nextPos","tmp","curShortestPath","console","log","Dijkstra","UpdateTable","Start","ClearPath","algorithm","ButtonEvent","update","updateVar","event","name","Addbomb","RemoveBomb","ClearWalls","ClearBoard","CreateMaze","maze","MazeAnimation","DropdownAlgorithm","algoContext","toggleHandler","buttonEvent","Nav","Item","NavDropdown","xs","title","onSelect","eventKey","DropdownAlgorithmHandler","onMouseEnter","onMouseLeave","Simple_Stair_Pattern","walls","towardUp","CreateAround","wallSet","Binary_Tree","random","direction","DoRecursiveDivision","door","round","randomX","Random_0_to_n","_y","randomY","_x","n","RecursiveDivision","boolDirection","RecursiveDivision_Horizontal","RecursiveDivision_Vertical","DropdownMaze","alert","NavLink","names","handlers","whichHandler","setWhichHandler","Link","onClick","preWhichHandler","algoStatus","NavAddBomb","isMount","useRef","useEffect","current","IsMount","NavButton","buttonName","setButtonName","myVariant","setMyVariant","algoName","Button","NavClearBoard","DropdownSpeed","setTitle","Header","collapseOnSelect","expand","bg","Logo","Toggle","aria-controls","Collapse","KeyboardEvent","key","MouseEvent","move","addEventListener","MouseDownHandler","e","preventDefault","target","whichComponent","MouseUpHandler","OnMouseEnterHanlder","whichOldComponent","whichNewComponent","TableUI","row","Array","from","keys","col","mouesEvent","createTable","map","rowIndex","colIndex","onMouseUp","onMouseDown","align","border","cellSpacing","Table","setTimeout","Spinner","animation","Info","bannedBomb","setBannedBomb","bannedBFSDFS","setBannedBFSDFS","AlgorithmDescriptor","algorithmName","setAlgorithmName","discription1","setDiscription1","discription2","setDiscription2","d1","d2","IntroductionModal","pages","setPages","show","setShow","language","setLanguage","checked","setChecked","maxPages","data","Modal","backdrop","centered","dialogClassName","Body","Footer","onlabel","onstyle","offlabel","offstyle","style","onChange","pre","prePage","App","useReducer","curAlgorithm","setCurAlgorithm","curSysStatus","setCurSysStatus","curBomb","setCurBomb","curSpeed","setCurSpeed","setTouch","setMove","setUpdate","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"irIAmBeA,MAhBf,WACI,OACI,eAACC,EAAA,EAAOC,MAAR,CAAcC,KAAK,mBAAmBC,UAAU,cAAhD,UACI,qBACIC,IAAKC,wBACLC,MAAM,KACNC,OAAO,KACPJ,UAAU,iBACVK,QAAQ,OACRC,IAAI,SAPZ,IAQQ,IARR,mB,gBCAKC,EAAW,CACpBC,QAASC,KAAKC,MAAMC,OAAOC,OAAOC,YAHzB,IAG+C,GACxDC,QAASL,KAAKC,MAAMC,OAAOC,OAAOG,WAJzB,IAKTC,KALS,GAMTC,GAAI,IACJC,MAAO,KAGEC,EAAiB,CAACC,IAAK,OAAQC,KAAM,OAAQC,OAAQ,SAAWC,KAAM,OAAQC,MAAO,QAASC,IAAK,MAAOC,WAAY,aAAcC,OAAQ,SAAUC,YAAa,cAAeC,WAAY,aAAcC,gBAAiB,kBAAmBC,KAAM,OAAQC,UAAW,YAAaC,SAAU,YAChSC,EAAkB,CAACC,EAAG,IAAKC,MAAM,GAGjCC,EAAeC,0BACfC,EAAe,CAACf,MAAOL,EAAcO,WAAYD,IAAKN,EAAcO,WAAYH,KAAMJ,EAAcO,YACpGc,EAAe,SAACC,EAAOC,GAChC,OAAQA,EAAOvB,eACX,KAAKA,EAAcK,MACf,OAAO,2BAAIiB,GAAX,IAAkBjB,MAAOkB,EAAOC,QACpC,KAAKxB,EAAcM,IACf,OAAO,2BAAIgB,GAAX,IAAkBhB,IAAKiB,EAAOC,QAClC,KAAKxB,EAAcI,KACf,OAAO,2BAAIkB,GAAX,IAAkBlB,KAAMmB,EAAOC,QACnC,QACI,OAAOJ,IAKNK,EAAcN,0BAEdO,EAAc,SAACJ,EAAOC,GAC/B,OAAQA,GACJ,KAAKvB,EAAcK,MAEnB,KAAKL,EAAcM,IAEnB,KAAKN,EAAcI,KAEnB,KAAKJ,EAAcE,KAEnB,KAAKF,EAAcG,OACf,OAAOoB,EACX,QACI,MAde,KAmBdI,EAAgBR,0BAEhBS,EAAgB,SAACN,EAAOC,GACjC,OAAQA,GACJ,IAAK,OACD,OAAO,EACX,IAAK,QACD,OAAO,EACX,QACI,OARiB,QClDlBM,EAAW,CAClBxB,MAAO,CAACf,KAAKC,MAAMH,EAASC,QAAU,GAAIC,KAAKC,MAAMH,EAASO,QAAU,IACxEW,IAAK,CAAChB,KAAKC,MAAMH,EAASC,QAAU,GAAID,EAASO,QAAUL,KAAKC,MAAMH,EAASO,QAAU,IACzFS,MAAM,EACNF,KAAM,GACNC,OAAQ,GACRd,QAASD,EAASC,QAClBM,QAASP,EAASO,SAKTmC,EAAmBC,IAAMZ,gBACzBa,EAAmB,UACnBC,EAAmB,SAACX,EAAOC,GACpC,OAAQA,GACJ,IAAK,OACD,MAAO,OACX,IAAK,UACD,MAAO,UACX,IAAK,UACD,MAAO,UACX,QACI,OAAOS,IAKNE,EAAcH,IAAMZ,gBACpBgB,GAAc,EACdC,EAAc,SAACd,EAAOC,GAC/B,OAAQA,GACJ,IAAK,OACD,OAAO,EACX,IAAK,QACD,OAAO,EACX,QACI,OAAOY,IAKNE,EAAeN,IAAMZ,gBACrBmB,EAAe,CAAC,UAAW,IAC3BC,EAAe,SAACjB,EAAOC,GAChC,OAAQA,GACJ,IAAK,OACD,MAAO,CAAC,OAAQ,KACpB,IAAK,UACD,MAAO,CAAC,UAAW,KACvB,IAAK,OACD,MAAO,CAAC,OAAQ,KACpB,QACI,OAAOY,IAKNK,EAAmBT,IAAMZ,gBAEzBsB,EAAmB,SAACnB,EAAOC,GACpC,OAAQA,GACJ,IAAK,qBACD,MAAO,qBACX,IAAK,kBACD,MAAO,kBACX,IAAK,8BACD,MAAO,8BACX,IAAK,kBACD,MAAO,kBACX,IAAK,6BACD,MAAO,6BACX,IAAK,+BACD,MAAO,+BACX,IAAK,0BACD,MAAO,0BACX,IAAK,wBACD,MAAO,wBACX,QACI,MApBoB,KCrCjBmB,EAtBC,WACZ,IAAMC,EAAYC,qBAAWd,GADX,EAEYe,oBAAS,GAFrB,mBAEXC,EAFW,KAEFC,EAFE,OAGgBF,mBAAS,oBAHzB,mBAGXhE,EAHW,KAGAmE,EAHA,KAmBlB,MAAO,CAACnE,EAdc,WACdiE,GACAE,EAAa,oBACbD,GAAW,KAEW,SAAlBJ,EAAUM,IACVD,EAAa,gBAEbA,EAAa,kBAEjBD,GAAW,OCfhB,SAASG,EAASC,EAAOC,GAC5B,KAAGD,EAAQ,GAAX,CAIAE,SAASC,eAAeH,EAAMI,YAAY1E,UAAYuE,EACtD,IAAMI,EAAM,CAAClE,KAAKC,MAAM4D,EAAQ/D,EAASO,SAAUwD,EAAQ/D,EAASO,SAEjEkC,EAAS3B,KAAKsD,UACN3B,EAAS3B,KAAKsD,GAChB3B,EAAS1B,OAAOqD,WACd3B,EAAS1B,OAAOqD,GAGxBJ,IAASpD,EAAcE,KACtB2B,EAAS3B,KAAKsD,IAAO,EAChBJ,IAASpD,EAAcG,OAC5B0B,EAAS1B,OAAOqD,IAAO,EAClBJ,IAASpD,EAAcK,MAC5BwB,EAASxB,MAAQmD,EACZJ,IAASpD,EAAcM,IAC5BuB,EAASvB,IAAMkD,EACVJ,IAASpD,EAAcI,KAC5ByB,EAASzB,KAAOoD,EACXJ,IAASpD,EAAcO,YACzBsB,EAASzB,KAAK,KAAOoD,EAAI,IAAM3B,EAASzB,KAAK,KAAOoD,EAAI,KACvD3B,EAASzB,MAAO,IC3B5B,SAASqD,EAAiBL,GACtB,OAAQA,GACJ,KAAKpD,EAAcC,IACf,OAAOD,EAAcO,WACzB,QACI,OAAOP,EAAcC,KAI1B,SAASyD,EAAe5D,EAAI6D,GAI/B,OAFgBN,SAASC,eAAexD,GAAIjB,WAGxC,KAAKmB,EAAcK,MACf,MAAO,CAAC+C,KAAMpD,EAAcK,MAAOsD,MAAOA,EAAMV,IAAI5C,MAAOuD,KAAM,GACrE,KAAK5D,EAAcM,IACf,MAAO,CAAC8C,KAAMpD,EAAcM,IAAKqD,MAAOA,EAAMV,IAAI3C,IAAKsD,KAAM,GACjE,KAAK5D,EAAcI,KACf,MAAO,CAACgD,KAAMpD,EAAcI,KAAMuD,MAAOA,EAAMV,IAAI7C,KAAMwD,KAAM,GACnE,KAAK5D,EAAcE,KACf,MAAO,CAACkD,KAAMpD,EAAcE,KAAM2D,MAAOJ,EAAiBzD,EAAcE,MAAO0D,KAAM,GACzF,KAAK5D,EAAcG,OACf,MAAO,CAACiD,KAAMpD,EAAcG,OAAQ0D,MAAOJ,EAAiBzD,EAAcG,QAASyD,KAAM,GAC7F,QACI,MAAO,CAACR,KAAMpD,EAAcO,WAAYsD,MAAO7D,EAAcC,IAAK2D,KAAM,IAK7E,SAASE,EAAmBhE,GAI/B,OAFgBuD,SAASC,eAAexD,GAAIjB,WAGxC,KAAKmB,EAAcK,MAEnB,KAAKL,EAAcM,IAEnB,KAAKN,EAAcI,KACf,OAAO,EACX,KAAKJ,EAAcE,KACf,OAAO,EACX,KAAKF,EAAcG,OACf,OAAO,EACX,QACI,OAAO,GC5CZ,SAAS4D,EAAUC,EAAKC,EAAOC,EAAOd,GAAkC,IAA5Be,EAA2B,uDAAN,KAC/DrE,GAAe,EAAXsE,GAAe,EAClBC,EAAeC,aAAY,WAC7B,GAAIJ,IAAUF,EAAIO,OACXnB,IAASpD,EAAcY,MACtBsC,EAASkB,EAAOpE,EAAca,WAEP,OAAvBsD,GACAA,IAEJK,cAAcH,OACZ,CACF,IAAMlB,EAAQa,EAAIE,GAAO,GAAK9E,EAASO,QAAUqE,EAAIE,GAAO,GACf,IAAzCJ,EAAmBX,EAAMI,cACtBH,IAASpD,EAAcY,MACtBwD,EAAQjB,EACRD,EAASpD,EAAIE,EAAca,WAC3BqC,EAASkB,EAAOpE,EAAcc,UAC9BhB,EAAKsE,GAELlB,EAASC,EAAOC,IAI5Bc,GAAS,IACVD,EAAQ,GAGR,SAASQ,EAAoBjE,EAAQJ,EAAMQ,EAAMqD,EAAOC,EAAOC,EAAoBO,GACtF,IAAMC,EAAsBL,aAAY,WACpC,GAAIJ,IAAU1D,EAAO+D,OACjBJ,EAAmB/D,EAAMQ,EAAMqD,EAAO,EAAGW,EAAeF,GACxDF,cAAcG,QAEd,IAAI,IAAIE,EAAI,EAAEA,EAAIrE,EAAO0D,GAAOK,OAAOM,IAAI,CACvC,IAAM1B,EAAQ3C,EAAO0D,GAAOW,GAAG,GAAKzF,EAASO,QAAUa,EAAO0D,GAAOW,GAAG,GAC3B,IAAzCf,EAAmBX,EAAMI,cACN,IAAhBnD,EAAKmE,OACJrB,EAASC,EAAOnD,EAAcQ,QAE9B0C,EAASC,EAAOnD,EAAcU,aAK9CwD,GAAS,IACVD,GAGA,SAASa,EAAgB1E,EAAMQ,EAAMqD,EAAOC,EAAOC,EAAoBO,GAC1E,IAAMK,EAAkBT,aAAY,WAChC,GAAIJ,IAAU9D,EAAKmE,OACfJ,EAAmBvD,EAAMqD,EAAO,EAAGS,GACnCF,cAAcO,QAEd,IAAI,IAAIF,EAAI,EAAEA,EAAIzE,EAAK8D,GAAOK,OAAOM,IAAI,CACrC,IAAM1B,EAAQ/C,EAAK8D,GAAOW,GAAG,GAAKzF,EAASO,QAAUS,EAAK8D,GAAOW,GAAG,GACvB,IAAzCf,EAAmBX,EAAMI,aACzBL,EAASC,EAAOnD,EAAcQ,QAI1C0D,GAAS,IACVD,GAGA,SAASW,EAAchE,EAAMqD,EAAOC,GAAmC,IAA5BC,EAA2B,uDAAN,KACnEJ,EAAUnD,EAAMqD,EAAOC,EAAOlE,EAAcY,KAAMuD,G,oBC7CvCa,E,WA1BX,aAAe,oBACXC,KAAKC,MAAQ,G,mDAGVC,GACHF,KAAKC,MAAME,KAAKD,K,gCAIhB,OAAIF,KAAKI,WAAmB,EACrBJ,KAAKC,MAAMI,U,gCAIlB,OAA6B,IAAtBL,KAAKC,MAAMX,S,kCAIlB,OAAOU,KAAKC,MAAMX,S,iCAIlB,OAAOU,KAAKC,U,KCmELK,E,WAzFX,aAAe,oBACXN,KAAKO,KAAO,GACZP,KAAKQ,MAAQ,E,gDAIbjC,EAAKkC,GACLT,KAAKO,KAAKhC,GAAOkC,EACjBT,KAAKQ,MAAQnG,KAAKqG,IAAIV,KAAKQ,MAAOC,K,0BAIlClC,GACA,OAAIA,KAAOyB,KAAKO,KACLP,KAAKO,KAAKhC,IAET,I,sCAKAoC,GACZ,KAAMA,KAAUX,KAAKO,MAAO,MAAO,GAEnC,IAAIK,EAAW,CAACD,GACZE,EAAIF,EAAO,GACXG,EAAIH,EAAO,GACXI,EAAU,IAAIC,IAGlB,IADAD,EAAQ/F,IAAI2F,EAAOrC,YACZ0B,KAAKQ,MAAQ,GAAG,CACnB,IAAIS,EAAOC,IACPC,EAAON,EACPO,EAAON,EAGP,CAACD,EAAI,EAAGC,KAAMd,KAAKO,OAAUQ,EAAQM,IAAI,CAACR,EAAI,EAAGC,GAAGxC,cAChD0B,KAAKO,KAAK,CAACM,EAAI,EAAGC,IAAMG,IACxBE,EAAON,EAAI,EACXO,EAAON,EACPG,EAAOjB,KAAKO,KAAK,CAACM,EAAI,EAAGC,KAE7BC,EAAQ/F,IAAI,CAAC6F,EAAI,EAAGC,GAAGxC,aAIvB,CAACuC,EAAGC,EAAI,KAAMd,KAAKO,OAAUQ,EAAQM,IAAI,CAACR,EAAGC,EAAI,GAAGxC,cAChD0B,KAAKO,KAAK,CAACM,EAAGC,EAAI,IAAMG,IACxBE,EAAON,EACPO,EAAON,EAAI,EACXG,EAAOjB,KAAKO,KAAK,CAACM,EAAGC,EAAI,KAE7BC,EAAQ/F,IAAI,CAAC6F,EAAGC,EAAI,GAAGxC,aAIvB,CAACuC,EAAI,EAAGC,KAAMd,KAAKO,OAAUQ,EAAQM,IAAI,CAACR,EAAI,EAAGC,GAAGxC,cAChD0B,KAAKO,KAAK,CAACM,EAAI,EAAGC,IAAMG,IACxBE,EAAON,EAAI,EACXO,EAAON,EACPG,EAAOjB,KAAKO,KAAK,CAACM,EAAI,EAAGC,KAE7BC,EAAQ/F,IAAI,CAAC6F,EAAI,EAAGC,GAAGxC,aAIvB,CAACuC,EAAGC,EAAI,KAAMd,KAAKO,OAAUQ,EAAQM,IAAI,CAACR,EAAGC,EAAI,GAAGxC,cAChD0B,KAAKO,KAAK,CAACM,EAAGC,EAAI,IAAMG,IACxBE,EAAON,EACPO,EAAON,EAAI,EACXG,EAAOjB,KAAKO,KAAK,CAACM,EAAGC,EAAI,KAE7BC,EAAQ/F,IAAI,CAAC6F,EAAGC,EAAI,GAAGxC,aAE3BuC,EAAIM,EACJL,EAAIM,EACJR,EAASU,QAAQ,CAACT,EAAGC,IACrBd,KAAKQ,MAAQS,EAEjB,OAAwB,IAApBL,EAAStB,OAAqB,GAC3BsB,I,8BAIPZ,KAAKO,KAAO,GACZP,KAAKQ,MAAQ,M,KCCNe,MAnFf,SAAaC,EAAexC,GAMxB,IALA,IAAIyC,EAAQ,IAAuB,IAAlB7E,EAASzB,KAAiB,EAAI,GAC3CuG,EAAgB,GAChBC,EAAc,GACdC,EAAkB,GAEbhC,EAAI,EAAGA,EAAI6B,EAAO7B,IAAK,CAC5B,IAAIiC,EAAa,GACXd,EAAU,IAAIC,IACdf,EAAQ,IAAIF,EACd+B,EAAW,IAAIxB,EACfyB,EAAiB,IAANnC,EAAUhD,EAASxB,MAAQwB,EAASzB,KAC/CwF,EAAe,IAANf,GAAW6B,EAAQ,EAAI7E,EAASzB,KAAOyB,EAASvB,IAK7D,IAHAyG,EAASE,IAAID,EAAU,GACvB9B,EAAMgC,OAAO,CAACF,EAAU,IACxBhB,EAAQ/F,IAAI+G,EAASzD,YACd2B,EAAMiC,YAAc,GAAG,CAC1B,IAAIC,EAAOlC,EAAMmC,UACbvB,EAAIsB,EAAK,GAAG,GACZrB,EAAIqB,EAAK,GAAG,GACZE,EAAQF,EAAK,GAAK,EAItB,GAFIE,EAAQR,EAAWvC,QAAQuC,EAAW1B,KAAK,IAE3C,CAACU,EAAGC,GAAGxC,aAAeqC,EAAOrC,WAAY,MAGzCwC,EAAI,GAAK,KAAO,CAACD,EAAGC,EAAI,KAAMlE,EAAS3B,QAAW8F,EAAQM,IAAI,CAACR,EAAGC,EAAI,GAAGxC,cACzE2B,EAAMgC,OAAO,CAAC,CAACpB,EAAGC,EAAI,GAAIuB,IAC1BR,EAAWQ,EAAQ,GAAGlC,KAAK,CAACU,EAAGC,EAAI,IACnCgB,EAASE,IAAI,CAACnB,EAAGC,EAAI,GAAIuB,GACzBtB,EAAQ/F,IAAI,CAAC6F,EAAGC,EAAI,GAAGxC,aAIvBuC,EAAI,GAAK,KAAO,CAACA,EAAI,EAAGC,KAAMlE,EAAS3B,QAAW8F,EAAQM,IAAI,CAACR,EAAI,EAAGC,GAAGxC,cACzE2B,EAAMgC,OAAO,CAAC,CAACpB,EAAI,EAAGC,GAAIuB,IAC1BR,EAAWQ,EAAQ,GAAGlC,KAAK,CAACU,EAAI,EAAGC,IACnCgB,EAASE,IAAI,CAACnB,EAAI,EAAGC,GAAIuB,GACzBtB,EAAQ/F,IAAI,CAAC6F,EAAI,EAAGC,GAAGxC,aAKvBwC,EAAI,EAAIlE,EAASlC,WAAa,CAACmG,EAAGC,EAAI,KAAMlE,EAAS3B,QAAW8F,EAAQM,IAAI,CAACR,EAAGC,EAAI,GAAGxC,cACvF2B,EAAMgC,OAAO,CAAC,CAACpB,EAAGC,EAAI,GAAIuB,IAC1BR,EAAWQ,EAAQ,GAAGlC,KAAK,CAACU,EAAGC,EAAI,IACnCgB,EAASE,IAAI,CAACnB,EAAGC,EAAI,GAAIuB,GACzBtB,EAAQ/F,IAAI,CAAC6F,EAAGC,EAAI,GAAGxC,aAKvBuC,EAAI,EAAIjE,EAASxC,WAAa,CAACyG,EAAI,EAAGC,KAAMlE,EAAS3B,QAAW8F,EAAQM,IAAI,CAACR,EAAI,EAAGC,GAAGxC,cACvF2B,EAAMgC,OAAO,CAAC,CAACpB,EAAI,EAAGC,GAAIuB,IAC1BR,EAAWQ,EAAQ,GAAGlC,KAAK,CAACU,EAAI,EAAGC,IACnCgB,EAASE,IAAI,CAACnB,EAAI,EAAGC,GAAIuB,GACzBtB,EAAQ/F,IAAI,CAAC6F,EAAI,EAAGC,GAAGxC,aAM/B,MAAiC,IAA1BwD,EAAS9D,IAAI2C,IAAkBkB,EAAWvC,OAASwC,EAAS9D,IAAI2C,IACnEkB,EAAWS,MAIf,IAAI1B,EAAWkB,EAASS,gBAAgB5B,GASxC,GAPU,IAANf,EACA8B,EAAgBA,EAAcc,OAAOX,GAErCF,EAAcA,EAAYa,OAAOX,GAErCD,EAAkBA,EAAgBY,OAAO5B,IAEX,IAA1BkB,EAAS9D,IAAI2C,GAAgB,MAGrCa,EAAcE,EAAeE,EAAiB5C,EAAO2C,ICpC1Cc,MA9Cf,SAAajB,EAAexC,GACxB,IAAI0C,EAAgB,GAChBC,EAAc,GACdC,EAAkB,GAGtB,SAASc,EAAM7B,EAAGC,EAAGH,EAAQI,EAAS4B,EAAWb,EAAUc,GACvD,QAAI/B,EAAI,GAAKC,EAAI,GAAKD,GAAKjE,EAASxC,SAAW0G,GAAKlE,EAASlC,SAAW,CAACmG,EAAGC,KAAMlE,EAAS3B,MAAQ8F,EAAQM,IAAI,CAACR,EAAGC,GAAGxC,eAItHyC,EAAQ/F,IAAI,CAAC6F,EAAGC,GAAGxC,YACnBqE,EAAUxC,KAAK,CAAC,CAACU,EAAGC,KACpBgB,EAASE,IAAI,CAACnB,EAAGC,GAAI8B,GAEjB,CAAC/B,EAAGC,GAAGxC,aAAeqC,EAAOrC,eAG7BoE,EAAM7B,EAAI,EAAGC,EAAGH,EAAQI,EAAS4B,EAAWb,EAAUc,EAAQ,OAG9DF,EAAM7B,EAAGC,EAAI,EAAGH,EAAQI,EAAS4B,EAAWb,EAAUc,EAAQ,OAG9DF,EAAM7B,EAAI,EAAGC,EAAGH,EAAQI,EAAS4B,EAAWb,EAAUc,EAAQ,OAG9DF,EAAM7B,EAAGC,EAAI,EAAGH,EAAQI,EAAS4B,EAAWb,EAAUc,EAAQ,SAAlE,OAIJ,IAAM7B,EAAU,IAAIC,IACdc,EAAW,IAAIxB,EACjBlF,EAAQwB,EAASxB,OACC,IAAlBwB,EAASzB,OACTuH,EAAMtH,EAAM,GAAIA,EAAM,GAAIwB,EAASzB,KAAM4F,EAASW,EAAeI,EAAU,GAC3E1G,EAAQwB,EAASzB,KACjByG,EAAkBA,EAAgBY,OAAOV,EAASS,gBAAgB3F,EAASzB,OAC3E2G,EAASe,QACT9B,EAAQ8B,SAEZH,EAAMtH,EAAM,GAAIA,EAAM,GAAIwB,EAASvB,IAAK0F,EAASY,EAAaG,EAAU,GAExEN,EAAcE,EADdE,EAAkBA,EAAgBY,OAAOV,EAASS,gBAAgB3F,EAASvB,MAC7B2D,EAAO2C,I,iBC3BzD,SAASmB,EAAWf,EAAUpB,EAAQkB,GAUlC,IAAIjC,EAAGmD,EACHC,EAAU,GACd,IAAKpD,EAAI,EAAGA,EAAIhD,EAASxC,QAASwF,IAC9B,IAAKmD,EAAI,EAAGA,EAAInG,EAASlC,QAASqI,IAC9BC,EAAQ,CAACpD,EAAGmD,IAAM,EAI1B,IAAIE,EAAwB,IAAIC,IAAc,OAC1CC,EAAQ,GAIZ,IAAKvD,EAAI,EAAGA,EAAIhD,EAASxC,QAASwF,IAC9B,IAAKmD,EAAI,EAAGA,EAAInG,EAASlC,QAASqI,IAAK,CAEnCI,EADU,CAACvD,EAAGmD,IACD,CAAC7B,IAAU,MAGhCiC,EAAMpB,GAAY,CAAC,EAAG,MACtBkB,EAAsBG,QAAQrB,EAAU,GAIxC,IAAIsB,GAAa,EACbtC,EAAU,IAAIC,IAClBD,EAAQ/F,IAAI+G,EAASzD,YACrBuD,EAAW1B,KAAK,CAAC4B,IAGjB,IAAK,IAAIuB,EAAI,EAAGA,EAAI1G,EAASxC,QAAUwC,EAASlC,SAEP,IAAjCuI,EAAsBrI,OAF2B0I,IAAK,CAG1D,IAAIC,EAASN,EAAsBO,UAoCnC,GAxBA,CANSD,EAAO,GAAK,GAAK,EAAI,CAACA,EAAO,GAAK,EAAGA,EAAO,IAAM,KAC/CA,EAAO,GAAK,EAAI3G,EAASlC,QAAU,CAAC6I,EAAO,GAAIA,EAAO,GAAK,GAAK,KACjEA,EAAO,GAAK,EAAI3G,EAASxC,QAAU,CAACmJ,EAAO,GAAK,EAAGA,EAAO,IAAM,KAChEA,EAAO,GAAK,GAAK,EAAI,CAACA,EAAO,GAAIA,EAAO,GAAK,GAAK,MAGrCE,SAAQ,SAAAC,GAC5B,GAAKA,IAAWL,KAAcK,KAAW9G,EAAS3B,QAG9C8F,EAAQM,IAAIqC,EAAQpF,YAAxB,CAIIyC,EAAQ/F,IAAI0I,EAAQpF,YACpBuD,EAAW1B,KAAK,CAACuD,IAGrB,IAAIC,EAAMR,EAAMI,GAAQ,GAAKP,EAAQU,GACjCC,EAAMR,EAAMO,GAAS,KACrBP,EAAMO,GAAS,GAAKC,EACpBR,EAAMO,GAAS,GAAKH,GAGxBN,EAAsBG,QAAQM,EAASP,EAAMO,GAAS,IAClDA,EAAQpF,aAAeqC,EAAOrC,aAC9B+E,GAAa,OAIjBA,EACA,MAMR,IAAIO,EAAkB,GACtB,GAAIP,EAEA,IADAE,EAAS5C,EACF4C,GACHK,EAAgBtC,QAAQiC,GACxBA,EAASJ,EAAMI,GAAQ,GAI/B,OADAM,QAAQC,IAAIF,GACLA,EAGIG,OAlHf,SAAkBvC,EAAexC,GAC7B,IAAI0C,EAAgB,GAChBC,EAAc,GACdC,EAAkB,GAStBJ,EAAcE,EALVE,EAFAhF,EAASzB,MACTyG,EAAkBA,EAAgBY,OAAOM,EAAWlG,EAASxB,MAAOwB,EAASzB,KAAMuG,KACjDc,OAAOM,EAAWlG,EAASzB,KAAMyB,EAASvB,IAAKsG,IAE/DC,EAAgBY,OAAOM,EAAWlG,EAASxB,MAAOwB,EAASvB,IAAKqG,IAGxC1C,EAAO2C,ICVlD,SAASqC,GAAYC,EAAOC,EAAWC,EAAWnF,GAErD,OADAkF,GAAU,GACFC,EAAUnG,KACd,IAAK,qBACD+F,GAASE,EAAOjF,EAAMhB,IAAI,IAC1B,MACJ,IAAK,kBAEL,IAAK,8BAEL,IAAK,kBAEL,IAAK,6BAEL,IAAK,+BACD,MACJ,IAAK,0BACDuD,EAAI0C,EAAOjF,EAAMhB,IAAI,IACrB,MACJ,IAAK,wBACDyE,EAAIwB,EAAOjF,EAAMhB,IAAI,KCuGlBoG,OAvHf,WAAwB,IAAD,EACK,CAACzG,qBAAW1B,GAAe0B,qBAAWjB,IAAvDgC,EADY,KACL2F,EADK,OAEyB,CAAC1G,qBAAWJ,GAAmBI,qBAAWV,GAAcU,qBAAWP,GAAeO,qBAAWd,IAAlIsH,EAFY,KAEDhJ,EAFC,KAEK6D,EAFL,KAEYtB,EAFZ,KAGf4G,GAAY,EAEVL,EAAQ,SAAC1I,EAAQI,EAAMqD,GAAsB,IAAf7D,EAAc,uDAAP,GACvC,GAAIkJ,EAAOrG,KAAOsG,EAAW,CACzB,IAAK,IAAI1E,EAAI,EAAGA,EAAIrE,EAAO+D,OAAQM,IAC/B,IAAK,IAAImD,EAAI,EAAGA,EAAIxH,EAAOqE,GAAGN,OAAQyD,IAAK,CACvC,IAAM7E,EAAQ3C,EAAOqE,GAAGmD,GAAG,GAAK5I,EAASO,QAAUa,EAAOqE,GAAGmD,GAAG,GAC5DtE,EAAeP,EAAMI,WAAYI,GAAOC,OACrB,IAAhBxD,EAAKmE,OACJrB,EAASC,EAAOnD,EAAcS,aAE9ByC,EAASC,EAAOnD,EAAcW,kBAK9C,IAAKkE,EAAI,EAAGA,EAAIzE,EAAKmE,OAAQM,IACzB,IAAKmD,EAAI,EAAGA,EAAI5H,EAAKyE,GAAGN,OAAQyD,IAAK,CACjC,IAAM7E,EAAQ/C,EAAKyE,GAAGmD,GAAG,GAAK5I,EAASO,QAAUS,EAAKyE,GAAGmD,GAAG,GACxDtE,EAAeP,EAAMI,WAAYI,GAAOC,MACxCV,EAASC,EAAOnD,EAAcS,aAI1C,IAAKoE,EAAI,EAAGA,EAAIjE,EAAK2D,OAAQM,IAAK,CAC9B,IAAM1B,EAAQvC,EAAKiE,GAAG,GAAKzF,EAASO,QAAUiB,EAAKiE,GAAG,GAClDnB,EAAeP,EAAMI,WAAYI,GAAOC,MACxCV,EAASC,EAAOnD,EAAca,iBAKtC8B,EAAUsE,IAAI,WACdqC,EAAOrC,IAAI,QACXsC,GAAY,EACZT,QAAQC,IAAI,SACZtE,EAAoBjE,EAAQJ,EAAMQ,EAAMqD,EAAO,EAAGa,GAAiB,kBAAMnC,EAAUsE,IAAI,YAmDzFkC,EAAY,WAAmB,IAAlBK,IAAiB,yDAChCV,QAAQC,IAAI,aACRS,IACAF,EAAOrC,IAAI,SACXsC,GAAY,GAEhB,IAAK,IAAI1E,EAAI,EAAGA,EAAIzF,EAASC,QAAUD,EAASO,QAASkF,IAAK,CAC1D,IAAM4E,EAAOpG,SAASC,eAAeuB,EAAEtB,YAAY1E,UAC/C4K,IAASzJ,EAAcQ,QAAUiJ,IAASzJ,EAAcS,aAAegJ,IAASzJ,EAAcU,YAAc+I,IAASzJ,EAAcW,iBAAmB8I,IAASzJ,EAAcY,MAAQ6I,IAASzJ,EAAca,WAC5MqC,EAAS2B,EAAG7E,EAAcO,cAiBtC,MAAO,CAAE2I,QAAOQ,QApEA,WACZZ,QAAQC,IAAI,UAAYO,EAAOrG,KAC/B,IAAME,EAAQ7D,KAAKC,MAAMH,EAASC,QAAU,GAAKD,EAASO,QAAUL,KAAKC,MAAMH,EAASO,QAAU,GAE7C,IAAjD+D,EAAeP,EAAMI,WAAYI,GAAOC,OAI5CxD,EAAK6G,IAAI,QACT/D,EAASC,EAAMI,WAAYvD,EAAcI,MAErCkJ,EAAOrG,KACPgG,GAAYC,EAAOC,EAAWC,EAAWnF,KAwDxB0F,WApDN,WACfb,QAAQC,IAAI,cACZ,IAAK,IAAIlE,EAAI,EAAGA,EAAIzF,EAASC,QAAUD,EAASO,QAASkF,IACrD,GAAIxB,SAASC,eAAeuB,EAAEtB,YAAY1E,YAAcmB,EAAcI,KAAM,CACxE8C,EAAS2B,EAAG7E,EAAcO,YAC1B,MAGRH,EAAK6G,IAAI,SAELqC,EAAOrG,KACPgG,GAAYC,EAAOC,EAAWC,EAAWnF,IAyCZ2F,WArClB,WACfd,QAAQC,IAAI,aACZ,IAAK,IAAIlE,EAAI,EAAGA,EAAIzF,EAASC,QAAUD,EAASO,QAASkF,IACjDxB,SAASC,eAAeuB,EAAEtB,YAAY1E,YAAcmB,EAAcE,MAClEgD,EAAS2B,EAAG7E,EAAcO,YAGlCoD,EAAMsD,IAAI,IACVkC,KA6B6CA,YAAWU,WAZzC,WACff,QAAQC,IAAI,cACZO,EAAOrC,IAAI,SACX,IAAK,IAAIpC,EAAI,EAAGA,EAAIzF,EAASC,QAAUD,EAASO,QAASkF,IACrD3B,EAAS2B,EAAG7E,EAAcO,YAE9B2C,EAAS5D,KAAKC,MAAMH,EAASC,QAAU,GAAKD,EAASO,QAAUL,KAAKC,MAAMH,EAASO,QAAU,GAAIK,EAAcK,OAC/G6C,EAAS5D,KAAKC,MAAMH,EAASC,QAAU,EAAI,GAAKD,EAASO,QAAUL,KAAKC,MAAMH,EAASO,QAAU,GAAIK,EAAcM,KACnHqD,EAAMsD,IAAI,IACV7G,EAAK6G,IAAI,UAG2D6C,WAzErD,SAACC,EAAM9F,GACtBtB,EAAUsE,IAAI,WPsBf,SAAuB8C,EAAM9F,EAAOC,GAAmC,IAA5BC,EAA2B,uDAAN,KACnEJ,EAAUgG,EAAM9F,EAAOC,EAAOlE,EAAcE,KAAMiE,GOtB9C6F,CAAcD,EAAM9F,EAAO,GAAG,kBAAMtB,EAAUsE,IAAI,cCa3CgD,OA7Df,WACI,IAAMC,EAActH,qBAAWJ,GACzBG,EAAYC,qBAAWd,GAFJ,EAGUY,IAHV,mBAGlB7D,EAHkB,KAGPsL,EAHO,KAInBC,EAAcf,KAuCpB,OACI,cAACgB,EAAA,EAAIC,KAAL,UACI,eAACC,EAAA,EAAD,CAAaC,GAAI,EAAGC,MAAO,sBAAM5L,UAAWA,EAAjB,wBAA+CiB,GAAG,oBAAoB4K,SAAU,SAACC,GAAD,OAvClF,SAACA,GAE9B,GAAsB,SAAlBhI,EAAUM,IAId,OAAQ0H,GACJ,IAAK,qBACDT,EAAYjD,IAAI,sBAChB,MACJ,IAAK,kBACDiD,EAAYjD,IAAI,mBAChB,MACJ,IAAK,8BACDiD,EAAYjD,IAAI,+BAChB,MACJ,IAAK,kBACDiD,EAAYjD,IAAI,mBAChB,MACJ,IAAK,6BACDiD,EAAYjD,IAAI,8BAChB,MACJ,IAAK,+BACDmD,EAAYT,aACZO,EAAYjD,IAAI,gCAChB,MACJ,IAAK,0BACDiD,EAAYjD,IAAI,2BAChB,MACJ,IAAK,wBACDiD,EAAYjD,IAAI,0BASqG2D,CAAyBD,IAC9IE,aAAcV,EAAeW,aAAcX,EAD/C,UAGI,cAACI,EAAA,EAAYD,KAAb,CAAkBK,SAAS,qBAA3B,kCACA,cAACJ,EAAA,EAAYD,KAAb,CAAkBK,SAAS,kBAA3B,uBACA,cAACJ,EAAA,EAAYD,KAAb,CAAkBK,SAAS,8BAA3B,sCACA,cAACJ,EAAA,EAAYD,KAAb,CAAkBK,SAAS,kBAA3B,6BACA,cAACJ,EAAA,EAAYD,KAAb,CAAkBK,SAAS,6BAA3B,wCACA,cAACJ,EAAA,EAAYD,KAAb,CAAkBK,SAAS,+BAA3B,2CACA,cAACJ,EAAA,EAAYD,KAAb,CAAkBK,SAAS,0BAA3B,kCACA,cAACJ,EAAA,EAAYD,KAAb,CAAkBK,SAAS,wBAA3B,sCCnCDI,OAxBf,WAKI,IAJA,IAAIC,EAAQ,GACRC,GAAW,EACXnF,EAAIjE,EAASxC,QAER0G,EAAI,EAAGA,EAAIlE,EAASlC,QAASoG,IAC9BkF,IACAnF,EACQ,IACJmF,GAAW,EACXnF,EAAI,KAGRA,GACSjE,EAASxC,UACd4L,GAAW,EACXnF,EAAIjE,EAASxC,QAAU,GAG/B2L,EAAM5F,KAAK,CAACU,EAAGC,IAEnB,OAAOiF,GCpBEE,GAAe,WACxB,IAAIF,EAAQ,GACRG,EAAU,IAAIlF,IACdH,EAAI,EACJC,EAAI,EAGJ6C,EAAM/G,EAASlC,QAAU,EAC7B,IAAKoG,EAAI,EAAGA,GAAK6C,EAAK7C,IAClBiF,EAAM5F,KAAK,CAAC,EAAGW,IACfiF,EAAM5F,KAAK,CAAC,EAAGwD,IACfuC,EAAQlL,IAAI,CAAC,EAAG8F,GAAGxC,YACnB4H,EAAQlL,IAAI,CAAC,EAAG2I,GAAKrF,YACrBqF,IAGJ,IAAK9C,EAAI,EAAGA,EAAIjE,EAASxC,QAASyG,IAC9BkF,EAAM5F,KAAK,CAACU,EAAG,IACfkF,EAAM5F,KAAK,CAACU,EAAGjE,EAASlC,QAAU,IAClCwL,EAAQlL,IAAI,CAAC6F,EAAG,GAAGvC,YACnB4H,EAAQlL,IAAI,CAAC6F,EAAGjE,EAASlC,QAAU,GAAG4D,YAK1C,IADAqF,EAAM/G,EAASlC,QAAU,EACpBoG,EAAI,EAAGA,GAAK6C,EAAK7C,IAClBiF,EAAM5F,KAAK,CAACvD,EAASxC,QAAU,EAAG0G,IAClCiF,EAAM5F,KAAK,CAACvD,EAASxC,QAAU,EAAGuJ,IAClCuC,EAAQlL,IAAI,CAAC4B,EAASxC,QAAU,EAAG0G,GAAGxC,YACtC4H,EAAQlL,IAAI,CAAC4B,EAASxC,QAAU,EAAGuJ,GAAKrF,YACxCqF,IAEJ,OAAOoC,GCSII,OAzCf,WACI,IAAIJ,EAAQE,KACRC,EAAU,IAAIlF,IACdH,EAAI,EACJC,EAAI,EAIR,IAAKD,EAAI,EAAGA,GAAKjE,EAASxC,QAAU,EAAGyG,GAAK,EACxC,IAAKC,EAAI,EAAGA,GAAKlE,EAASlC,QAAU,EAAGoG,GAAK,EAAG,CAC3C,GAAIoF,EAAQ7E,IAAI,CAACR,EAAI,EAAGC,GAAGxC,aAAe4H,EAAQ7E,IAAI,CAACR,EAAGC,EAAI,GAAGxC,YAE7D,OADiBjE,KAAKC,MAAsB,EAAhBD,KAAK+L,UAAgB,GAE7C,KAAK,EACDL,EAAM5F,KAAK,CAACU,EAAI,EAAGC,IACnBoF,EAAQlL,IAAI,CAAC6F,EAAI,EAAGC,GAAGxC,YACvB,MACJ,KAAK,EACDyH,EAAM5F,KAAK,CAACU,EAAGC,EAAI,IACnBoF,EAAQlL,IAAI,CAAC6F,EAAGC,EAAI,GAAGxC,iBAKxB4H,EAAQ7E,IAAI,CAACR,EAAI,EAAGC,GAAGxC,aAC9ByH,EAAM5F,KAAK,CAACU,EAAI,EAAGC,IACnBoF,EAAQlL,IAAI,CAAC6F,EAAI,EAAGC,GAAGxC,aAChB4H,EAAQ7E,IAAI,CAACR,EAAGC,EAAI,GAAGxC,aAC9ByH,EAAM5F,KAAK,CAACU,EAAGC,EAAI,IACnBoF,EAAQlL,IAAI,CAAC6F,EAAGC,EAAI,GAAGxC,aAEvBuF,QAAQC,IAAI,oCAEhBiC,EAAM5F,KAAK,CAACU,EAAGC,IACfoF,EAAQlL,IAAI,CAAC6F,EAAGC,GAAGxC,YAI3B,OAAOyH,GCtCLM,GACU,EADVA,GAEQ,EAcd,SAASC,GAAoBzF,EAAGC,EAAG/G,EAAOC,EAAQ+L,GAG9C,KAAIhM,EAAQ,GAAKC,EAAS,GAA1B,CAKA,IAKIuM,EACJ,IALIxM,EAAQC,EAAuBqM,GAC1BtM,EAAQC,EAAuBqM,GACpBhM,KAAKmM,MAAMnM,KAAK+L,aAGfC,GAAsB,CAKvC,IAAII,EAAU5F,EAAI,EAAI6F,GAAc1M,EAAS,GAI7CuM,EAAOzF,EAAI,EAAI4F,GAAc3M,EAAQ,GAGrC,IAAK,IAAI4M,EAAK7F,EAAG6F,EAAK7F,EAAI/G,EAAO4M,IACzBA,IAAOJ,GACPR,EAAM5F,KAAK,CAACsG,EAASE,IAK7BL,GAAoBzF,EAAGC,EAAG/G,EAAO0M,EAAU5F,EAAGkF,GAG9CO,GAAoBG,EAAS3F,EAAG/G,EAAOC,GAAUyM,EAAU5F,GAAIkF,OAC5D,CAEH,IAAIa,EAAU9F,EAAI,EAAI4F,GAAc3M,EAAQ,GAC5CwM,EAAO1F,EAAI,EAAI6F,GAAc1M,EAAS,GAEtC,IAAK,IAAI6M,EAAKhG,EAAGgG,EAAKhG,EAAI7G,EAAQ6M,IAC1BA,IAAON,GACPR,EAAM5F,KAAK,CAAC0G,EAAID,IAIxBN,GAAoBzF,EAAGC,EAAG8F,EAAU9F,EAAG9G,EAAQ+L,GAC/CO,GAAoBzF,EAAG+F,EAAS7M,GAAS6M,EAAU9F,GAAI9G,EAAQ+L,KAKvE,SAASW,GAAcI,GACnB,OAA2C,EAApCzM,KAAKC,MAAMD,KAAK+L,SAAWU,EAAI,GAG3BC,OArEf,WACI,IAAIhB,EAAQE,KAEZ,OADAK,GAAoB,EAAG,EAAG1J,EAASlC,QAASkC,EAASxC,QAAS2L,GACvDA,GCRLM,GACU,EADVA,GAEQ,EAcd,SAASC,GAAoBzF,EAAGC,EAAG/G,EAAOC,EAAQ+L,EAAOiB,GAGrD,KAAIjN,EAAQ,GAAKC,EAAS,GAA1B,CAKA,IAIIuM,EACJ,IAJIS,EAA8BX,GACdA,MAGCA,GAAsB,CAKvC,IAAII,EAAU5F,EAAI,EAAI6F,GAAc1M,EAAS,GAI7CuM,EAAOzF,EAAI,EAAI4F,GAAc3M,EAAQ,GAGrC,IAAK,IAAI4M,EAAK7F,EAAG6F,EAAK7F,EAAI/G,EAAO4M,IACzBA,IAAOJ,GACPR,EAAM5F,KAAK,CAACsG,EAASE,IAK7BL,GAAoBzF,EAAGC,EAAG/G,EAAO0M,EAAU5F,EAAGkF,GAAO,GAGrDO,GAAoBG,EAAS3F,EAAG/G,EAAOC,GAAUyM,EAAU5F,GAAIkF,GAAO,OACnE,CAEH,IAAIa,EAAU9F,EAAI,EAAI4F,GAAc3M,EAAQ,GAC5CwM,EAAO1F,EAAI,EAAI6F,GAAc1M,EAAS,GAEtC,IAAK,IAAI6M,EAAKhG,EAAGgG,EAAKhG,EAAI7G,EAAQ6M,IAC1BA,IAAON,GACPR,EAAM5F,KAAK,CAAC0G,EAAID,IAIxBN,GAAoBzF,EAAGC,EAAG8F,EAAU9F,EAAG9G,EAAQ+L,GAAO,GACtDO,GAAoBzF,EAAG+F,EAAS7M,GAAS6M,EAAU9F,GAAI9G,EAAQ+L,GAAO,KAK9E,SAASW,GAAcI,GACnB,OAA2C,EAApCzM,KAAKC,MAAMD,KAAK+L,SAAWU,EAAI,GAG3BG,OApEf,WACI,IAAIlB,EAAQE,KAKZ,OADAK,GAAoB,EAAG,EAAG1J,EAASlC,QAASkC,EAASxC,QAAS2L,GAAO,GAC9DA,GCXLM,GACU,EADVA,GAEQ,EAed,SAASC,GAAoBzF,EAAGC,EAAG/G,EAAOC,EAAQ+L,EAAOiB,GAGrD,KAAIjN,EAAQ,GAAKC,EAAS,GAA1B,CAKA,IAIIuM,EACJ,IAJIS,EAA8BX,GACdA,MAGCA,GAAsB,CAKvC,IAAII,EAAU5F,EAAI,EAAI6F,GAAc1M,EAAS,GAI7CuM,EAAOzF,EAAI,EAAI4F,GAAc3M,EAAQ,GAGrC,IAAK,IAAI4M,EAAK7F,EAAG6F,EAAK7F,EAAI/G,EAAO4M,IACzBA,IAAOJ,GACPR,EAAM5F,KAAK,CAACsG,EAASE,IAK7BL,GAAoBzF,EAAGC,EAAG/G,EAAO0M,EAAU5F,EAAGkF,GAAO,GAGrDO,GAAoBG,EAAS3F,EAAG/G,EAAOC,GAAUyM,EAAU5F,GAAIkF,GAAO,OACnE,CAEH,IAAIa,EAAU9F,EAAI,EAAI4F,GAAc3M,EAAQ,GAC5CwM,EAAO1F,EAAI,EAAI6F,GAAc1M,EAAS,GAEtC,IAAK,IAAI6M,EAAKhG,EAAGgG,EAAKhG,EAAI7G,EAAQ6M,IAC1BA,IAAON,GACPR,EAAM5F,KAAK,CAAC0G,EAAID,IAIxBN,GAAoBzF,EAAGC,EAAG8F,EAAU9F,EAAG9G,EAAQ+L,GAAO,GACtDO,GAAoBzF,EAAG+F,EAAS7M,GAAS6M,EAAU9F,GAAI9G,EAAQ+L,GAAO,KAK9E,SAASW,GAAcI,GACnB,OAA2C,EAApCzM,KAAKC,MAAMD,KAAK+L,SAAWU,EAAI,GAG3BI,OArEf,WACI,IAAInB,EAAQE,KAKZ,OADAK,GAAoB,EAAG,EAAG1J,EAASlC,QAASkC,EAASxC,QAAS2L,GAAO,GAC9DA,GCoDIoB,OAvDf,WACI,IAAMzJ,EAAYC,qBAAWd,GADT,EAEeY,IAFf,mBAEb7D,EAFa,KAEFsL,EAFE,KAGdC,EAAcf,KAmCpB,OACI,cAACgB,EAAA,EAAIC,KAAL,UACI,eAACC,EAAA,EAAD,CAAaC,GAAI,EAAGC,MAAO,sBAAM5L,UAAWA,EAAjB,8BAAqDiB,GAAG,eAAe4K,SAlC9E,SAACC,GACzB,GAAsB,SAAlBhI,EAAUM,IAKd,OAFAmH,EAAYjB,YACZiB,EAAYR,aACJe,GACJ,IAAK,0BACDP,EAAYN,WAAWkC,KAVrB,IAWF,MACJ,IAAK,mCACD5B,EAAYN,WAAWqC,KAbrB,IAcF,MACJ,IAAK,qCACD/B,EAAYN,WAAWoC,KAhBrB,IAiBF,MACJ,IAAK,oBACD,MACJ,IAAK,yBACDG,MAAM,0BACN,MACJ,IAAK,4BACDjC,EAAYN,WAAWiB,KAxBrB,IAyBF,MACJ,IAAK,mBACDX,EAAYN,WAAWsB,KA3BrB,MAqCFP,aAAcV,EAAeW,aAAcX,EAD/C,UAGI,cAACI,EAAA,EAAYD,KAAb,CAAkBK,SAAS,0BAA3B,gCACA,cAACJ,EAAA,EAAYD,KAAb,CAAkBK,SAAS,mCAA3B,+CACA,cAACJ,EAAA,EAAYD,KAAb,CAAkBK,SAAS,qCAA3B,iDACA,cAACJ,EAAA,EAAYD,KAAb,CAAkBK,SAAS,oBAA3B,+BACA,cAACJ,EAAA,EAAYD,KAAb,CAAkBK,SAAS,yBAA3B,+BACA,cAACJ,EAAA,EAAYD,KAAb,CAAkBK,SAAS,4BAA3B,kCACA,cAACJ,EAAA,EAAYD,KAAb,CAAkBK,SAAS,mBAA3B,yCClCD2B,OArBf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAAY,EACM3J,mBAAS,GADf,mBAC3B4J,EAD2B,KACbC,EADa,KAE5B/J,EAAYC,qBAAWd,GAFK,EAGCY,IAHD,mBAG3B7D,EAH2B,KAGhBsL,EAHgB,KAclC,OACI,cAACE,EAAA,EAAIC,KAAL,CAAUE,GAAI,EAAd,SACI,cAACH,EAAA,EAAIsC,KAAL,CAAUC,QAXG,WACK,SAAlBjK,EAAUM,MAIdyJ,GAAgB,SAAAG,GAAe,OAAKA,EAAkB,GAAKL,EAASjI,UACpEiI,EAASC,OAK4B5N,UAAWA,EAAWgM,aAAcV,EAAeW,aAAcX,EAAlG,SAAkHoC,EAAME,QCMrH/J,GAvBC,WACZ,IAAMC,EAAYC,qBAAWd,GACvBgL,EAAalK,qBAAWJ,GAFZ,EAGYK,oBAAS,GAHrB,mBAGXC,EAHW,KAGFC,EAHE,OAIgBF,mBAAS,oBAJzB,mBAIXhE,EAJW,KAIAmE,EAJA,KAoBlB,MAAO,CAACnE,EAdc,WACdiE,GACAE,EAAa,oBACbD,GAAW,KAEW,SAAlBJ,EAAUM,KAAqC,KAAnB6J,EAAW7J,KAAiC,iCAAnB6J,EAAW7J,IAChED,EAAa,gBAEbA,EAAa,kBAEjBD,GAAW,OC8BRgK,OA5Cf,YAA0C,IAApBR,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAAY,EACG3J,mBAAS,GADZ,mBAC9B4J,EAD8B,KAChBC,EADgB,KAE/BtM,EAAOwC,qBAAWV,GAClBS,EAAYC,qBAAWd,GACvBoI,EAActH,qBAAWJ,GAJM,EAKFE,KALE,mBAK9B7D,EAL8B,KAKnBsL,EALmB,KAM/B6C,ECVa,WACnB,IAAMA,EAAUC,kBAAO,GAMvB,OAJAC,qBAAU,WACNF,EAAQG,SAAU,IACnB,IAEIH,EAAQG,QDGCC,GA+BhB,OA7BAF,qBAAU,WACFF,KAEa,IAAb5M,EAAK6C,IACLyJ,EAAgB,GAEhBA,EAAgB,MAIrB,CAACtM,IAEJ8M,qBAAU,cAIP,CAACT,IAcA,cAACpC,EAAA,EAAIC,KAAL,CAAUE,GAAI,EAAd,SACI,cAACH,EAAA,EAAIsC,KAAL,CAAUC,QAbG,WACbI,GAEkB,SAAlBrK,EAAUM,KAAsC,KAApBiH,EAAYjH,KAAkC,iCAApBiH,EAAYjH,KAItEuJ,EAASC,MAM4B5N,UAAWA,EAAWgM,aAAcV,EAAeW,aAAcX,EAAlG,SAAkHoC,EAAME,Q,SE+DrHY,GAnGG,WAAO,IAAD,EAEgBxK,mBAAS,eAFzB,mBAEbyK,EAFa,KAEDC,EAFC,OAGc1K,mBAAS,IAHvB,mBAGb2K,EAHa,KAGFC,EAHE,KAIdvD,EAActH,qBAAWJ,GACzBG,EAAYC,qBAAWd,GACvBmC,EAAQrB,qBAAWP,GACnB+H,EAAcf,KAEpB6D,qBAAU,WACNO,EAAa,aACd,IAEHP,qBAAU,WACN,IAAIQ,EAAW,GACf,OAAQxD,EAAYjH,KAChB,IAAK,qBACDyK,EAAW,aACX,MACJ,IAAK,kBACDA,EAAW,KACX,MACJ,IAAK,8BACDA,EAAW,SACX,MACJ,IAAK,kBACDA,EAAW,QACX,MACJ,IAAK,6BACDA,EAAW,mBACX,MACJ,IAAK,+BACDA,EAAW,qBACX,MACJ,IAAK,0BACDA,EAAW,MACX,MACJ,IAAK,wBACDA,EAAW,MACX,MACJ,QACIA,EAAW,GAGnBH,EAAc,aAAD,OAAcG,EAAd,QAEd,CAACxD,EAAYjH,MAEhBiK,qBAAU,WACgB,YAAlBvK,EAAUM,IACVwK,EAAa,UAEbA,EAAa,aAElB,CAAC9K,EAAUM,MAsCd,OACI,cAACoH,EAAA,EAAIC,KAAL,CAAUE,GAAI,EAAd,SACI,cAACmD,GAAA,EAAD,CAAQ7N,GAAG,YAAYZ,QAASsO,EAAW3N,KAAK,KAAK+M,QArC7C,WACZ,GAAsB,SAAlBjK,EAAUM,IAId,GAAwB,KAApBiH,EAAYjH,IACZsK,EAAc,0BAGd,OADAnD,EAAYjB,YACJe,EAAYjH,KAChB,IAAK,qBACD+F,GAASoB,EAAYlB,MAAOjF,EAAMhB,IAAI,IACtC,MACJ,IAAK,kBAEL,IAAK,8BAEL,IAAK,kBAEL,IAAK,6BAEL,IAAK,+BACD,MACJ,IAAK,0BACDuD,EAAI4D,EAAYlB,MAAOjF,EAAMhB,IAAI,IACjC,MACJ,IAAK,wBACDyE,EAAI0C,EAAYlB,MAAOjF,EAAMhB,IAAI,MAUzC,SAAwEqK,OC7ErEM,OArBf,YAA6C,IAApBrB,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAAY,EACA3J,mBAAS,GADT,mBACjC4J,EADiC,KACnBC,EADmB,KAElC/J,EAAYC,qBAAWd,GAFW,EAGLY,IAHK,mBAGjC7D,EAHiC,KAGtBsL,EAHsB,KAcxC,OACI,cAACE,EAAA,EAAIC,KAAL,CAAUE,GAAI,EAAd,SACI,cAACH,EAAA,EAAIsC,KAAL,CAAUC,QAXG,WACK,SAAlBjK,EAAUM,MAIdyJ,GAAgB,SAAAG,GAAe,OAAKA,EAAkB,GAAKL,EAASjI,UACpEiI,EAASC,OAK4B5N,UAAWA,EAAWgM,aAAcV,EAAeW,aAAcX,EAAlG,SAAkHoC,EAAME,QC2BrHoB,OA1Cf,WAA0B,IAAD,EACKhL,mBAAS,WADd,mBACd4H,EADc,KACPqD,EADO,KAEfnL,EAAYC,qBAAWd,GACvBmC,EAAQrB,qBAAWP,GAHJ,EAIcK,IAJd,mBAId7D,EAJc,KAIHsL,EAJG,KA+BrB,OAzBA+C,qBAAU,WACNY,EAAS7J,EAAMhB,IAAI,MACpB,CAACgB,EAAMhB,MAwBN,eAACsH,EAAA,EAAD,CAAaC,GAAI,EAAGC,MAAO,uBAAM5L,UAAWA,EAAjB,oBAAoC4L,KAAe3K,GAAG,gBAAgB4K,SArBxE,SAACC,GAC1B,GAAsB,SAAlBhI,EAAUM,IAId,OAAQ0H,GACJ,IAAK,OACD1G,EAAMgD,IAAI,QACV,MACJ,IAAK,UACDhD,EAAMgD,IAAI,WACV,MACJ,IAAK,OACDhD,EAAMgD,IAAI,UASd4D,aAAcV,EAAeW,aAAcX,EAD/C,UAGI,cAACI,EAAA,EAAYD,KAAb,CAAkBK,SAAS,OAA3B,kBACA,cAACJ,EAAA,EAAYD,KAAb,CAAkBK,SAAS,UAA3B,qBACA,cAACJ,EAAA,EAAYD,KAAb,CAAkBK,SAAS,OAA3B,sBCLGoD,OAzBf,WACI,IAAM3D,EAAcf,KAEpB,OACI,eAAC3K,EAAA,EAAD,CAAQsP,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOhP,QAAQ,OAAvD,UACI,cAACiP,EAAD,IACA,cAACzP,EAAA,EAAO0P,OAAR,CAAeC,gBAAc,aAC7B,cAAC3P,EAAA,EAAO4P,SAAR,CAAiBxO,GAAG,WAAWjB,UAAU,iBAAzC,SACI,eAACwL,EAAA,EAAD,CAAKxL,UAAU,UAAf,UACI,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,CAAY0N,MAAO,CAAC,WAAY,eAAgBC,SAAU,CAACpC,EAAYV,QAASU,EAAYT,cAC5F,cAAC,GAAD,IACA,cAAC,GAAD,CAAe4C,MAAO,CAAC,eAAgBC,SAAU,CAACpC,EAAYP,cAC9D,cAAC,GAAD,CAAS0C,MAAO,CAAC,yBAA0BC,SAAU,CAACpC,EAAYR,cAClE,cAAC,GAAD,CAAS2C,MAAO,CAAC,cAAeC,SAAU,CAACpC,EAAYjB,aACvD,cAAC,GAAD,aC1Bb,SAASoF,GAAc/E,GAC1BV,QAAQC,IAAI,iBAETS,EAAMgF,MAAQzN,EAAgBC,IAC1BhB,EAAcC,MAAQD,EAAcE,MACnCF,EAAcC,IAAMD,EAAcG,OAClCY,EAAgBE,MAAO,IAEvBjB,EAAcC,IAAMD,EAAcE,KAClCa,EAAgBE,MAAO,ICiFpBwN,OApFf,WAAuB,IAAD,EACY,CAAC7L,qBAAW1B,GAAe0B,qBAAWnB,GAAcmB,qBAAWjB,IAAtFgC,EADW,KACJ+K,EADI,KACEpF,EADF,OAEoB,CAAC1G,qBAAWJ,GAAmBI,qBAAWP,GAAeO,qBAAWd,IAAnGsH,EAFW,KAEAnF,EAFA,KAEOtB,EAFP,KAGZyH,EAAcf,KA6EpB,OA3EA6D,qBAAU,WACN7J,SAASsL,iBAAiB,WAAW,SAASnF,GACvCzI,EAAgBE,MACfsN,GAAc/E,MAGtBnG,SAASsL,iBAAiB,SAAS,SAASnF,IACZ,IAAzBzI,EAAgBE,MACfsN,GAAc/E,SAmEnB,CAACoF,iBA9DiB,SAACC,GAGtB,GAAsB,SAAlBlM,EAAUM,IAAd,CAIA4L,EAAEC,iBAEF1P,EAASU,GAAK+O,EAAEE,OAAOjP,GACvB,IAAMkP,EAAiBtL,EAAetE,EAASU,GAAI6D,GAEhDqL,EAAepL,MACdV,EAAS9D,EAASU,GAAIkP,EAAenL,OACrC6K,EAAKzH,IAAIjH,EAAcC,MAGvByO,EAAKzH,IAAI+H,EAAe5L,QA6CN6L,eAzCH,SAACJ,GAGE,SAAlBlM,EAAUM,MAIdyL,EAAKzH,IAAI,IAENqC,EAAOrG,KAAoB,KAAbyL,EAAKzL,KAClBgG,GAAYmB,EAAYlB,MAAOkB,EAAYjB,UAAWC,EAAWnF,KA+B/BiL,oBA3Bd,SAACL,GAGzB,GAAsB,SAAlBlM,EAAUM,IAAd,CAIA7D,EAASW,MAAQ8O,EAAEE,OAAOjP,GAC1B,IAAMqP,EAAoBzL,EAAetE,EAASU,GAAI6D,GAChDyL,EAAoB1L,EAAetE,EAASW,MAAO4D,GAEtD+K,EAAKzL,MAAQjD,EAAcC,KAAOmP,EAAkBxL,MACnDV,EAAS9D,EAASW,MAAOqP,EAAkBvL,OAC3CzE,EAASU,GAAKV,EAASW,OAElB2O,EAAKzL,MAAQjD,EAAcC,KAAoB,KAAbyO,EAAKzL,KAAcmM,EAAkBxL,OAC5EV,EAAS9D,EAASU,GAAIqP,EAAkBxL,OACxCA,EAAMsD,IAAI,CAACjH,cAAemP,EAAkB/L,KAAM5B,MAAO4N,EAAkBhM,OAC3EF,EAAS9D,EAASW,MAAOoP,EAAkB/L,MAC3ChE,EAASU,GAAKV,EAASW,OAGxBuJ,EAAOrG,KAAoB,KAAbyL,EAAKzL,KAClBgG,GAAYmB,EAAYlB,MAAOkB,EAAYjB,UAAWC,EAAWnF,OCxC9DoL,OAxCf,WAAoB,IAAD,EACkB,CAACjQ,EAASC,QAASD,EAASO,QAASP,EAASS,MAAxER,EADQ,KACCM,EADD,KACUE,EADV,KAGTyP,EAAMC,MAAMC,KAAKD,MAAMlQ,GAASoQ,QAChCC,EAAMH,MAAMC,KAAKD,MAAM5P,GAAS8P,QAEhCE,EAAalB,KANJ,EAOiD,CAACkB,EAAWf,iBAAkBe,EAAWV,eAAgBU,EAAWT,qBAA7HN,EAPQ,KAOUK,EAPV,KAO0BC,EAP1B,KASTU,EAAcN,EAAIO,KAAI,SAACC,EAAU3M,GACnC,OACI,oBAAkBlE,OAAQY,EAA1B,SACK6P,EAAIG,KAAI,SAACE,EAAU5M,GAEhB,OACI,oBAAIrD,GAAMgQ,EAAWnQ,EAAUoQ,EAAwBlR,UAAamB,EAAcO,WAAYvB,MAAOa,EAAMmQ,UAAaf,EAAgBgB,YAAerB,EAAkB/D,aAAgBqE,GAAzI/L,OAJjDA,MAkBnB,OAPA+J,qBAAU,WACN7J,SAASC,gBAAgBhE,KAAKC,MAAMH,EAASC,QAAU,GAAKD,EAASO,QAAUL,KAAKC,MAAMH,EAASO,QAAU,IAAI4D,YAAY1E,UAAYmB,EAAcK,MACvJgD,SAASC,gBAAgBhE,KAAKC,MAAMH,EAASC,QAAU,EAAI,GAAKD,EAASO,QAAUL,KAAKC,MAAMH,EAASO,QAAU,IAAI4D,YAAY1E,UAAYmB,EAAcM,MAC5J,IAKC,qBAAKzB,UAAY,eAAjB,SACI,uBAAOiB,GAAK,QAAQoQ,MAAM,SAASC,OAAO,IAAIC,YAAY,IAA1D,SACI,gCACKR,S,SCbNS,OApBf,WACC,IAAM1N,EAAYC,qBAAWd,GAO7B,OALAoL,qBAAU,WACToD,YAAW,WAAK3N,EAAUsE,IAAI,UAAW,OAEvC,IAEmB,YAAlBtE,EAAUM,IACL,cAACsN,GAAA,EAAD,CAASC,UAAU,SAAStR,QAAQ,YAIrC,qBAAKY,GAAK,KAAV,SACI,cAAC,GAAD,OCmBE2Q,OAnCf,WAAiB,IAAD,EACqB5N,mBAAS,IAD9B,mBACR6N,EADQ,KACIC,EADJ,OAEyB9N,mBAAS,IAFlC,mBAER+N,EAFQ,KAEMC,EAFN,KAGT3G,EAActH,qBAAWJ,GAgB/B,OAdA0K,qBAAU,WACe,iCAApBhD,EAAYjH,IACf0N,EAAc,UAEdA,EAAc,IAGS,4BAApBzG,EAAYjH,KAAyD,0BAApBiH,EAAYjH,IAChE4N,EAAgB,UAEhBA,EAAgB,MAEf,CAAC3G,EAAYjH,MAGf,qBAAKnD,GAAG,WAAR,SACC,+BACC,mCAAK,qBAAKjB,UAAU,oBAApB,iBACA,mCAAK,qBAAKA,UAAU,kBAApB,kBACA,qBAAIA,UAAW6R,EAAf,cAA4B,qBAAK7R,UAAU,mBAA3C,gBACA,qBAAIA,UAAW+R,EAAf,cAA8B,qBAAK/R,UAAU,qBAA7C,kBACA,mCAAK,qBAAKA,UAAU,wBAApB,qBACA,mCAAK,qBAAKA,UAAU,sBAA0B,qBAAKA,UAAU,uBAA7D,mBACA,mCAAK,qBAAKA,UAAU,+BAApB,yBACA,mCAAK,qBAAKA,UAAU,uBAApB,sBCmDWiS,OAhFf,WAA+B,IAAD,EACajO,mBAAS,uCADtB,mBACtBkO,EADsB,KACPC,EADO,OAEcnO,mBAAS,IAFvB,mBAEnBoO,EAFmB,KAELC,EAFK,OAGcrO,mBAAS,IAHvB,mBAGnBsO,EAHmB,KAGLC,EAHK,KAIvBlH,EAActH,qBAAWJ,GA4D5B,OA1DH0K,qBAAU,WACH,IAAIQ,EAAW,GACX2D,EAAK,GACLC,EAAK,GACT,OAAQpH,EAAYjH,KAChB,IAAK,qBACDyK,EAAW,uBACX2D,EAAK,WACLC,EAAK,aACL,MACJ,IAAK,kBACD5D,EAAW,YACX2D,EAAK,WACLC,EAAK,aACL,MACJ,IAAK,8BACD5D,EAAW,2BACX2D,EAAK,WACLC,EAAK,qBACL,MACJ,IAAK,kBACD5D,EAAW,kBACX2D,EAAK,WACLC,EAAK,qBACL,MACJ,IAAK,6BACD5D,EAAW,6BACX2D,EAAK,WACLC,EAAK,qBACL,MACJ,IAAK,+BACD5D,EAAW,+BACX2D,EAAK,WACLC,EAAK,qBACL,MACJ,IAAK,0BACD5D,EAAW,sBACX2D,EAAK,aACLC,EAAK,YACL,MACJ,IAAK,wBACD5D,EAAW,qBACX2D,EAAK,aACLC,EAAK,qBACL,MACJ,QACI5D,EAAW,sCACX2D,EAAK,GACLC,EAAK,GAIbN,EAAiBtD,GACjBwD,EAAgBG,GAChBD,EAAgBE,KAEjB,CAACpH,EAAYjH,MAEQ,KAApBiH,EAAYjH,IAER,qBAAKnD,GAAG,sBAAR,SACKiR,IAKL,sBAAKjR,GAAG,sBAAR,UACKiR,EADL,OACuB,4BAAG,4BAAIE,MAD9B,QACwD,4BAAG,4BAAIE,MAD/D,0B,sCCLGI,OAhEf,WAA8B,IAAD,EACC1O,mBAAS,GADV,mBAClB2O,EADkB,KACXC,EADW,OAED5O,oBAAS,GAFR,mBAElB6O,EAFkB,KAEZC,EAFY,OAGO9O,mBAAS,GAHhB,mBAGlB+O,EAHkB,KAGRC,EAHQ,OAIKhP,oBAAS,GAJd,mBAIlBiP,EAJkB,KAITC,EAJS,KAKnBC,EAAWC,GAAK1N,OActB,OACI,eAAC2N,GAAA,EAAD,CAAOR,KAAMA,EAAM7R,KAAK,KAAKsS,SAAS,SAASC,UAAQ,EAACC,gBAAgB,QAAxE,UACI,qBAAKxT,UAAU,qBAAf,mBAAwC2S,EAAxC,YAAiDQ,KACjD,qBAAKnT,UAAU,cAAf,SAA8BoT,GAAKT,EAAQ,GAAb,MAAyBI,KAEvD,eAACM,GAAA,EAAMI,KAAP,CAAYzT,UAAU,aAAtB,UACI,mBAAGA,UAAU,iBAAb,SAA+BoT,GAAKT,EAAQ,GAAb,OAA0BI,KACzD,mBAAG/S,UAAU,kBAAb,SAAgCoT,GAAKT,EAAQ,GAAb,KAAwBI,KAC7C,IAAVJ,EAAc,qBAAK3S,UAAU,SAAgB,KACnC,IAAV2S,EAAc,qBAAK3S,UAAU,iBAAwB,KAC3C,IAAV2S,EAAc,qBAAK3S,UAAU,cAAqB,KACxC,IAAV2S,EAAc,qBAAK3S,UAAU,SAAgB,KACnC,IAAV2S,EAAc,qBAAK3S,UAAU,eAAsB,KACzC,IAAV2S,EAAc,qBAAK3S,UAAU,YAAmB,KACtC,IAAV2S,EAAc,qBAAK3S,UAAU,cAAqB,KACxC,IAAV2S,EAAc,qBAAK3S,UAAU,UAAiB,KACpC,IAAV2S,EAA4B,IAAbI,EAAiB,oBAAG/S,UAAU,kBAAb,sCAAoC,mBAAGD,KAAK,4BAAR,oBAApC,WAAqF,mBAAGA,KAAK,mCAAR,2BAArF,+BAA6J,oBAAGC,UAAU,kBAAb,sCAAwD,mBAAGD,KAAK,4BAAR,oBAAxD,QAA2G,mBAAGA,KAAK,mCAAR,2BAA3G,OAAgL,QAGlX,eAACsT,GAAA,EAAMK,OAAP,WACI,cAAC5E,GAAA,EAAD,CAAQ9O,UAAU,iBAAiBK,QAAQ,kBAAkBW,KAAK,KAAK+M,QAAS,kBAAM+E,GAAQ,IAA9F,2BACA,cAAC,KAAD,CACIG,QAASA,EACTU,QAAQ,KACRC,QAAQ,eACRC,SAAS,KACTC,SAAS,kBACT9S,KAAK,KACL+S,MAAM,UACNC,SAAU,SAACf,GAEHD,EADAC,EACY,EAEA,GAEhBC,GAAW,SAAAe,GAAG,OAAKA,QAG3B,cAACnF,GAAA,EAAD,CAAQ9O,UAAU,SAASK,QAAQ,kBAAkBW,KAAK,KAAK+M,QAAS,WAjDhF6E,GAAS,SAAAsB,GAAO,OAAIA,EAAU,GAAK,EAAIA,EAAU,EAAIA,MAiD7C,sBACA,cAACpF,GAAA,EAAD,CAAQ9O,UAAU,SAASK,QAAQ,kBAAkBW,KAAK,KAAK+M,QAAS,WA9C5E4E,EAAQ,EAAIQ,EACZL,GAAQ,GAGZF,GAAS,SAAAsB,GAAO,OAAIA,EAAU,GAAKf,EAAWe,EAAU,EAAIA,MA0CpD,yBCfDC,OAlCf,WAAgB,IAAD,EAC2BC,qBAAWxQ,EnC+CrB,ImChDjB,mBACNyQ,EADM,KACQC,EADR,OAE2BF,qBAAWhR,EAAkBD,GAFxD,mBAENoR,EAFM,KAEQC,EAFR,OAGiBJ,qBAAW7Q,EAAaD,GAHzC,mBAGNmR,EAHM,KAGGC,EAHH,OAImBN,qBAAW1Q,EAAcD,GAJ5C,mBAINkR,EAJM,KAIIC,EAJJ,OAKaR,qBAAW5R,EAAcD,GALtC,mBAKNuC,EALM,KAKC+P,EALD,OAMWT,qBAAWvR,EpCaV,IoCnBZ,mBAMNgN,EANM,KAMAiF,EANA,OAOeV,qBAAWrR,EpCgCZ,OoCvCd,mBAON0H,EAPM,KAOEsK,EAPF,KASb,OACE,sBAAK/U,UAAU,MAAf,UACE,cAAC,GAAD,IACA,cAAC8C,EAAckS,SAAf,CAAwBC,MAAO,CAAE7Q,IAAKqG,EAAQrC,IAAK2M,GAAnD,SACE,cAACnS,EAAYoS,SAAb,CAAsBC,MAAO,CAAE7Q,IAAKyL,EAAMzH,IAAK0M,GAA/C,SACE,cAACzS,EAAa2S,SAAd,CAAuBC,MAAO,CAAE7Q,IAAKU,EAAOsD,IAAKyM,GAAjD,SACE,cAACrR,EAAawR,SAAd,CAAuBC,MAAO,CAAE7Q,IAAKuQ,EAAUvM,IAAKwM,GAApD,SACE,cAACvR,EAAY2R,SAAb,CAAsBC,MAAO,CAAE7Q,IAAKqQ,EAASrM,IAAKsM,GAAlD,SACE,cAACzR,EAAiB+R,SAAlB,CAA2BC,MAAO,CAAE7Q,IAAKmQ,EAAcnM,IAAKoM,GAA5D,SACE,eAAC7Q,EAAiBqR,SAAlB,CAA2BC,MAAO,CAAE7Q,IAAKiQ,EAAcjM,IAAKkM,GAA5D,UACE,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,uBCzBLY,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OAEP,cAAC,GAAD,IAEApR,SAASC,eAAe,SAM1ByQ,O","file":"static/js/main.d50a989b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\n\r\nfunction logo() {\r\n    return (\r\n        <Navbar.Brand href=\"/PathingFinding/\" className='Navbar-logo'>\r\n            <img\r\n                src={process.env.PUBLIC_URL + '/logo.png'} // 取得public資料夾路徑\r\n                width=\"50\"\r\n                height=\"50\"\r\n                className='d-inline-block'\r\n                variant='test'\r\n                alt='Logo'\r\n            /> {' '}\r\n                    Path-Finding\r\n        </Navbar.Brand>\r\n    )\r\n}\r\n\r\nexport default logo\r\n","import { createContext } from 'react'\n\n\nconst size = 23\n\nexport const tableVar = {\n    rowSize: Math.floor(window.screen.availHeight / size) - 16, // Math.floor((window.screen.height - document.getElementById(\"navbar\").clientHeight) / 30)\n    colSize: Math.floor(window.screen.availWidth / size), \n    size: size,\n    id: \"0\",\n    newId: \"0\"\n}\n\nexport const componentKind =  {add: \"wall\", wall: \"wall\", weight: \"weight\",  bomb: \"bomb\", start: \"start\", end: \"end\", background: \"background\", search: \"search\", searchFinal: \"searchFinal\", searchBomb: \"searchBomb\", searchBombFinal: \"searchBombFinal\", path: \"path\", pathFinal: \"pathFinal\", pathHead: \"pathHead\"}\nexport const keyboardSupport = {w: \"w\", down: true}\n\n// touch status\nexport const touchContext = createContext()\nexport const touchInitial = {start: componentKind.background, end: componentKind.background, bomb: componentKind.background}\nexport const touchReducer = (state, action) => {\n    switch (action.componentKind) {\n        case componentKind.start:\n            return {...state, start: action.under}\n        case componentKind.end:\n            return {...state, end: action.under}\n        case componentKind.bomb:\n            return {...state, bomb: action.under}\n        default:\n            return touchInitial\n    }\n}\n\n// move component\nexport const moveContext = createContext()\nexport const moveInitial = \"\"\nexport const moveReducer = (state, action) => {\n    switch (action) {\n        case componentKind.start:\n            return action\n        case componentKind.end:\n            return action\n        case componentKind.bomb:\n            return action\n        case componentKind.wall:\n            return action\n        case componentKind.weight:\n            return action\n        default:\n            return moveInitial\n    }\n}\n\n// result update status\nexport const updateContext = createContext()\nexport const updateInitial = false\nexport const updateReducer = (state, action) => {\n    switch (action) {\n        case \"True\":\n            return true\n        case \"False\":\n            return false\n        default:\n            return updateInitial\n    }\n} \n\n","import React from 'react'\r\nimport { tableVar } from '../Frontend/TableHelper/TableIndex'\r\n\r\n// component position\r\nexport var position = {\r\n    start: [Math.floor(tableVar.rowSize / 2), Math.floor(tableVar.colSize / 4)],\r\n    end: [Math.floor(tableVar.rowSize / 2), tableVar.colSize - Math.floor(tableVar.colSize / 4)],\r\n    bomb: false,\r\n    wall: [],\r\n    weight: [],\r\n    rowSize: tableVar.rowSize,\r\n    colSize: tableVar.colSize\r\n}\r\n\r\n\r\n// 目前系統狀態\r\nexport const sysStatusContext = React.createContext();\r\nexport const initialsysStatus = \"LOADING\";\r\nexport const sysStatusReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'IDLE':\r\n            return 'IDLE';\r\n        case 'RUNNING':\r\n            return 'RUNNING';\r\n        case 'LOADING':\r\n            return 'LOADING';\r\n        default:\r\n            return initialsysStatus;\r\n    }\r\n}\r\n\r\n// Bomb status\r\nexport const bombContext = React.createContext();\r\nexport const bombInitial = false;\r\nexport const bombReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'True':\r\n            return true;\r\n        case 'False':\r\n            return false;\r\n        default:\r\n            return bombInitial\r\n    }\r\n}\r\n\r\n// Speed\r\nexport const speedContext = React.createContext();\r\nexport const speedInitial = [\"average\", 50];\r\nexport const speedReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'Fast':\r\n            return [\"Fast\", 125];\r\n        case 'Average':\r\n            return [\"Average\", 250];\r\n        case 'Slow':\r\n            return [\"Slow\", 500];\r\n        default:\r\n            return bombInitial\r\n    }\r\n}\r\n\r\n// 目前系統是哪種演算法\r\nexport const algorithmContext = React.createContext();\r\nexport const initialAlgorithm = \"\";\r\nexport const algorithmReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'Algorithm_Dijkstra':\r\n            return 'Algorithm_Dijkstra';\r\n        case 'Algorithm_APlus':\r\n            return 'Algorithm_APlus';\r\n        case \"Algorithm_Greedy_Best_First\":\r\n            return 'Algorithm_Greedy_Best_First';\r\n        case \"Algorithm_Swarm\":\r\n            return 'Algorithm_Swarm';\r\n        case \"Algorithm_Convergent_Swarm\":\r\n            return 'Algorithm_Convergent_Swarm';\r\n        case \"Algorithm_Bidrectional_Swarm\":\r\n            return 'Algorithm_Bidrectional_Swarm';\r\n        case \"Algorithm_Breadth_First\":\r\n            return 'Algorithm_Breadth_First';\r\n        case \"Algorithm_Depth_First\":\r\n            return 'Algorithm_Depth_First';\r\n        default:\r\n            return initialAlgorithm;\r\n    }\r\n}","import { useState, useContext } from 'react';\nimport { sysStatusContext } from '../Core';\nimport '../App.scss';\n\nconst Colored = () => {\n    const sysStatus = useContext(sysStatusContext);\n    const [isHover, setIsHover] = useState(false);\n    const [className, setClassName] = useState(\"nav-link-default\");\n\n    const toggleHandler = () => {\n        if (isHover) {\n            setClassName(\"nav-link-default\");\n            setIsHover(false);\n        } else {\n            if (sysStatus.get !== \"IDLE\") {\n                setClassName(\"nav-link-red\");\n            } else {\n                setClassName(\"nav-link-green\");\n            }\n            setIsHover(true);\n        }\n    }\n\n    return [className, toggleHandler];\n}\n\nexport default Colored\n","import { componentKind, tableVar } from './TableIndex'\nimport { position } from '../../Core/index'\n\n\nexport function setTable(index, kind){\n    if(index < 0){\n        return\n    }\n\n    document.getElementById(index.toString()).className = kind\n    const pos = [Math.floor(index / tableVar.colSize), index % tableVar.colSize]\n\n    if(position.wall[pos]){\n        delete position.wall[pos]\n    }else if(position.weight[pos]){\n        delete position.weight[pos]\n    }\n\n    if(kind === componentKind.wall){\n        position.wall[pos] = true\n    }else if(kind === componentKind.weight){\n        position.weight[pos] = true\n    }else if(kind === componentKind.start){\n        position.start = pos\n    }else if(kind === componentKind.end){\n        position.end = pos\n    }else if(kind === componentKind.bomb){\n        position.bomb = pos\n    }else if(kind === componentKind.background){\n        if(position.bomb[0] === pos[0] && position.bomb[1] === pos[1]){\n            position.bomb = false\n        }\n    }\n\n    // console.log(position)\n\n}","import { componentKind } from './TableIndex'\n\n\nfunction addComponentKind(kind) {\n    switch (kind) {\n        case componentKind.add:\n            return componentKind.background\n        default:\n            return componentKind.add\n    }\n}\n\nexport function WhichComponent(id, touch){ // MouseEvent\n\n    const element = document.getElementById(id).className\n\n    switch (element) {\n        case componentKind.start:\n            return {kind: componentKind.start, touch: touch.get.start, type: 0}\n        case componentKind.end:\n            return {kind: componentKind.end, touch: touch.get.end, type: 0}\n        case componentKind.bomb:\n            return {kind: componentKind.bomb, touch: touch.get.bomb, type: 0}\n        case componentKind.wall:\n            return {kind: componentKind.wall, rKind: addComponentKind(componentKind.wall), type: 1}\n        case componentKind.weight:\n            return {kind: componentKind.weight, rKind: addComponentKind(componentKind.weight), type: 1}\n        default:\n            return {kind: componentKind.background, rKind: componentKind.add, type: 1}\n    }\n\n}\n\nexport function WhichComponentType(id){\n\n    const element = document.getElementById(id).className\n\n    switch (element) {\n        case componentKind.start:\n            return 0\n        case componentKind.end:\n            return 0\n        case componentKind.bomb:\n            return 0\n        case componentKind.wall:\n            return 1\n        case componentKind.weight:\n            return 2\n        default:\n            return 1\n    }\n\n}","import { tableVar, componentKind } from './TableIndex'\nimport { setTable } from './SetTable'\nimport { WhichComponentType } from './WhichComp'\n\n\nexport function Animation(arr, speed, count, kind, myCallbackFunction = null) {\n    var [id, newid] = [-1, -1]\n    const arrAnimation = setInterval(() => {\n        if (count === arr.length) {\n            if(kind === componentKind.path){\n                setTable(newid, componentKind.pathFinal)\n            }\n            if (myCallbackFunction !== null) {\n                myCallbackFunction();\n            }\n            clearInterval(arrAnimation);\n        }else {\n            const index = arr[count][0] * tableVar.colSize + arr[count][1]\n            if (WhichComponentType(index.toString()) !== 0) {\n                if(kind === componentKind.path){\n                    newid = index\n                    setTable(id, componentKind.pathFinal)\n                    setTable(newid, componentKind.pathHead)\n                    id = newid\n                }else{\n                    setTable(index, kind)\n                }\n            }\n        }\n        count += 1\n    }, speed / 2)\n}\n\nexport function SearchBombAnimation(search, bomb, path, speed, count, myCallbackFunction, sysStatusFunction) {\n    const searchBombAnimation = setInterval(() => {\n        if (count === search.length) {\n            myCallbackFunction(bomb, path, speed, 0, PathAnimation, sysStatusFunction)\n            clearInterval(searchBombAnimation)\n        }else{\n            for(var i = 0;i < search[count].length;i++){\n                const index = search[count][i][0] * tableVar.colSize + search[count][i][1]\n                if (WhichComponentType(index.toString()) !== 0) {\n                    if(bomb.length === 0){\n                        setTable(index, componentKind.search)\n                    }else{\n                        setTable(index, componentKind.searchBomb)\n                    }\n                }\n            }\n        }\n        count += 1\n    }, speed)\n}\n\nexport function SearchAnimation(bomb, path, speed, count, myCallbackFunction, sysStatusFunction) {\n    const searchAnimation = setInterval(() => {\n        if (count === bomb.length) {\n            myCallbackFunction(path, speed, 0, sysStatusFunction)\n            clearInterval(searchAnimation)\n        }else{\n            for(var i = 0;i < bomb[count].length;i++){\n                const index = bomb[count][i][0] * tableVar.colSize + bomb[count][i][1]\n                if (WhichComponentType(index.toString()) !== 0) {\n                    setTable(index, componentKind.search)\n                }\n            }\n        }\n        count += 1\n    }, speed)\n}\n\nexport function PathAnimation(path, speed, count, myCallbackFunction = null) {\n    Animation(path, speed, count, componentKind.path, myCallbackFunction)\n}\n\nexport function MazeAnimation(maze, speed, count, myCallbackFunction = null) {\n    Animation(maze, speed, count, componentKind.wall, myCallbackFunction)\n}","class Queue {\n    constructor() {\n        this.queue = [];\n    }\n\n    append(val) {\n        this.queue.push(val);\n    }\n\n    popleft() {\n        if (this.isEmpty()) return -1;\n        return this.queue.shift();\n    }\n\n    isEmpty() {\n        return this.queue.length === 0;\n    }\n\n    getLength() {\n        return this.queue.length;\n    }\n\n    getArray() {\n        return this.queue;\n    }\n}\n\nexport default Queue;","class Distance {\n    constructor() {\n        this.dict = {};\n        this.max_d = 0;\n    }\n\n    // pos=[x, y], d=距離\n    set(pos, d) {\n        this.dict[pos] = d;\n        this.max_d = Math.max(this.max_d, d);\n    }\n\n    // 取得距離\n    get(pos) {\n        if (pos in this.dict) {\n            return this.dict[pos];\n        } else {\n            return -1;\n        }\n    }\n\n    // 從end開始找尋附近四周圍，第一個 \"有被找過的\" 且 \"距離最小的\"的點，並回傳一個array\n    getShortestPath(endPos) {\n        if (!(endPos in this.dict)) return []; // 若終點沒被找過，就回傳空值\n\n        var shortest = [endPos];\n        var x = endPos[0];\n        var y = endPos[1];\n        var visited = new Set();\n\n        visited.add(endPos.toString());\n        while (this.max_d > 0) {\n            var curD = Infinity;\n            var curX = x;\n            var curY = y;\n\n            // up\n            if ([x - 1, y] in this.dict && !(visited.has([x - 1, y].toString()))) {\n                if (this.dict[[x - 1, y]] < curD) {\n                    curX = x - 1;\n                    curY = y;\n                    curD = this.dict[[x - 1, y]];\n                }\n                visited.add([x - 1, y].toString());\n            }\n\n            // right\n            if ([x, y + 1] in this.dict && !(visited.has([x, y + 1].toString()))) {\n                if (this.dict[[x, y + 1]] < curD) {\n                    curX = x;\n                    curY = y + 1;\n                    curD = this.dict[[x, y + 1]];\n                }\n                visited.add([x, y + 1].toString());\n            }\n\n            // down\n            if ([x + 1, y] in this.dict && !(visited.has([x + 1, y].toString()))) {\n                if (this.dict[[x + 1, y]] < curD) {\n                    curX = x + 1;\n                    curY = y;\n                    curD = this.dict[[x + 1, y]];\n                }\n                visited.add([x + 1, y].toString());\n            }\n\n            // up\n            if ([x, y - 1] in this.dict && !(visited.has([x, y - 1].toString()))) {\n                if (this.dict[[x, y - 1]] < curD) {\n                    curX = x;\n                    curY = y - 1;\n                    curD = this.dict[[x, y - 1]];\n                }\n                visited.add([x, y - 1].toString());\n            }\n            x = curX;\n            y = curY;\n            shortest.unshift([x, y]);\n            this.max_d = curD;\n        }\n        if (shortest.length === 1) return []; // 如果沒有找到路徑(只有終點自己)，則不用跑最短路徑\n        return shortest;\n    }\n\n    clear() {\n        this.dict = {};\n        this.max_d = 0;\n    }\n}\n\nexport default Distance;","import { position } from '../../Core';\nimport Queue from '../../Core/Queue';\nimport Distance from '../../Core/Distance';\n\nfunction BFS(startCallback, speed) {\n    var times = 1 + (position.bomb === false ? 0 : 1); // 如果有bomb要執行2次\n    var retSearchPath = [];\n    var retBombPath = [];\n    var retShortestPath = [];\n\n    for (var i = 0; i < times; i++) {\n        var searchPath = [];\n        const visited = new Set();\n        const queue = new Queue();\n        var distance = new Distance();\n        var startPos = i === 0 ? position.start : position.bomb; // 第一次執行start，第二次bomb\n        var endPos = i === 0 && times > 1 ? position.bomb : position.end; // 第一次執行bomb，第二次end\n\n        distance.set(startPos, 0); // 加入自己\n        queue.append([startPos, 0]); // [pos, 距離]\n        visited.add(startPos.toString()); // 防止重複找尋\n        while (queue.getLength() > 0) {\n            var node = queue.popleft();\n            var x = node[0][0];\n            var y = node[0][1];\n            var nextD = node[1] + 1;\n\n            if (nextD > searchPath.length) searchPath.push([]); // 若有新的長度就增加array\n\n            if ([x, y].toString() === endPos.toString()) break; // 若找到終點就跳出\n\n            // left\n            if (y - 1 >= 0 && !([x, y - 1] in position.wall) && !(visited.has([x, y - 1].toString()))) {\n                queue.append([[x, y - 1], nextD]);\n                searchPath[nextD - 1].push([x, y - 1]);\n                distance.set([x, y - 1], nextD);\n                visited.add([x, y - 1].toString());\n            }\n\n            // up\n            if (x - 1 >= 0 && !([x - 1, y] in position.wall) && !(visited.has([x - 1, y].toString()))) {\n                queue.append([[x - 1, y], nextD]);\n                searchPath[nextD - 1].push([x - 1, y]);\n                distance.set([x - 1, y], nextD);\n                visited.add([x - 1, y].toString());\n            }\n\n            // right\n            // 這裡的position.rowSize怪怪的\n            if (y + 1 < position.colSize && !([x, y + 1] in position.wall) && !(visited.has([x, y + 1].toString()))) {\n                queue.append([[x, y + 1], nextD]);\n                searchPath[nextD - 1].push([x, y + 1]);\n                distance.set([x, y + 1], nextD);\n                visited.add([x, y + 1].toString());\n            }\n\n            // down\n            // 這裡的position.colSize怪怪的\n            if (x + 1 < position.rowSize && !([x + 1, y] in position.wall) && !(visited.has([x + 1, y].toString()))) {\n                queue.append([[x + 1, y], nextD]);\n                searchPath[nextD - 1].push([x + 1, y]);\n                distance.set([x + 1, y], nextD);\n                visited.add([x + 1, y].toString());\n            }\n\n        }\n\n        // 去除多找的一圈\n        while (distance.get(endPos) !== -1 && searchPath.length > distance.get(endPos)) {\n            searchPath.pop();\n        }\n\n        // 取得最短路徑\n        var shortest = distance.getShortestPath(endPos);\n\n        if (i === 0) {\n            retSearchPath = retSearchPath.concat(searchPath);\n        } else {\n            retBombPath = retBombPath.concat(searchPath);\n        }\n        retShortestPath = retShortestPath.concat(shortest);\n\n        if (distance.get(endPos) === -1) break; // 如果第一次沒找到終點，直接跳出\n    }\n    // 執行 start 動畫\n    startCallback(retSearchPath, retShortestPath, speed, retBombPath);\n}\nexport default BFS;","import { position } from '../../Core';\nimport Distance from '../../Core/Distance';\n\nfunction DFS(startCallback, speed) {\n    var retSearchPath = [];\n    var retBombPath = [];\n    var retShortestPath = [];\n    // retSearchPath 會等於 retShortestPath\n\n    function DoDFS(x, y, endPos, visited, startPath, distance, level) {\n        if (x < 0 || y < 0 || x >= position.rowSize || y >= position.colSize || [x, y] in position.wall || visited.has([x, y].toString())) {\n            return false;\n        }\n\n        visited.add([x, y].toString());\n        startPath.push([[x, y]]); // 每一層都是一個\n        distance.set([x, y], level);\n\n        if ([x, y].toString() === endPos.toString()) return true;\n\n\n        if (DoDFS(x - 1, y, endPos, visited, startPath, distance, level + 1)) {// up\n            return true;\n        }\n        if (DoDFS(x, y + 1, endPos, visited, startPath, distance, level + 1)) {// right\n            return true;\n        }\n        if (DoDFS(x + 1, y, endPos, visited, startPath, distance, level + 1)) {// down\n            return true;\n        }\n        if (DoDFS(x, y - 1, endPos, visited, startPath, distance, level + 1)) {// left\n            return true;\n        }\n    }\n    const visited = new Set();\n    const distance = new Distance();\n    var start = position.start;\n    if (position.bomb !== false) {\n        DoDFS(start[0], start[1], position.bomb, visited, retSearchPath, distance, 0);\n        start = position.bomb;\n        retShortestPath = retShortestPath.concat(distance.getShortestPath(position.bomb));\n        distance.clear();\n        visited.clear();\n    }\n    DoDFS(start[0], start[1], position.end, visited, retBombPath, distance, 0);\n    retShortestPath = retShortestPath.concat(distance.getShortestPath(position.end));\n    startCallback(retSearchPath, retShortestPath, speed, retBombPath);\n}\n\nexport default DFS;","import { position } from '../../Core';\nimport PriorityQueue from 'javascript-priority-queue'; //https://www.npmjs.com/package/javascript-priority-queue\n\nfunction Dijkstra(startCallback, speed) {\n    var retSearchPath = [];\n    var retBombPath = [];\n    var retShortestPath = [];\n\n    if (position.bomb) {\n        retShortestPath = retShortestPath.concat(DoDijkstra(position.start, position.bomb, retSearchPath));\n        retShortestPath = retShortestPath.concat(DoDijkstra(position.bomb, position.end, retBombPath));\n    } else {\n        retShortestPath = retShortestPath.concat(DoDijkstra(position.start, position.end, retSearchPath));\n    }\n    // 執行 start 動畫\n    startCallback(retSearchPath, retShortestPath, speed, retBombPath);\n}\n\n/// 回傳最短路徑\nfunction DoDijkstra(startPos, endPos, searchPath) {\n    /*  //https://medium.com/basecs/finding-the-shortest-path-with-a-little-help-from-dijkstra-613149fbdc8e\n        Create Dijkstra table \n        \n        table = {pos : [shortest distance, previous vertex]}\n            * start pos : [0, null]\n            * use priority queue to pick the pos which contains current shortest disance.\n    */\n\n    // 先假設權重都是1\n    var i, j;\n    var weights = {}\n    for (i = 0; i < position.rowSize; i++) {\n        for (j = 0; j < position.colSize; j++) {\n            weights[[i, j]] = 1;\n        }\n    }\n\n    var current_shortest_path = new PriorityQueue('min');\n    var table = {}\n\n    // 設定table: 起始點為0，其他為無限大，所有的previous vertex均為null\n    // 設定目前最短路徑的queue\n    for (i = 0; i < position.rowSize; i++) {\n        for (j = 0; j < position.colSize; j++) {\n            var pos = [i, j]\n            table[pos] = [Infinity, null]; // 起始點走到pos的最短距離，上一個點\n        }\n    }\n    table[startPos] = [0, null]; // 設定起始點\n    current_shortest_path.enqueue(startPos, 0); // 設定目前最短路徑的queue\n\n\n    /* 演算法開始 */\n    var isFoundEnd = false;\n    var visited = new Set();\n    visited.add(startPos.toString()); // 加入已走過\n    searchPath.push([startPos]); // 加入搜尋範圍\n\n    // 直到找到終點，就跳出\n    for (var _ = 0; _ < position.rowSize * position.colSize; _++) {\n        // 1. 選出當前最小路徑的點 O(logn)\n        if (current_shortest_path.size() === 0) break; // 若沒有活路就跳出\n        var curPos = current_shortest_path.dequeue();\n\n        // 2. 計算相鄰且尚未走過的點\n        // tmp = curPos.最短距離 + 走到下一點的權重\n        // 若 tmp < 下一點.最短距離 : 下一點.最短距離=tmp, 且previous vertex=curPos\n\n        var up = curPos[0] - 1 >= 0 ? [curPos[0] - 1, curPos[1]] : null;\n        var right = curPos[1] + 1 < position.colSize ? [curPos[0], curPos[1] + 1] : null;\n        var down = curPos[0] + 1 < position.rowSize ? [curPos[0] + 1, curPos[1]] : null;\n        var left = curPos[1] - 1 >= 0 ? [curPos[0], curPos[1] - 1] : null;\n\n        // eslint-disable-next-line\n        [up, right, down, left].forEach(nextPos => {\n            if (!nextPos || isFoundEnd || nextPos in position.wall) return; // 若超過邊界 or 已經找到終點了 or 是牆壁\n\n\n            if (visited.has(nextPos.toString())) {\n                return; // 已走過的點不走\n            }\n            else {\n                visited.add(nextPos.toString()); // 加入已走過\n                searchPath.push([nextPos]); // 加入搜尋範圍\n            }\n\n            var tmp = table[curPos][0] + weights[nextPos];\n            if (tmp < table[nextPos][0]) {\n                table[nextPos][0] = tmp;\n                table[nextPos][1] = curPos;\n            }\n\n            current_shortest_path.enqueue(nextPos, table[nextPos][0]); // 加入計算目前的最小的路徑\n            if (nextPos.toString() === endPos.toString()) { // 看是否找到終點了\n                isFoundEnd = true;\n            }\n        })\n\n        if (isFoundEnd) { // 找到終點跳出\n            break;\n        }\n    }\n\n\n    // 若有找到終點再判斷最小路徑\n    var curShortestPath = []\n    if (isFoundEnd) {\n        curPos = endPos;\n        while (curPos) { // 因為找到start時的previous vertex為null\n            curShortestPath.unshift(curPos);\n            curPos = table[curPos][1];\n        }\n    }\n    console.log(curShortestPath)\n    return curShortestPath;\n}\n\nexport default Dijkstra;","import BFS from '../../Backend/Algorithms/BFS';\nimport DFS from '../../Backend/Algorithms/DFS';\nimport Dijkstra from '../../Backend/Algorithms/Dijkstra';\n\n\nexport function UpdateTable(Start, ClearPath, algorithm, speed) {\n    ClearPath(false)\n    switch (algorithm.get) {\n        case \"Algorithm_Dijkstra\":\n            Dijkstra(Start, speed.get[1]);\n            break;\n        case 'Algorithm_APlus':\n            break;\n        case \"Algorithm_Greedy_Best_First\":\n            break;\n        case \"Algorithm_Swarm\":\n            break;\n        case \"Algorithm_Convergent_Swarm\":\n            break;\n        case \"Algorithm_Bidrectional_Swarm\":\n            break;\n        case \"Algorithm_Breadth_First\":\n            BFS(Start, speed.get[1]);\n            break;\n        case \"Algorithm_Depth_First\":\n            DFS(Start, speed.get[1]);\n            break;\n        default:\n            break;\n    }\n}","import { useContext } from 'react'\nimport { tableVar, touchContext, updateContext, componentKind } from './TableIndex'\nimport { SearchAnimation, SearchBombAnimation, MazeAnimation } from './Animation'\nimport { sysStatusContext, algorithmContext, bombContext, speedContext } from '../../Core'\nimport { setTable } from './SetTable'\nimport { UpdateTable } from './UpdateTable'\nimport { WhichComponent } from './WhichComp'\n\n\nfunction ButtonEvent() {\n    const [touch, update] = [useContext(touchContext), useContext(updateContext)]\n    const [algorithm, bomb, speed, sysStatus] = [useContext(algorithmContext), useContext(bombContext), useContext(speedContext), useContext(sysStatusContext)]\n    var updateVar = true\n\n    const Start = (search, path, speed, bomb = []) => {\n        if (update.get && updateVar) {\n            for (var i = 0; i < search.length; i++) {\n                for (var j = 0; j < search[i].length; j++) {\n                    const index = search[i][j][0] * tableVar.colSize + search[i][j][1]\n                    if (WhichComponent(index.toString(), touch).type) {\n                        if(bomb.length === 0){\n                            setTable(index, componentKind.searchFinal)\n                        }else{\n                            setTable(index, componentKind.searchBombFinal)\n                        }\n                    }\n                }\n            }\n            for (i = 0; i < bomb.length; i++) {\n                for (j = 0; j < bomb[i].length; j++) {\n                    const index = bomb[i][j][0] * tableVar.colSize + bomb[i][j][1]\n                    if (WhichComponent(index.toString(), touch).type) {\n                        setTable(index, componentKind.searchFinal)\n                    }\n                }\n            }\n            for (i = 0; i < path.length; i++) {\n                const index = path[i][0] * tableVar.colSize + path[i][1]\n                if (WhichComponent(index.toString(), touch).type) {\n                    setTable(index, componentKind.pathFinal)\n                }\n            }\n\n        }else {\n            sysStatus.set(\"RUNNING\")\n            update.set(\"True\")\n            updateVar = true\n            console.log(\"Start\")\n            SearchBombAnimation(search, bomb, path, speed, 0, SearchAnimation, () => sysStatus.set(\"IDLE\"))\n        }\n    }\n\n    const CreateMaze = (maze, speed) => {\n        sysStatus.set(\"RUNNING\");\n        MazeAnimation(maze, speed, 0, () => sysStatus.set(\"IDLE\"));\n    }\n\n    const Addbomb = () => {\n        console.log(\"AddBomb\" + update.get)\n        const index = Math.floor(tableVar.rowSize / 2) * tableVar.colSize + Math.floor(tableVar.colSize / 2)\n\n        if (WhichComponent(index.toString(), touch).type === 0) {\n            return\n        }\n\n        bomb.set(\"True\")\n        setTable(index.toString(), componentKind.bomb)\n\n        if (update.get) {\n            UpdateTable(Start, ClearPath, algorithm, speed)\n        }\n    }\n\n    const RemoveBomb = () => {\n        console.log(\"RemoveBomb\")\n        for (var i = 0; i < tableVar.rowSize * tableVar.colSize; i++) {\n            if (document.getElementById(i.toString()).className === componentKind.bomb) {\n                setTable(i, componentKind.background)\n                break\n            }\n        }\n        bomb.set(\"False\")\n\n        if (update.get) {\n            UpdateTable(Start, ClearPath, algorithm, speed)\n        }\n    }\n\n    const ClearWalls = () => {\n        console.log(\"ClearWall\")\n        for (var i = 0; i < tableVar.rowSize * tableVar.colSize; i++) {\n            if (document.getElementById(i.toString()).className === componentKind.wall) {\n                setTable(i, componentKind.background)\n            }\n        }\n        touch.set(\"\")\n        ClearPath()\n    }\n\n    const ClearPath = (event = true) => {\n        console.log(\"ClearPath\")\n        if (event) {\n            update.set(\"False\")\n            updateVar = false\n        }\n        for (var i = 0; i < tableVar.rowSize * tableVar.colSize; i++) {\n            const name = document.getElementById(i.toString()).className\n            if (name === componentKind.search || name === componentKind.searchFinal || name === componentKind.searchBomb || name === componentKind.searchBombFinal || name === componentKind.path || name === componentKind.pathFinal) {\n                setTable(i, componentKind.background)\n            }\n        }\n    }\n\n    const ClearBoard = () => {\n        console.log(\"ClearBoard\")\n        update.set(\"False\")\n        for (var i = 0; i < tableVar.rowSize * tableVar.colSize; i++) {\n            setTable(i, componentKind.background)\n        }\n        setTable(Math.floor(tableVar.rowSize / 2) * tableVar.colSize + Math.floor(tableVar.colSize / 4), componentKind.start)\n        setTable(Math.floor(tableVar.rowSize / 2 + 1) * tableVar.colSize - Math.floor(tableVar.colSize / 4), componentKind.end)\n        touch.set(\"\")\n        bomb.set(\"False\")\n    }\n\n    return { Start, Addbomb, RemoveBomb, ClearWalls, ClearPath, ClearBoard, CreateMaze }\n}\n\nexport default ButtonEvent\n\n\n\n","import React, { useContext } from 'react';\r\nimport { NavDropdown, Nav } from 'react-bootstrap';\r\nimport { algorithmContext, sysStatusContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\nimport ButtonEvent from '../TableHelper/ButtonEvent';\r\n\r\nfunction DropdownAlgorithm() {\r\n    const algoContext = useContext(algorithmContext);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const [className, toggleHandler] = Colored();\r\n    const buttonEvent = ButtonEvent()\r\n\r\n    const DropdownAlgorithmHandler = (eventKey) => {\r\n\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Algorithm_Dijkstra\":\r\n                algoContext.set('Algorithm_Dijkstra');\r\n                break;\r\n            case \"Algorithm_APlus\":\r\n                algoContext.set('Algorithm_APlus');\r\n                break;\r\n            case \"Algorithm_Greedy_Best_First\":\r\n                algoContext.set('Algorithm_Greedy_Best_First');\r\n                break;\r\n            case \"Algorithm_Swarm\":\r\n                algoContext.set('Algorithm_Swarm');\r\n                break;\r\n            case \"Algorithm_Convergent_Swarm\":\r\n                algoContext.set('Algorithm_Convergent_Swarm');\r\n                break;\r\n            case \"Algorithm_Bidrectional_Swarm\":\r\n                buttonEvent.RemoveBomb(); // 按下去後要清空bomb\r\n                algoContext.set('Algorithm_Bidrectional_Swarm');\r\n                break;\r\n            case \"Algorithm_Breadth_First\":\r\n                algoContext.set('Algorithm_Breadth_First');\r\n                break;\r\n            case \"Algorithm_Depth_First\":\r\n                algoContext.set('Algorithm_Depth_First');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item>\r\n            <NavDropdown xs={1} title={<span className={className}>Algorithms</span>} id=\"DropdownAlgorithm\" onSelect={(eventKey) => DropdownAlgorithmHandler(eventKey)}\r\n                onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}\r\n            >\r\n                <NavDropdown.Item eventKey=\"Algorithm_Dijkstra\">Dijkstra's Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_APlus\">A+ Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Greedy_Best_First\">Greedy Best-First Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Swarm\">Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Convergent_Swarm\">Convergent Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Bidrectional_Swarm\">Bidirectional Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Breadth_First\">Breadth-First Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Depth_First\">Depth-First Search</NavDropdown.Item>\r\n            </NavDropdown>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default DropdownAlgorithm;","import { position } from '../../Core';\n\nfunction Simple_Stair_Pattern() {\n    var walls = [];\n    var towardUp = true;\n    var x = position.rowSize;\n\n    for (var y = 0; y < position.colSize; y++) {\n        if (towardUp) {\n            x--;\n            if (x < 0) {\n                towardUp = false;\n                x = 1;\n            }\n        } else {\n            x++;\n            if (x >= position.rowSize) {\n                towardUp = true;\n                x = position.rowSize - 2;\n            }\n        }\n        walls.push([x, y]);\n    }\n    return walls;\n}\n\nexport default Simple_Stair_Pattern;","import { position } from '../../Core';\n\n// 取得四周圍\nexport const CreateAround = () => {\n    var walls = [];\n    var wallSet = new Set();\n    var x = 0;\n    var y = 0;\n\n    // 取得外圍\n    var tmp = position.colSize - 1;\n    for (y = 0; y <= tmp; y++) {\n        walls.push([0, y]);\n        walls.push([0, tmp]);\n        wallSet.add([0, y].toString());\n        wallSet.add([0, tmp].toString());\n        tmp--;\n    }\n\n    for (x = 0; x < position.rowSize; x++) {\n        walls.push([x, 0]);\n        walls.push([x, position.colSize - 1]);\n        wallSet.add([x, 0].toString());\n        wallSet.add([x, position.colSize - 1].toString());\n\n    }\n\n    tmp = position.colSize - 1;\n    for (y = 0; y <= tmp; y++) {\n        walls.push([position.rowSize - 1, y]);\n        walls.push([position.rowSize - 1, tmp]);\n        wallSet.add([position.rowSize - 1, y].toString());\n        wallSet.add([position.rowSize - 1, tmp].toString());\n        tmp--;\n    }\n    return walls;\n}","import { position } from '../../Core';\nimport { CreateAround } from './Core';\n\nfunction Binary_Tree() {\n    var walls = CreateAround();\n    var wallSet = new Set();\n    var x = 0;\n    var y = 0;\n\n    // Binary Tree to get random maze\n    // http://weblog.jamisbuck.org/2011/2/1/maze-generation-binary-tree-algorithm\n    for (x = 2; x <= position.rowSize - 2; x += 2) {\n        for (y = 2; y <= position.colSize - 2; y += 2) {\n            if (wallSet.has([x - 2, y].toString()) && wallSet.has([x, y - 2].toString())) {\n                var randomFace = Math.floor(Math.random() * 2) + 1;// 1=上，2=左\n                switch (randomFace) {\n                    case 1:\n                        walls.push([x - 1, y]);\n                        wallSet.add([x - 1, y].toString());\n                        break;\n                    case 2:\n                        walls.push([x, y - 1]);\n                        wallSet.add([x, y - 1].toString());\n                        break;\n                    default:\n                        break;\n                }\n            } else if (wallSet.has([x - 2, y].toString())) {\n                walls.push([x - 1, y]);\n                wallSet.add([x - 1, y].toString());\n            } else if (wallSet.has([x, y - 2].toString())) {\n                walls.push([x, y - 2]);\n                wallSet.add([x, y - 1].toString());\n            } else {\n                console.log('Some Error in Binary_Tree_Maze()');\n            }\n            walls.push([x, y]);\n            wallSet.add([x, y].toString());\n        }\n    }\n\n    return walls;\n}\n\nexport default Binary_Tree;","import { position } from '../../Core';\nimport { CreateAround } from './Core';\n\nconst direction = {\n    horizontal: 0,\n    vertical: 1\n}\n\nfunction RecursiveDivision() {\n    var walls = CreateAround();\n    DoRecursiveDivision(0, 0, position.colSize, position.rowSize, walls);\n    return walls;\n}\n\n// walls 為 pass-by-reference，動態加入生成牆壁\n// x, y, width, height均會包含 牆壁，要生成的範圍會在這個牆壁內\n// 為了保證道路暢通 且 周圍要都是牆壁，因此已經設計成棋盤長寬均為奇數，width, height也必為為奇數\n// 所以x, y必為偶數也就是牆壁必為偶數，則道路必為奇數\n// 因此 就能保證沒有死路，因為選擇牆壁的話（偶數），絕對不會擋到路（奇數）\nfunction DoRecursiveDivision(x, y, width, height, walls) {\n    // 而且為了保證道路暢通，兩個牆壁+一個空白才會形成一個道路\n    // 因此長跟寬必須至少大於3\n    if (width < 4 || height < 4) {\n        return;\n    }\n\n    // 選擇切割方向：挑選短的那邊，一樣就random\n    var curDirection = null;\n    if (width < height) curDirection = direction.horizontal;\n    else if (width > height) curDirection = direction.vertical;\n    else curDirection = Math.round(Math.random());\n\n    var door;\n    if (curDirection === direction.horizontal) {\n        // 假設現在height=11，表示x=x0跟x=10的那整條都是牆壁\n        // 則 x建立牆壁的範圍為 2~8 (牆壁跟牆壁中間要留一條路)\n\n        // 因此x要x0+2，而剩下的random範圍為0~6且只能為偶數\n        var randomX = x + 2 + Random_0_to_n(height - 4);\n\n        // 假設width = 9，表示y=y0跟y=8的那整條都是牆壁\n        // 開路的範圍為 y0+ 1~7（但開路必為奇數），而剩下的random範圍為0~6且只能為偶數\n        door = y + 1 + Random_0_to_n(width - 3);\n\n        // 建立牆壁，範圍從 y0~y0+width\n        for (var _y = y; _y < y + width; _y++) {\n            if (_y !== door) {\n                walls.push([randomX, _y]);\n            }\n        }\n\n        // 跑 x,y,width 且 height變成了剛剛選的高-x0（跑上面）\n        DoRecursiveDivision(x, y, width, randomX - x, walls);\n\n        // 跑 新x, y, width 且 height變成了 目前總高 - 剛剛選的高度(跑下面)\n        DoRecursiveDivision(randomX, y, width, height - (randomX - x), walls);\n    } else {\n        // 垂直雷同\n        var randomY = y + 2 + Random_0_to_n(width - 4);\n        door = x + 1 + Random_0_to_n(height - 3);\n\n        for (var _x = x; _x < x + height; _x++) {\n            if (_x !== door) {\n                walls.push([_x, randomY]);\n            }\n        }\n\n        DoRecursiveDivision(x, y, randomY - y, height, walls);\n        DoRecursiveDivision(x, randomY, width - (randomY - y), height, walls);\n    }\n}\n\n// 只回傳偶數\nfunction Random_0_to_n(n) {\n    return Math.floor(Math.random() * n / 2) * 2;\n}\n\nexport default RecursiveDivision;","import { position } from '../../Core';\nimport { CreateAround } from './Core';\n\nconst direction = {\n    horizontal: 0,\n    vertical: 1\n}\n\nfunction RecursiveDivision_Horizontal() {\n    var walls = CreateAround();\n\n    // true代表水平，false代表垂直\n    // 改用最後一個參數選定要跑哪個方向\n    DoRecursiveDivision(0, 0, position.colSize, position.rowSize, walls, true);\n    return walls;\n}\n\n// 與正常版的差別在於，選擇切水平或是垂直的條件不同\n// 水平偏移（horizontal skew）：表示優先跑左邊，所以第一個遞迴規定跑水平，第二個規定跑垂直\nfunction DoRecursiveDivision(x, y, width, height, walls, boolDirection) {\n    // 而且為了保證道路暢通，兩個牆壁+一個空白才會形成一個道路\n    // 因此長跟寬必須至少大於3\n    if (width < 4 || height < 4) {\n        return;\n    }\n\n    // 選擇切割方向：挑選短的那邊，一樣就random\n    var curDirection = null;\n    if (boolDirection) curDirection = direction.horizontal;\n    else curDirection = direction.vertical;\n\n    var door;\n    if (curDirection === direction.horizontal) {\n        // 假設現在height=11，表示x=x0跟x=10的那整條都是牆壁\n        // 則 x建立牆壁的範圍為 2~8 (牆壁跟牆壁中間要留一條路)\n\n        // 因此x要x0+2，而剩下的random範圍為0~6且只能為偶數\n        var randomX = x + 2 + Random_0_to_n(height - 4);\n\n        // 假設width = 9，表示y=y0跟y=8的那整條都是牆壁\n        // 開路的範圍為 y0+ 1~7（但開路必為奇數），而剩下的random範圍為0~6且只能為偶數\n        door = y + 1 + Random_0_to_n(width - 3);\n\n        // 建立牆壁，範圍從 y0~y0+width\n        for (var _y = y; _y < y + width; _y++) {\n            if (_y !== door) {\n                walls.push([randomX, _y]);\n            }\n        }\n\n        // 跑 x,y,width 且 height變成了剛剛選的高-x0（跑上面）\n        DoRecursiveDivision(x, y, width, randomX - x, walls, true); // 第一個規定跑水平\n\n        // 跑 新x, y, width 且 height變成了 目前總高 - 剛剛選的高度(跑下面)\n        DoRecursiveDivision(randomX, y, width, height - (randomX - x), walls, false); // 第二個規定跑垂直\n    } else {\n        // 垂直雷同\n        var randomY = y + 2 + Random_0_to_n(width - 4);\n        door = x + 1 + Random_0_to_n(height - 3);\n\n        for (var _x = x; _x < x + height; _x++) {\n            if (_x !== door) {\n                walls.push([_x, randomY]);\n            }\n        }\n\n        DoRecursiveDivision(x, y, randomY - y, height, walls, true); // 第一個規定跑水平\n        DoRecursiveDivision(x, randomY, width - (randomY - y), height, walls, false); // 第二個規定跑垂直\n    }\n}\n\n// 只回傳偶數\nfunction Random_0_to_n(n) {\n    return Math.floor(Math.random() * n / 2) * 2;\n}\n\nexport default RecursiveDivision_Horizontal;","import { position } from '../../Core';\nimport { CreateAround } from './Core';\n\nconst direction = {\n    horizontal: 0,\n    vertical: 1\n}\n\nfunction RecursiveDivision_Vertical() {\n    var walls = CreateAround();\n\n    // true代表水平，false代表垂直\n    // 改用最後一個參數選定要跑哪個方向\n    DoRecursiveDivision(0, 0, position.colSize, position.rowSize, walls, false);\n    return walls;\n}\n\n// 與正常版的差別在於，選擇切水平或是垂直的條件不同\n// 垂直偏移（vertical skew）：表示優先跑左邊，所以第一個遞迴規定跑垂直，第二個規定跑水平\n// boolDirection=true代表水平，false代表垂直\nfunction DoRecursiveDivision(x, y, width, height, walls, boolDirection) {\n    // 而且為了保證道路暢通，兩個牆壁+一個空白才會形成一個道路\n    // 因此長跟寬必須至少大於3\n    if (width < 4 || height < 4) {\n        return;\n    }\n\n    // 選擇切割方向：挑選短的那邊，一樣就random\n    var curDirection = null;\n    if (boolDirection) curDirection = direction.horizontal;\n    else curDirection = direction.vertical;\n\n    var door;\n    if (curDirection === direction.horizontal) {\n        // 假設現在height=11，表示x=x0跟x=10的那整條都是牆壁\n        // 則 x建立牆壁的範圍為 2~8 (牆壁跟牆壁中間要留一條路)\n\n        // 因此x要x0+2，而剩下的random範圍為0~6且只能為偶數\n        var randomX = x + 2 + Random_0_to_n(height - 4);\n\n        // 假設width = 9，表示y=y0跟y=8的那整條都是牆壁\n        // 開路的範圍為 y0+ 1~7（但開路必為奇數），而剩下的random範圍為0~6且只能為偶數\n        door = y + 1 + Random_0_to_n(width - 3);\n\n        // 建立牆壁，範圍從 y0~y0+width\n        for (var _y = y; _y < y + width; _y++) {\n            if (_y !== door) {\n                walls.push([randomX, _y]);\n            }\n        }\n\n        // 跑 x,y,width 且 height變成了剛剛選的高-x0（跑上面）\n        DoRecursiveDivision(x, y, width, randomX - x, walls, false);  // 第一個規定跑垂直\n\n        // 跑 新x, y, width 且 height變成了 目前總高 - 剛剛選的高度(跑下面)\n        DoRecursiveDivision(randomX, y, width, height - (randomX - x), walls, true); // 第二個規定跑水平\n    } else {\n        // 垂直雷同\n        var randomY = y + 2 + Random_0_to_n(width - 4);\n        door = x + 1 + Random_0_to_n(height - 3);\n\n        for (var _x = x; _x < x + height; _x++) {\n            if (_x !== door) {\n                walls.push([_x, randomY]);\n            }\n        }\n\n        DoRecursiveDivision(x, y, randomY - y, height, walls, false); // 第一個規定跑垂直\n        DoRecursiveDivision(x, randomY, width - (randomY - y), height, walls, true); // 第二個規定跑水平\n    }\n}\n\n// 只回傳偶數\nfunction Random_0_to_n(n) {\n    return Math.floor(Math.random() * n / 2) * 2;\n}\n\nexport default RecursiveDivision_Vertical;","import React, { useContext } from 'react'\r\nimport { NavDropdown, Nav } from 'react-bootstrap';\r\nimport { sysStatusContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\nimport ButtonEvent from '../TableHelper/ButtonEvent';\r\nimport Simple_Stair_Pattern from '../../Backend/Maze/Simple_Stair_Pattern';\r\nimport Binary_Tree from '../../Backend/Maze/Binary_Tree';\r\nimport RecursiveDivision from '../../Backend/Maze/RecursiveDivision';\r\nimport RecursiveDivision_Horizontal from '../../Backend/Maze/RecursiveDivision_Horizontal';\r\nimport RecursiveDivision_Vertical from '../../Backend/Maze/RecursiveDivision_Vertical';\r\n\r\nfunction DropdownMaze() {\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const [className, toggleHandler] = Colored();\r\n    const buttonEvent = ButtonEvent();\r\n    const speed = 20;\r\n\r\n    const DropdownMazeHandler = (eventKey) => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n        buttonEvent.ClearPath()\r\n        buttonEvent.ClearWalls()\r\n        switch (eventKey) {\r\n            case \"Maze_Recursive_Division\":\r\n                buttonEvent.CreateMaze(RecursiveDivision(), speed);\r\n                break;\r\n            case \"Maze_Recursive_Division_vertical\":\r\n                buttonEvent.CreateMaze(RecursiveDivision_Vertical(), speed);\r\n                break;\r\n            case \"Maze_Recursive_Division_horizontal\":\r\n                buttonEvent.CreateMaze(RecursiveDivision_Horizontal(), speed);\r\n                break;\r\n            case \"Maze_Basic_Random\":\r\n                break;\r\n            case \"Maze_Basic_Weight_Maze\":\r\n                alert(\"Maze_Basic_Weight_Maze\");\r\n                break;\r\n            case \"Maze_Simple_stair_pattern\":\r\n                buttonEvent.CreateMaze(Simple_Stair_Pattern(), speed);\r\n                break;\r\n            case \"Maze_Binary_Tree\":\r\n                buttonEvent.CreateMaze(Binary_Tree(), speed);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item>\r\n            <NavDropdown xs={1} title={<span className={className}>Mazes & Patterns</span>} id=\"DropdownMaze\" onSelect={DropdownMazeHandler}\r\n                onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}\r\n            >\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division\">Recursive Division</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division_vertical\">Recursive Division(vertical skew)</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division_horizontal\">Recursive Division(horizontal skew)</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Basic_Random\">Basic Random Maze</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Basic_Weight_Maze\">Basic Weight Maze</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Simple_stair_pattern\">Simple Stair Pattern</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Binary_Tree\">Binary Tree Generator</NavDropdown.Item>\r\n            </NavDropdown>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default DropdownMaze;","import React, { useState, useContext } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { sysStatusContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\n\r\nfunction NavLink({ names, handlers }) {\r\n    const [whichHandler, setWhichHandler] = useState(0);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const [className, toggleHandler] = Colored();\r\n\r\n    const localHandler = () => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        setWhichHandler(preWhichHandler => (preWhichHandler + 1) % handlers.length);\r\n        handlers[whichHandler]();\r\n    }\r\n\r\n    return (\r\n        <Nav.Item xs={1}>\r\n            <Nav.Link onClick={localHandler} className={className} onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}>{names[whichHandler]}</Nav.Link>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default NavLink\r\n","import { useState, useContext } from 'react';\nimport { sysStatusContext, algorithmContext } from '../Core';\nimport '../App.scss';\n\nconst Colored = () => {\n    const sysStatus = useContext(sysStatusContext);\n    const algoStatus = useContext(algorithmContext);\n    const [isHover, setIsHover] = useState(false);\n    const [className, setClassName] = useState(\"nav-link-default\");\n\n    const toggleHandler = () => {\n        if (isHover) {\n            setClassName(\"nav-link-default\");\n            setIsHover(false);\n        } else {\n            if (sysStatus.get !== \"IDLE\" || algoStatus.get === \"\" || algoStatus.get === \"Algorithm_Bidrectional_Swarm\") {\n                setClassName(\"nav-link-red\");\n            } else {\n                setClassName(\"nav-link-green\");\n            }\n            setIsHover(true);\n        }\n    }\n\n    return [className, toggleHandler];\n}\n\nexport default Colored\n","import React, { useState, useContext, useEffect } from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport { bombContext, sysStatusContext, algorithmContext } from '../../Core';\nimport Colored from '../../HOC/Colored_AddButton';\nimport { IsMount } from '../../Core/IsMount.js'\n\nfunction NavAddBomb({ names, handlers }) {\n    const [whichHandler, setWhichHandler] = useState(0);\n    const bomb = useContext(bombContext);\n    const sysStatus = useContext(sysStatusContext);\n    const algoContext = useContext(algorithmContext);\n    const [className, toggleHandler] = Colored();\n    const isMount = IsMount();\n\n    useEffect(() => {\n        if (isMount) return; // 防止第一次render也會跑進來執行\n\n        if (bomb.get === true) {\n            setWhichHandler(1);\n        } else {\n            setWhichHandler(0);\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [bomb])\n\n    useEffect(() => {\n        if (isMount) return;\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [whichHandler])\n\n    const localHandler = () => {\n        if (isMount) return;\n\n        if (sysStatus.get !== \"IDLE\" || algoContext.get === \"\" || algoContext.get === \"Algorithm_Bidrectional_Swarm\") {\n            return;\n        }\n\n        handlers[whichHandler]();\n    }\n\n\n    return (\n        <Nav.Item xs={1}>\n            <Nav.Link onClick={localHandler} className={className} onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}>{names[whichHandler]}</Nav.Link>\n        </Nav.Item>\n    )\n}\n\nexport default NavAddBomb\n","import { useRef, useEffect } from 'react';\n\nexport const IsMount = () => {\n    const isMount = useRef(true);\n\n    useEffect(() => {\n        isMount.current = false;\n    }, [])\n\n    return isMount.current;\n}\n\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { algorithmContext, sysStatusContext, speedContext } from '../../Core';\r\nimport ButtonEvent from '../TableHelper/ButtonEvent';\r\nimport BFS from '../../Backend/Algorithms/BFS';\r\nimport DFS from '../../Backend/Algorithms/DFS';\r\nimport Dijkstra from '../../Backend/Algorithms/Dijkstra';\r\n\r\nconst NavButton = () => {\r\n\r\n    const [buttonName, setButtonName] = useState(\"Visualize !\");\r\n    const [myVariant, setMyVariant] = useState(\"\");\r\n    const algoContext = useContext(algorithmContext);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const speed = useContext(speedContext);\r\n    const buttonEvent = ButtonEvent();\r\n\r\n    useEffect(() => {\r\n        setMyVariant('success');\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        var algoName = \"\";\r\n        switch (algoContext.get) {\r\n            case \"Algorithm_Dijkstra\":\r\n                algoName = \"Dijkstra's\";\r\n                break;\r\n            case 'Algorithm_APlus':\r\n                algoName = \"A*\";\r\n                break;\r\n            case \"Algorithm_Greedy_Best_First\":\r\n                algoName = \"Greedy\";\r\n                break;\r\n            case \"Algorithm_Swarm\":\r\n                algoName = \"Swarm\";\r\n                break;\r\n            case \"Algorithm_Convergent_Swarm\":\r\n                algoName = \"Convergent Swarm\";\r\n                break;\r\n            case \"Algorithm_Bidrectional_Swarm\":\r\n                algoName = \"Bidrectional Swarm\";\r\n                break;\r\n            case \"Algorithm_Breadth_First\":\r\n                algoName = \"BFS\";\r\n                break;\r\n            case \"Algorithm_Depth_First\":\r\n                algoName = \"DFS\";\r\n                break;\r\n            default:\r\n                algoName = \"\";\r\n                break;\r\n        }\r\n        setButtonName(`Visualize ${algoName}!`);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [algoContext.get])\r\n\r\n    useEffect(() => {\r\n        if (sysStatus.get === 'RUNNING') {\r\n            setMyVariant('danger');\r\n        } else {\r\n            setMyVariant('success');\r\n        }\r\n    }, [sysStatus.get])\r\n\r\n\r\n    const handler = () => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        if (algoContext.get === \"\") {\r\n            setButtonName(\"Pick an Algorithm\");\r\n        } else {\r\n            buttonEvent.ClearPath();\r\n            switch (algoContext.get) {\r\n                case \"Algorithm_Dijkstra\":\r\n                    Dijkstra(buttonEvent.Start, speed.get[1]);\r\n                    break;\r\n                case 'Algorithm_APlus':\r\n                    break;\r\n                case \"Algorithm_Greedy_Best_First\":\r\n                    break;\r\n                case \"Algorithm_Swarm\":\r\n                    break;\r\n                case \"Algorithm_Convergent_Swarm\":\r\n                    break;\r\n                case \"Algorithm_Bidrectional_Swarm\":\r\n                    break;\r\n                case \"Algorithm_Breadth_First\":\r\n                    BFS(buttonEvent.Start, speed.get[1]);\r\n                    break;\r\n                case \"Algorithm_Depth_First\":\r\n                    DFS(buttonEvent.Start, speed.get[1]);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item xs={1}>\r\n            <Button id=\"navButton\" variant={myVariant} size=\"lg\" onClick={handler}>{buttonName}</Button>\r\n        </Nav.Item>\r\n    )\r\n};\r\n\r\nexport default NavButton\r\n","import React, { useState, useContext } from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport { sysStatusContext } from '../../Core';\nimport Colored from '../../HOC/Colored';\n\nfunction NavClearBoard({ names, handlers }) {\n    const [whichHandler, setWhichHandler] = useState(0);\n    const sysStatus = useContext(sysStatusContext);\n    const [className, toggleHandler] = Colored();\n\n    const localHandler = () => {\n        if (sysStatus.get !== \"IDLE\") {\n            return;\n        }\n\n        setWhichHandler(preWhichHandler => (preWhichHandler + 1) % handlers.length);\n        handlers[whichHandler]();\n    }\n\n    return (\n        <Nav.Item xs={1}>\n            <Nav.Link onClick={localHandler} className={className} onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}>{names[whichHandler]}</Nav.Link>\n        </Nav.Item>\n    )\n}\n\nexport default NavClearBoard\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport { sysStatusContext } from '../../Core';\r\nimport { speedContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\n\r\nfunction DropdownSpeed() {\r\n    const [title, setTitle] = useState('Average');\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const speed = useContext(speedContext);\r\n    const [className, toggleHandler] = Colored();\r\n\r\n    useEffect(() => {\r\n        setTitle(speed.get[0]);\r\n    }, [speed.get])\r\n\r\n\r\n    const DropdownSpeedHandler = (eventKey) => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Fast\":\r\n                speed.set(\"Fast\");\r\n                break;\r\n            case \"Average\":\r\n                speed.set(\"Average\");\r\n                break;\r\n            case \"Slow\":\r\n                speed.set(\"Slow\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <NavDropdown xs={1} title={<span className={className}>Speed: {title}</span>} id=\"DropdownSpeed\" onSelect={DropdownSpeedHandler}\r\n            onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}\r\n        >\r\n            <NavDropdown.Item eventKey=\"Fast\">Fast</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Average\">Average</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Slow\">Slow</NavDropdown.Item>\r\n        </NavDropdown>\r\n    )\r\n}\r\n\r\nexport default DropdownSpeed;","import React from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Logo from './HeaderHelper/Logo';\r\nimport DropdownAlgorithm from './HeaderHelper/DropdownAlgorithm';\r\nimport DropdownMaze from './HeaderHelper/DropdownMaze';\r\nimport NavLink from './HeaderHelper/NavLink';\r\nimport NavAddBomb from './HeaderHelper/NavAddBomb';\r\nimport NavButton from './HeaderHelper/NavButton';\r\nimport NavClearBoard from './HeaderHelper/NavClearBoard';\r\nimport DropdownSpeed from './HeaderHelper/DropdownSpeed';\r\nimport ButtonEvent from './TableHelper/ButtonEvent';\r\n\r\nfunction Header() {\r\n    const buttonEvent = ButtonEvent()\r\n\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"xl\" bg='dark' variant='dark'>\r\n            <Logo />\r\n            <Navbar.Toggle aria-controls=\"Collapse\" />\r\n            <Navbar.Collapse id=\"Collapse\" className='nvbar-collapse'>\r\n                <Nav className=\"nav-bar\">\r\n                    <DropdownAlgorithm />\r\n                    <DropdownMaze />\r\n                    <NavAddBomb names={[\"Add Bomb\", \"Remove Bomb\"]} handlers={[buttonEvent.Addbomb, buttonEvent.RemoveBomb]} />\r\n                    <NavButton />\r\n                    <NavClearBoard names={[\"Clear Board\"]} handlers={[buttonEvent.ClearBoard]} />\r\n                    <NavLink names={[\"Clear Walls & Weights\"]} handlers={[buttonEvent.ClearWalls]} />\r\n                    <NavLink names={[\"Clear Path\"]} handlers={[buttonEvent.ClearPath]} />\r\n                    <DropdownSpeed />\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Header\r\n","import { componentKind, keyboardSupport } from './TableIndex'\n\n\nexport function KeyboardEvent(event) {\n    console.log(\"KeyboardEvent\")\n\n    if(event.key === keyboardSupport.w){\n        if(componentKind.add === componentKind.wall){\n            componentKind.add = componentKind.weight\n            keyboardSupport.down = false\n        }else{\n            componentKind.add = componentKind.wall\n            keyboardSupport.down = true\n        }\n    } \n}\n","import { useContext, useEffect } from 'react'\nimport { sysStatusContext, algorithmContext, speedContext } from '../../Core/index'\nimport { tableVar, touchContext, moveContext, updateContext, componentKind, keyboardSupport } from './TableIndex'\nimport { setTable } from './SetTable'\nimport { UpdateTable } from './UpdateTable'\nimport { WhichComponent } from './WhichComp'\nimport { KeyboardEvent } from './KeyboardEvent'\nimport ButtonEvent from './ButtonEvent'\n\nfunction MouseEvent() {\n    const [touch, move, update] = [useContext(touchContext), useContext(moveContext), useContext(updateContext)]\n    const [algorithm, speed, sysStatus] = [useContext(algorithmContext), useContext(speedContext), useContext(sysStatusContext)]\n    const buttonEvent = ButtonEvent()\n\n    useEffect(() => {\n        document.addEventListener('keydown', function(event) {\n            if(keyboardSupport.down){\n                KeyboardEvent(event)\n            }\n        })\n        document.addEventListener('keyup', function(event) {\n            if(keyboardSupport.down === false){\n                KeyboardEvent(event)\n            }\n        })\n    })\n\n    const MouseDownHandler = (e) => {\n        // console.log(\"MouseDownHandler \" + e.target.id)\n\n        if (sysStatus.get !== \"IDLE\") {\n            return\n        }\n\n        e.preventDefault()\n\n        tableVar.id = e.target.id\n        const whichComponent = WhichComponent(tableVar.id, touch)\n\n        if(whichComponent.type){\n            setTable(tableVar.id, whichComponent.rKind)\n            move.set(componentKind.add)\n\n        }else{\n            move.set(whichComponent.kind)\n        }\n    }\n\n    const MouseUpHandler = (e) => {\n        // console.log(\"MouseUpHandler \" + e.target.id)\n\n        if (sysStatus.get !== \"IDLE\") {\n            return\n        }\n\n        move.set(\"\")\n\n        if(update.get && move.get !== \"\"){\n            UpdateTable(buttonEvent.Start, buttonEvent.ClearPath, algorithm, speed)\n        }\n    }\n\n    const OnMouseEnterHanlder = (e) => {\n        // console.log(\"OnMouseEnterHanlder \" + e.target.id)\n\n        if (sysStatus.get !== \"IDLE\") {\n            return\n        }\n\n        tableVar.newId = e.target.id\n        const whichOldComponent = WhichComponent(tableVar.id, touch)\n        const whichNewComponent = WhichComponent(tableVar.newId, touch)\n\n        if(move.get === componentKind.add && whichNewComponent.type){\n            setTable(tableVar.newId, whichNewComponent.rKind)\n            tableVar.id = tableVar.newId\n\n        }else if(move.get !== componentKind.add && move.get !== \"\" && whichNewComponent.type){\n            setTable(tableVar.id, whichOldComponent.touch)\n            touch.set({componentKind: whichOldComponent.kind, under: whichNewComponent.kind})\n            setTable(tableVar.newId, whichOldComponent.kind)\n            tableVar.id = tableVar.newId\n        }\n\n        if(update.get && move.get !== \"\"){\n            UpdateTable(buttonEvent.Start, buttonEvent.ClearPath, algorithm, speed)\n        }\n    }\n\n    return {MouseDownHandler, MouseUpHandler, OnMouseEnterHanlder}\n\n}\n\nexport default MouseEvent","import { useEffect } from 'react'\nimport MouseEvent from './MouseEvent'\nimport { tableVar, componentKind } from './TableIndex'\n\n\nfunction TableUI() {\n    const [rowSize, colSize, size] = [tableVar.rowSize, tableVar.colSize, tableVar.size]\n\n    const row = Array.from(Array(rowSize).keys())\n    const col = Array.from(Array(colSize).keys())\n\n    const mouesEvent = MouseEvent()\n    const [MouseDownHandler, MouseUpHandler, OnMouseEnterHanlder] = [mouesEvent.MouseDownHandler, mouesEvent.MouseUpHandler, mouesEvent.OnMouseEnterHanlder]\n\n    const createTable = row.map((rowIndex, index) => {\n        return ( \n            <tr key = {index} height={size}>\n                {col.map((colIndex, index) => {\n                    // console.log(rowIndex + \" \" + colIndex)\n                    return (\n                        <td id = {rowIndex * colSize + colIndex} key = {index} className = {componentKind.background} width={size} onMouseUp = {MouseUpHandler} onMouseDown = {MouseDownHandler} onMouseEnter = {OnMouseEnterHanlder}>\n                            {}\n                        </td>)}\n                    )}\n            </tr>)}\n        )\n\n    useEffect(() => {\n        document.getElementById((Math.floor(tableVar.rowSize / 2) * tableVar.colSize + Math.floor(tableVar.colSize / 4)).toString()).className = componentKind.start\n        document.getElementById((Math.floor(tableVar.rowSize / 2 + 1) * tableVar.colSize - Math.floor(tableVar.colSize / 4)).toString()).className = componentKind.end\n    }, [])\n    \n    \n      \n    return (\n        <div className = \"tablePadding\">\n            <table id = \"board\" align=\"center\" border=\"1\" cellSpacing=\"0\">\n                <tbody>\n                    {createTable}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default TableUI\n","import TableUI from './TableHelper/TableUI';\nimport { useContext, useEffect } from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { sysStatusContext } from '../Core';\n\nfunction Table() {  \n\tconst sysStatus = useContext(sysStatusContext);\n\n\tuseEffect(()=>{\n\t\tsetTimeout(()=>{sysStatus.set(\"IDLE\");}, 1000);\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [])\n\n\tif (sysStatus.get === \"LOADING\"){\n\t\treturn (<Spinner animation=\"border\" variant=\"warning\" />);\n\t}\n\telse{\n\t\treturn (\n\t        <div id = \"UI\">\n\t            <TableUI/>\n\t        </div>\n\t    )\n\t}\n}\n\nexport default Table\n","import { useState, useContext, useEffect } from 'react';\nimport { algorithmContext } from '../../Core';\n\nfunction Info() {\n\tconst [bannedBomb, setBannedBomb] = useState(\"\");\n\tconst [bannedBFSDFS, setBannedBFSDFS] = useState(\"\");\n\tconst algoContext = useContext(algorithmContext);\n\n\tuseEffect(() => {\n\t\tif (algoContext.get === \"Algorithm_Bidrectional_Swarm\") {\n\t\t\tsetBannedBomb(\"banned\");\n\t\t} else {\n\t\t\tsetBannedBomb(\"\");\n\t\t}\n\n\t\tif (algoContext.get === \"Algorithm_Breadth_First\" || algoContext.get === \"Algorithm_Depth_First\") {\n\t\t\tsetBannedBFSDFS(\"banned\");\n\t\t} else {\n\t\t\tsetBannedBFSDFS(\"\");\n\t\t}\n\t}, [algoContext.get])\n\n\treturn (\n\t\t<div id=\"mainInfo\">\n\t\t\t<ul>\n\t\t\t\t<li> <div className=\"Info-Start-Node\"></div>Start Node </li>\n\t\t\t\t<li> <div className=\"Info-End-Node\"></div>Target Node </li>\n\t\t\t\t<li className={bannedBomb}> <div className=\"Info-Bomb-Node\"></div>Bomb Node </li>\n\t\t\t\t<li className={bannedBFSDFS}> <div className=\"Info-Weight-Node\"></div>Weight Node </li>\n\t\t\t\t<li> <div className=\"Info-Unvisited-Node\"></div>Unvisited Node </li>\n\t\t\t\t<li> <div className=\"Info-Visited-Node\"></div><div className=\"Info-Visited1-Node\"></div>Visited Node </li>\n\t\t\t\t<li> <div className=\"Info-ShortestPathNode-Node\"></div>Shortest-Path Node </li>\n\t\t\t\t<li> <div className=\"Info-WallNode-Node\"></div>Wall Node </li>\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n\nexport default Info;","import {useState, useContext, useEffect} from 'react';\nimport { algorithmContext } from '../../Core';\n\nfunction AlgorithmDescriptor(){\n\tconst [algorithmName, setAlgorithmName] = useState('Pick an algorithm and visualize it!');\n    const [discription1, setDiscription1] = useState('');\n    const [discription2, setDiscription2] = useState('');\n\tconst algoContext = useContext(algorithmContext);\n\n\tuseEffect(() => {\n        var algoName = \"\";\n        var d1 = \"\";\n        var d2 = \"\";\n        switch (algoContext.get) {\n            case \"Algorithm_Dijkstra\":\n                algoName = \"Dijkstra's Algorithm\";\n                d1 = \"weighted\";\n                d2 = \"guarantees\";\n                break;\n            case 'Algorithm_APlus':\n                algoName = \"A* Search\";\n                d1 = \"weighted\";\n                d2 = \"guarantees\";\n                break;\n            case \"Algorithm_Greedy_Best_First\":\n                algoName = \"Greedy Best-first Search\";\n                d1 = \"weighted\";\n                d2 = \"does not guarantee\";\n                break;\n            case \"Algorithm_Swarm\":\n                algoName = \"Swarm Algorithm\";\n                d1 = \"weighted\";\n                d2 = \"does not guarantee\";\n                break;\n            case \"Algorithm_Convergent_Swarm\":\n                algoName = \"Convergent Swarm Algorithm\";\n                d1 = \"weighted\";\n                d2 = \"does not guarantee\";\n                break;\n            case \"Algorithm_Bidrectional_Swarm\":\n                algoName = \"Bidrectional Swarm Algorithm\";\n                d1 = \"weighted\";\n                d2 = \"does not guarantee\";\n                break;\n            case \"Algorithm_Breadth_First\":\n                algoName = \"Breath-first Search\";\n                d1 = \"unweighted\";\n                d2 = \"guarantee\";\n                break;\n            case \"Algorithm_Depth_First\":\n                algoName = \"Depth-first Search\";\n                d1 = \"unweighted\";\n                d2 = \"does not guarantee\";\n                break;\n            default:\n                algoName = \"Pick an algorithm and visualize it!\";\n                d1 = \"\";\n                d2 = \"\";\n                break;\n        }\n\n        setAlgorithmName(algoName);\n        setDiscription1(d1);\n        setDiscription2(d2);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [algoContext.get])\n\n    if (algoContext.get === \"\"){\n        return (\n            <div id=\"algorithmDescriptor\">\n                {algorithmName}\n            </div>\n        )\n    } else{\n        return (\n            <div id=\"algorithmDescriptor\">\n                {algorithmName} is <i><b>{discription1}</b></i> and <i><b>{discription2}</b></i> the shortest path!\n            </div>\n        )\n    }\n\t\n}\n\nexport default AlgorithmDescriptor;","import React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport data from '../../Resources/Data/Modalnfo.json';\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react'\n\nfunction IntroductionModal() {\n    const [pages, setPages] = useState(1);\n    const [show, setShow] = useState(true);\n    const [language, setLanguage] = useState(0);\n    const [checked, setChecked] = useState(true);\n    const maxPages = data.length;\n\n    const HandlePrevious = () => {\n        setPages(prePage => prePage - 1 >= 1 ? prePage - 1 : prePage);\n    }\n\n    const HandleNext = () => {\n        if (pages + 1 > maxPages) {\n            setShow(false);\n            return;\n        }\n        setPages(prePage => prePage + 1 <= maxPages ? prePage + 1 : prePage);\n    }\n\n    return (\n        <Modal show={show} size='xl' backdrop=\"static\" centered dialogClassName=\"Modal\">\n            <div className=\"ml-auto Modal-Page\">{`${pages}/${maxPages}`}</div>\n            <div className=\"Modal-Title\">{data[pages - 1][\"Title\"][language]}</div>\n\n            <Modal.Body className=\"Modal-Body\">\n                <p className=\"Modal-BodyText\">{data[pages - 1][\"Dialog\"][language]}</p>\n                <p className=\"Modal-BodyText1\">{data[pages - 1][\"Body\"][language]}</p>\n                {pages === 1 ? <div className=\"Logo\"></div> : null}\n                {pages === 2 ? <div className=\"ShortestPath\"></div> : null}\n                {pages === 3 ? <div className=\"Algorithm\"></div> : null}\n                {pages === 4 ? <div className=\"Maze\"></div> : null}\n                {pages === 5 ? <div className=\"WallWeight\"></div> : null}\n                {pages === 6 ? <div className=\"AddBomb\"></div> : null}\n                {pages === 7 ? <div className=\"StartDrag\"></div> : null}\n                {pages === 8 ? <div className=\"Other\"></div> : null}\n                {pages === 9 ? (language === 1 ? <p className=\"Modal-BodyText1\">本專案由 <a href=\"https://github.com/novayo\">novayo</a> 及 <a href=\"https://github.com/ChengTsungPao\">ChengTsungPao</a> 共同製作</p> : <p className=\"Modal-BodyText1\">This application made by <a href=\"https://github.com/novayo\">novayo</a> and <a href=\"https://github.com/ChengTsungPao\">ChengTsungPao</a>.</p>) : null}\n            </Modal.Body>\n\n            <Modal.Footer>\n                <Button className=\"mr-auto Button\" variant='outline-success' size=\"md\" onClick={() => setShow(false)}>Skip Tutorial</Button>\n                <BootstrapSwitchButton\n                    checked={checked}\n                    onlabel='En'\n                    onstyle='outline-info'\n                    offlabel='Ch'\n                    offstyle='outline-success'\n                    size=\"md\" // eslint-disable-next-line \n                    style='mr-auto' // 這裡會有怪怪的warning，所以加上上面的註解去除warning\n                    onChange={(checked) => {\n                        if (checked) {\n                            setLanguage(0);\n                        } else {\n                            setLanguage(1);\n                        }\n                        setChecked(pre => !pre);\n                    }}\n                />\n                <Button className=\"Button\" variant='outline-success' size=\"md\" onClick={() => HandlePrevious()}>Previous</Button>\n                <Button className=\"Button\" variant='outline-success' size=\"md\" onClick={() => HandleNext()}>Next</Button>\n            </Modal.Footer>\n        </Modal >\n    )\n}\n\nexport default IntroductionModal\n","import './App.scss';\nimport { useReducer } from 'react';\nimport Header from './Frontend/Header';\nimport { algorithmReducer, initialAlgorithm, algorithmContext } from './Core';\nimport { sysStatusReducer, initialsysStatus, sysStatusContext } from './Core';\nimport { bombContext, bombInitial, bombReducer } from './Core';\nimport { speedContext, speedInitial, speedReducer } from './Core';\nimport Table from './Frontend/Table';\nimport { touchReducer, touchInitial, touchContext } from './Frontend/TableHelper/TableIndex';\nimport { moveReducer, moveInitial, moveContext } from './Frontend/TableHelper/TableIndex';\nimport { updateReducer, updateInitial, updateContext } from './Frontend/TableHelper/TableIndex';\nimport Info from './Frontend/HeaderHelper/Info';\nimport AlgorithmDescriptor from './Frontend/HeaderHelper/AlgorithmDescriptor';\nimport IntroductionModal from './Frontend/HeaderHelper/IntroductionModal';\n\nfunction App() {\n  const [curAlgorithm, setCurAlgorithm] = useReducer(algorithmReducer, initialAlgorithm);\n  const [curSysStatus, setCurSysStatus] = useReducer(sysStatusReducer, initialsysStatus);\n  const [curBomb, setCurBomb] = useReducer(bombReducer, bombInitial);\n  const [curSpeed, setCurSpeed] = useReducer(speedReducer, speedInitial);\n  const [touch, setTouch] = useReducer(touchReducer, touchInitial)\n  const [move, setMove] = useReducer(moveReducer, moveInitial)\n  const [update, setUpdate] = useReducer(updateReducer, updateInitial)\n\n  return (\n    <div className=\"App\">\n      <IntroductionModal />\n      <updateContext.Provider value={{ get: update, set: setUpdate }}>\n        <moveContext.Provider value={{ get: move, set: setMove }}>\n          <touchContext.Provider value={{ get: touch, set: setTouch }}>\n            <speedContext.Provider value={{ get: curSpeed, set: setCurSpeed }}>\n              <bombContext.Provider value={{ get: curBomb, set: setCurBomb }}>\n                <sysStatusContext.Provider value={{ get: curSysStatus, set: setCurSysStatus }}>\n                  <algorithmContext.Provider value={{ get: curAlgorithm, set: setCurAlgorithm }}>\n                    <Header />\n                    <Info />\n                    <AlgorithmDescriptor />\n                    <Table />\n                  </algorithmContext.Provider>\n                </sysStatusContext.Provider>\n              </bombContext.Provider>\n            </speedContext.Provider>\n          </touchContext.Provider>\n        </moveContext.Provider>\n      </updateContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}