{"version":3,"sources":["frontend/Headers/Logo.js","Core/index.js","frontend/Headers/DropdownAlgorithm.js","frontend/Headers/DropdownMaze.js","frontend/Headers/NavLink2.js","frontend/Headers/NavButton.js","frontend/Headers/DropdownSpeed.js","frontend/TableHelper/TableIndex.js","frontend/TableHelper/MouseEvent.js","frontend/TableHelper/TableUI.js","frontend/TableHelper/ButtonEvent.js","frontend/Header.js","frontend/Table.js","App.js","reportWebVitals.js","index.js"],"names":["logo","Navbar","Brand","href","className","src","process","width","height","variant","alt","algorithmContext","React","createContext","algorithmReducer","state","action","DropdownAlgorithmHandler","eventKey","algoContext","set","DropdownAlgorithm","useContext","NavDropdown","xs","title","id","onSelect","Item","DropdownMazeHandler","alert","DropdownMaze","NavLink2","names","handlers","useState","whichHandler","setWhichHandler","Nav","Link","onClick","preWhichHandler","length","NavButton","buttonName","setButtonName","myVariant","setMyVariant","useEffect","Button","size","get","setTimeout","DropdownSpeed","setTitle","tableContext","rowSize","colSize","picture","wall","bomb","start","end","background","clickButton","buttonKind","AddBomb","RemoveBomb","ClearWalls","ClearBoard","MouseEvent","tableVarContext","setWall","setBomb","touch","setTouch","bombComponent","startComponent","endComponent","move","setMove","initialTable","Array","from","keys","index","Math","floor","tableColor","setTableColor","temp","slice","console","log","i","MouseDownHandler","e","preventDefault","target","parseInt","MouseUpHandler","OnMouseEnterHanlder","OnMouseOutHanlder","TableUI","row","col","mouesEvent","createTable","map","rowIndex","colIndex","bgcolor","onMouseUp","onMouseDown","onMouseEnter","onMouseOut","border","cellSpacing","ButtonEvent","Addbomb","ReactDOM","render","document","getElementById","Header","buttonEvent","expand","bg","Logo","Toggle","aria-controls","Collapse","Table","App","useReducer","curAlgorithm","setCurAlgorithm","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.42155491.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\n\r\nfunction logo() {\r\n    return (\r\n        <Navbar.Brand href=\"/Pathing-Finding/\" className='Navbar-logo'>\r\n            <img\r\n                src={process.env.PUBLIC_URL + '/logo.png'} // 取得public資料夾路徑\r\n                width=\"50\"\r\n                height=\"50\"\r\n                className='d-inline-block'\r\n                variant='test'\r\n                alt='Logo'\r\n            /> {' '}\r\n                    Path-Finding\r\n        </Navbar.Brand>\r\n    )\r\n}\r\n\r\nexport default logo\r\n","import React from 'react'\r\n\r\n// 目前系統狀態\r\nexport const sysStatusContext = React.createContext();\r\nexport const sysStatusInit = \"IDLE\";\r\nexport const sysStatusReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'IDLE':\r\n            return 'IDLE';\r\n        case 'RUNNING':\r\n            return 'RUNNING';\r\n        default:\r\n            return sysStatusInit;\r\n    }\r\n}\r\n\r\n// 目前系統是哪種演算法\r\nexport const algorithmContext = React.createContext();\r\nexport const initialAlgorithm = \"\";\r\nexport const algorithmReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'Algorithm_Dijkstra':\r\n            return 'Algorithm_Dijkstra';\r\n        case 'Algorithm_APlus':\r\n            return 'Algorithm_APlus';\r\n        case \"Algorithm_Greedy_Best_First\":\r\n            return 'Algorithm_Greedy_Best_First';\r\n        case \"Algorithm_Swarm\":\r\n            return 'Algorithm_Swarm';\r\n        case \"Algorithm_Convergent_Swarm\":\r\n            return 'Algorithm_Convergent_Swarm';\r\n        case \"Algorithm_Bidrectional_Swarm\":\r\n            return 'Algorithm_Bidrectional_Swarm';\r\n        case \"Algorithm_Breadth_First\":\r\n            return 'Algorithm_Breadth_First';\r\n        case \"Algorithm_Depth_First\":\r\n            return 'Algorithm_Depth_First';\r\n        default:\r\n            return initialAlgorithm;\r\n    }\r\n}","import React, { useContext } from 'react';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport { algorithmContext } from '../../Core';\r\n\r\nfunction DropdownAlgorithm({ className }) {\r\n    const algoContext = useContext(algorithmContext);\r\n\r\n    return (\r\n        <NavDropdown xs={1} title=\"Algorithms\" id=\"DropdownAlgorithm\" onSelect={(eventKey) => DropdownAlgorithmHandler(eventKey, algoContext)} className={className}>\r\n            <NavDropdown.Item eventKey=\"Algorithm_Dijkstra\">Dijkstra's Algorithm</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Algorithm_APlus\">A+ Search</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Algorithm_Greedy_Best_First\">Greedy Best-First Search</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Algorithm_Swarm\">Swarm Algorithm</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Algorithm_Convergent_Swarm\">Convergent Swarm Algorithm</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Algorithm_Bidrectional_Swarm\">Bidirectional Swarm Algorithm</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Algorithm_Breadth_First\">Breadth-First Search</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Algorithm_Depth_First\">Depth-First Search</NavDropdown.Item>\r\n        </NavDropdown>\r\n    )\r\n}\r\n\r\nconst DropdownAlgorithmHandler = (eventKey, algoContext) => {\r\n\r\n    switch (eventKey) {\r\n        case \"Algorithm_Dijkstra\":\r\n            algoContext.set('Algorithm_Dijkstra');\r\n            break;\r\n        case \"Algorithm_APlus\":\r\n            algoContext.set('Algorithm_APlus');\r\n            break;\r\n        case \"Algorithm_Greedy_Best_First\":\r\n            algoContext.set('Algorithm_Greedy_Best_First');\r\n            break;\r\n        case \"Algorithm_Swarm\":\r\n            algoContext.set('Algorithm_Swarm');\r\n            break;\r\n        case \"Algorithm_Convergent_Swarm\":\r\n            algoContext.set('Algorithm_Convergent_Swarm');\r\n            break;\r\n        case \"Algorithm_Bidrectional_Swarm\":\r\n            algoContext.set('Algorithm_Bidrectional_Swarm');\r\n            break;\r\n        case \"Algorithm_Breadth_First\":\r\n            algoContext.set('Algorithm_Breadth_First');\r\n            break;\r\n        case \"Algorithm_Depth_First\":\r\n            algoContext.set('Algorithm_Depth_First');\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport default DropdownAlgorithm;","import React from 'react'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\n\r\nfunction DropdownMaze({ className }) {\r\n    return (\r\n        <NavDropdown xs={1} title=\"Mazes & Patterns\" id=\"DropdownMaze\" onSelect={DropdownMazeHandler} className={className}>\r\n            <NavDropdown.Item eventKey=\"Maze_Recursive_Division\">Recursive Division</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Maze_Recursive_Division_vertical\">Recursive Division(vertical skew)</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Maze_Recursive_Division_horizontal\">Recursive Division(horizontal skew)</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Maze_Basic_Random\">Basic Random Maze</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Maze_Basic_Weight_Maze\">Basic Weight Maze</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Maze_Simple_stair_pattern\">Simple Stair Pattern</NavDropdown.Item>\r\n        </NavDropdown>\r\n    )\r\n}\r\n\r\nconst DropdownMazeHandler = (eventKey) => {\r\n    switch (eventKey) {\r\n        case \"Maze_Recursive_Division\":\r\n            alert(\"Maze_Recursive_Division\");\r\n            break;\r\n        case \"Maze_Recursive_Division_vertical\":\r\n            alert(\"Maze_Recursive_Division_vertical\");\r\n            break;\r\n        case \"Maze_Recursive_Division_horizontal\":\r\n            alert(\"Maze_Recursive_Division_horizontal\");\r\n            break;\r\n        case \"Maze_Basic_Random\":\r\n            alert(\"Maze_Basic_Random\");\r\n            break;\r\n        case \"Maze_Basic_Weight_Maze\":\r\n            alert(\"Maze_Basic_Weight_Maze\");\r\n            break;\r\n        case \"Maze_Simple_stair_pattern\":\r\n            alert(\"Maze_Simple_stair_pattern\");\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport default DropdownMaze;","/* 按了會改變物件名稱與執行不同函數 */\nimport React, { useState } from 'react';\nimport Nav from 'react-bootstrap/Nav';\n\nfunction NavLink2({ names, handlers, className }) {\n    const [whichHandler, setWhichHandler] = useState(0);\n\n    const localHandler = () => {\n        setWhichHandler(preWhichHandler => (preWhichHandler + 1) % handlers.length);\n        handlers[whichHandler]();\n    }\n\n    return (\n        <Nav.Item xs={1} className={className}>\n            <Nav.Link onClick={localHandler}>{names[whichHandler]}</Nav.Link>\n        </Nav.Item>\n    )\n}\n\nexport default NavLink2\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { algorithmContext } from '../../Core';\r\n\r\nconst NavButton = () => {\r\n\r\n    const [buttonName, setButtonName] = useState(\"Visualize !\");\r\n    const [myVariant, setMyVariant] = useState(\"\");\r\n    const algoContext = useContext(algorithmContext);\r\n\r\n    useEffect(() => {\r\n        setMyVariant('success');\r\n    }, [])\r\n\r\n    const resetButton = () => {\r\n        setMyVariant('success');\r\n        setButtonName(\"Visualize !\");\r\n    }\r\n\r\n    const handler = () => {\r\n        if (algoContext.get === \"\") {\r\n            setButtonName(\"Pick an Algorithm\");\r\n        } else {\r\n            setMyVariant('danger');\r\n            setButtonName(algoContext.get);\r\n            setTimeout(() => resetButton(), 1000);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item xs={1}>\r\n            <Button id=\"navButton\" variant={myVariant} size=\"lg\" onClick={handler}>{buttonName}</Button>\r\n        </Nav.Item>\r\n    )\r\n};\r\n\r\nexport default NavButton\r\n","import React, { useState } from 'react'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\n\r\nfunction DropdownSpeed({ className }) {\r\n    const [title, setTitle] = useState('Average');\r\n\r\n    return (\r\n        <NavDropdown xs={1} title={`Speed: ${title}`} id=\"DropdownSpeed\" className={className}>\r\n            <NavDropdown.Item onSelect={() => { setTitle(\"Fast\"); alert('Speed Fast!') }}>Fast</NavDropdown.Item>\r\n            <NavDropdown.Item onSelect={() => { setTitle(\"Average\"); alert('Speed Average!') }}>Average</NavDropdown.Item>\r\n            <NavDropdown.Item onSelect={() => { setTitle(\"Slow\"); alert('Speed Slow!') }}>Slow</NavDropdown.Item>\r\n        </NavDropdown>\r\n    )\r\n}\r\n\r\nexport default DropdownSpeed;","import { createContext } from 'react'\n\n\nexport const tableContext = createContext(\n    {rowSize: 10, \n     colSize: 50, \n     size: 30,  \n     picture: {wall: \"blue\", bomb: \"red\", start: \"green\", end: \"#F5F500\", background: \"white\"},\n     clickButton: \"\",\n     buttonKind: {AddBomb: \"AddBomb\", RemoveBomb: \"RemoveBomb\", ClearWalls: \"ClearWalls\", ClearBoard: \"ClearBoard\"}\n    }\n)\n\n  ","import { useState, useContext, useEffect } from 'react'\nimport { tableContext } from './TableIndex'\n\n\nfunction MouseEvent() {\n    const tableVarContext = useContext(tableContext)\n    const [rowSize, colSize, size] = [tableVarContext.rowSize, tableVarContext.colSize, tableVarContext.size]\n    const picture = tableVarContext.picture\n\n    const [wall, setWall] = useState(false)\n    const [bomb, setBomb] = useState(false)\n    const [touch, setTouch] = useState(false)\n    const [move, setMove] = useState({bombComponent: false, startComponent: false, endComponent: false})\n\n    const initialTable = Array.from(Array(rowSize * colSize).keys(), index => {\n        if(index === Math.floor(rowSize / 2) * colSize + Math.floor(colSize / 4)){\n            return picture.start\n        }else if(index === Math.floor(rowSize / 2 + 1) * colSize - Math.floor(colSize / 4)){\n            return picture.end\n        }else{\n            return picture.background\n        }\n    })\n    const [tableColor, setTableColor] = useState(initialTable)\n    var temp = tableColor.slice()\n\n    useEffect(() => {\n        console.log(\"AddBombHanlder\")\n        if(bomb === false && tableVarContext.clickButton === tableVarContext.buttonKind.AddBomb){\n            setBomb(true)\n            temp[Math.floor(rowSize / 2) * colSize + Math.floor(colSize / 2)] = picture.bomb\n            setTableColor(temp)\n            tableVarContext.clickButton = \"\"\n        }\n    }, [tableVarContext.clickButton])\n\n    useEffect(() => {\n        console.log(\"RemoveBombHanlder\")\n        if(bomb && tableVarContext.clickButton === tableVarContext.buttonKind.RemoveBomb){\n            for(var i = 0; i < rowSize * colSize;i++){\n                if(temp[i] === picture.bomb){\n                    temp[i] = picture.background\n                }\n            }\n            setBomb(false)\n            setTableColor(temp)\n            tableVarContext.clickButton = \"\"\n        }\n    }, [tableVarContext.clickButton])\n\n    useEffect(() => {\n        console.log(\"ClearWallHanlder\")\n        if(tableVarContext.clickButton === tableVarContext.buttonKind.ClearWalls){\n            for(var i = 0; i < rowSize * colSize;i++){\n                if(temp[i] === picture.wall){\n                    temp[i] = picture.background\n                }\n            }\n            setTableColor(temp)\n            setTouch(false)\n            tableVarContext.clickButton = \"\"\n        }\n    }, [tableVarContext.clickButton])\n\n    useEffect(() => {\n        console.log(\"ClearBoardHanlder\")\n        if(tableVarContext.clickButton === tableVarContext.buttonKind.ClearBoard){\n            setTableColor(initialTable)\n            setBomb(false)\n            setTouch(false)\n            tableVarContext.clickButton = \"\"\n        }\n    }, [tableVarContext.clickButton])\n\n    const MouseUpHandler = (e) => {\n        console.log(\"MouseUpHandler \" + e.target.id)\n        if(wall){\n            setWall(false)\n        }else{\n            if(temp[parseInt(e.target.id)] === picture.bomb){\n                setMove({...move, bombComponent: false})\n            }else if(temp[parseInt(e.target.id)] === picture.start){\n                setMove({...move, startComponent: false})\n            }else{\n                setMove({...move, endComponent: false})\n            }\n        }\n    }\n\n    const MouseDownHandler = (e) => {\n        e.preventDefault()\n        console.log(\"ClickDownHandler \" + e.target.id)\n        if(temp[parseInt(e.target.id)] !== picture.bomb && temp[parseInt(e.target.id)] !== picture.start && temp[parseInt(e.target.id)] !== picture.end){\n            setWall(true)\n            if(temp[parseInt(e.target.id)] === picture.background){\n                temp[parseInt(e.target.id)] = picture.wall\n            }else{\n                temp[parseInt(e.target.id)] = picture.background\n            }\n            setTableColor(temp)\n        }else{\n            if(temp[parseInt(e.target.id)] === picture.bomb){\n                setMove({...move, bombComponent: true})\n            }else if(temp[parseInt(e.target.id)] === picture.start){\n                setMove({...move, startComponent: true})\n            }else{\n                setMove({...move, endComponent: true})\n            }\n        }\n    }\n\n    const OnMouseEnterHanlder = (e) => {\n        console.log(\"OnMouseEnterHanlder \" + e.target.id)\n        if(wall && temp[parseInt(e.target.id)] !== picture.bomb && temp[parseInt(e.target.id)] !== picture.start && temp[parseInt(e.target.id)] !== picture.end){\n            if(temp[parseInt(e.target.id)] === picture.background){\n                temp[parseInt(e.target.id)] = picture.wall\n            }else{\n                temp[parseInt(e.target.id)] = picture.background\n            }\n            setTableColor(temp)\n        }else{\n            if(move.bombComponent && temp[parseInt(e.target.id)] !== picture.start && temp[parseInt(e.target.id)] !== picture.end){\n                if(temp[parseInt(e.target.id)] === picture.wall){\n                    setTouch(true)\n                }else{\n                    setTouch(false)\n                }\n                temp[parseInt(e.target.id)] = picture.bomb\n                setTableColor(temp)\n            }else if(move.startComponent && temp[parseInt(e.target.id)] !== picture.bomb && temp[parseInt(e.target.id)] !== picture.end){\n                if(temp[parseInt(e.target.id)] === picture.wall){\n                    setTouch(true)\n                }else{\n                    setTouch(false)\n                }\n                temp[parseInt(e.target.id)] = picture.start\n                setTableColor(temp)\n            }else if(move.endComponent && temp[parseInt(e.target.id)] !== picture.bomb && temp[parseInt(e.target.id)] !== picture.start){\n                if(temp[parseInt(e.target.id)] === picture.wall){\n                    setTouch(true)\n                }else{\n                    setTouch(false)\n                }\n                temp[parseInt(e.target.id)] = picture.end\n                setTableColor(temp)\n            }\n        }\n    }\n\n    const OnMouseOutHanlder = (e) => {\n        console.log(\"OnMouseOutHanlder \" + e.target.id)\n        if(wall === false){\n            if(move.bombComponent && temp[parseInt(e.target.id)] !== picture.start && temp[parseInt(e.target.id)] !== picture.end){\n                if(touch){\n                    temp[parseInt(e.target.id)] = picture.wall\n                }else{\n                    temp[parseInt(e.target.id)] = picture.background\n                }\n                setTableColor(temp)\n            }else if(move.startComponent && temp[parseInt(e.target.id)] !== picture.bomb && temp[parseInt(e.target.id)] !== picture.end){\n                if(touch){\n                    temp[parseInt(e.target.id)] = picture.wall\n                }else{\n                    temp[parseInt(e.target.id)] = picture.background\n                }\n                setTableColor(temp)\n            }else if(move.endComponent && temp[parseInt(e.target.id)] !== picture.bomb && temp[parseInt(e.target.id)] !== picture.start){\n                if(touch){\n                    temp[parseInt(e.target.id)] = picture.wall\n                }else{\n                    temp[parseInt(e.target.id)] = picture.background\n                }\n                setTableColor(temp)\n            }\n        }\n    }\n\n    return {MouseDownHandler, MouseUpHandler, OnMouseEnterHanlder, OnMouseOutHanlder, tableColor}\n\n}\n\nexport default MouseEvent\n\n\n","import React, { useContext } from 'react'\nimport MouseEvent from './MouseEvent'\nimport { tableContext } from './TableIndex'\n\n\nfunction TableUI() {\n    const tableVarContext = useContext(tableContext)\n    const [rowSize, colSize, size] = [tableVarContext.rowSize, tableVarContext.colSize, tableVarContext.size]\n\n    const row = Array.from(Array(rowSize).keys())\n    const col = Array.from(Array(colSize).keys())\n\n    const mouesEvent = MouseEvent()\n    const [MouseDownHandler, MouseUpHandler, OnMouseEnterHanlder, OnMouseOutHanlder, tableColor] = [mouesEvent.MouseDownHandler, mouesEvent.MouseUpHandler, mouesEvent.OnMouseEnterHanlder, mouesEvent.OnMouseOutHanlder, mouesEvent.tableColor]\n\n    const createTable = row.map((rowIndex, index) => {\n        return ( \n            <tr key = {index} height={size}>\n                {col.map((colIndex, index) => {\n                    // console.log(rowIndex + \" \" + colIndex)\n                    return (\n                        <td id = {rowIndex * colSize + colIndex} key = {index} bgcolor = {tableColor[rowIndex * colSize + colIndex]} width={size} onMouseUp = {MouseUpHandler} onMouseDown = {MouseDownHandler} onMouseEnter = {OnMouseEnterHanlder} onMouseOut = {OnMouseOutHanlder}>\n                            {}\n                        </td>)}\n                    )}\n            </tr>)}\n        )\n      \n    return (\n        <div>\n            <table id = \"board\" border=\"1\" cellSpacing=\"0\" >\n                <tbody>\n                    {createTable}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default TableUI\n","import { useContext } from 'react'\nimport TableUI from './TableUI';\nimport { tableContext } from './TableIndex'\nimport ReactDOM from 'react-dom'\n\n\nfunction ButtonEvent() {\n    const tableVarContext = useContext(tableContext)\n\n    const Addbomb = () => {\n        tableVarContext.clickButton = tableVarContext.buttonKind.AddBomb\n        ReactDOM.render(\n            <TableUI />,\n            document.getElementById('UI')\n        )\n    }\n\n    const RemoveBomb = () => {\n        tableVarContext.clickButton = tableVarContext.buttonKind.RemoveBomb\n        ReactDOM.render(\n            <TableUI />,\n            document.getElementById('UI')\n        )\n    }\n    \n    const ClearWalls = () => {\n        tableVarContext.clickButton = tableVarContext.buttonKind.ClearWalls\n        ReactDOM.render(\n            <TableUI />,\n            document.getElementById('UI')\n        )\n    }\n    \n    const ClearBoard = () => {\n        tableVarContext.clickButton = tableVarContext.buttonKind.ClearBoard\n        ReactDOM.render(\n            <TableUI />,\n            document.getElementById('UI')\n        )\n    }\n\n    return {Addbomb, RemoveBomb, ClearWalls, ClearBoard}\n}\n\nexport default ButtonEvent\n\n\n\n","import React from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Logo from './Headers/Logo';\r\nimport DropdownAlgorithm from './Headers/DropdownAlgorithm';\r\nimport DropdownMaze from './Headers/DropdownMaze';\r\nimport NavLink from './Headers/NavLink';\r\nimport NavLink2 from './Headers/NavLink2';\r\nimport NavButton from './Headers/NavButton';\r\nimport DropdownSpeed from './Headers/DropdownSpeed';\r\nimport ButtonEvent from './TableHelper/ButtonEvent';\r\n\r\nfunction Header() {\r\n    const buttonEvent = ButtonEvent()\r\n\r\n    return (\r\n        <Navbar expand=\"xl\" bg='dark' variant='dark'>\r\n            <Logo />\r\n            <Navbar.Toggle aria-controls=\"Collapse\" />\r\n            <Navbar.Collapse id=\"Collapse\" className='nvbar-collapse'>\r\n                <Nav className=\"nav-bar\">\r\n                    <DropdownAlgorithm />\r\n                    <DropdownMaze />\r\n                    {/* <NavLink2 names={[\"Add Bomb\", \"Remove Bomb\"]} handlers={[() => { console.log(\"123\") }, () => { console.log(\"456\") }]} /> */}\r\n                    <NavLink2 names={[\"Add Bomb\", \"Remove Bomb\"]} handlers={[buttonEvent.Addbomb, buttonEvent.RemoveBomb]} />\r\n                    <NavButton />\r\n                    {/* <NavLink2 names={[\"Clear Board\"]} handlers={[() => { console.log(\"789\") }]} /> */}\r\n                    <NavLink2 names={[\"Clear Board\"]} handlers={[buttonEvent.ClearBoard]} />\r\n                    <NavLink2 names={[\"Clear Walls & Weights\"]} handlers={[buttonEvent.ClearWalls]} />\r\n                    <NavLink2 names={[\"Clear Path\"]} handlers={[() => alert('Clear Path !')]} />\r\n                    <DropdownSpeed />\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Header\r\n","import TableUI from './TableHelper/TableUI'\n\nfunction Table() {    \n    return (\n        <div id = \"UI\">\n            <TableUI/>\n        </div>\n    )\n}\n\nexport default Table\n","import './App.css';\nimport Header from './frontend/Header';\nimport { useReducer } from 'react';\nimport { algorithmContext, initialAlgorithm, algorithmReducer } from './Core';\nimport Table from './frontend/Table';\n\nfunction App() {\n  const [curAlgorithm, setCurAlgorithm] = useReducer(algorithmReducer, initialAlgorithm);\n\n  return (\n    <div className=\"App\">\n      <algorithmContext.Provider value={{ get: curAlgorithm, set: setCurAlgorithm }}>\n        <Header />\n      </algorithmContext.Provider>\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}