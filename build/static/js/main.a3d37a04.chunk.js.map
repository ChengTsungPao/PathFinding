{"version":3,"sources":["Frontend/HeaderHelper/Logo.js","Frontend/TableHelper/TableIndex.js","Core/index.js","HOC/Colored.js","Frontend/TableHelper/WhichComp.js","Frontend/TableHelper/SetTable.js","Frontend/TableHelper/Animation.js","Core/Queue.js","Core/Distance.js","Backend/Algorithms/BFS.js","Backend/Algorithms/DFS.js","Backend/Algorithms/Dijkstra.js","Backend/Algorithms/Astar.js","Backend/Algorithms/GreedyBestFirstSearch.js","Backend/Algorithms/Swarm.js","Backend/Algorithms/ConvergentSwarm.js","Frontend/TableHelper/UpdateTable.js","Frontend/TableHelper/ButtonEvent.js","Frontend/HeaderHelper/DropdownAlgorithm.js","Backend/Maze/Simple_Stair_Pattern.js","Backend/Maze/Core.js","Backend/Maze/Binary_Tree.js","Backend/Maze/RecursiveDivision.js","Backend/Maze/RecursiveDivision_Horizontal.js","Backend/Maze/RecursiveDivision_Vertical.js","Frontend/HeaderHelper/DropdownMaze.js","Frontend/HeaderHelper/NavLink.js","HOC/Colored_AddButton.js","Frontend/HeaderHelper/NavAddBomb.js","Core/IsMount.js","Frontend/HeaderHelper/NavButton.js","Frontend/HeaderHelper/NavClearBoard.js","Frontend/HeaderHelper/DropdownSpeed.js","Frontend/Header.js","Frontend/TableHelper/KeyboardEvent.js","Frontend/TableHelper/MouseEvent.js","Frontend/TableHelper/TableUI.js","Frontend/Table.js","Frontend/HeaderHelper/Info.js","Frontend/HeaderHelper/AlgorithmDescriptor.js","Frontend/HeaderHelper/IntroductionModal.js","App.js","reportWebVitals.js","index.js"],"names":["logo","Navbar","Brand","href","className","src","process","width","height","variant","alt","adjustSize","size","tableVar","rowSize","Math","floor","window","screen","availHeight","colSize","availWidth","id","newId","componentKind","add","wall","weight","weightSearchBomb","weightSearch","weightPath","start","startSearchBomb","startSearch","startPath","end","endSearchBomb","endSearch","endPath","bomb","bombSearchBomb","bombSearch","bombPath","search","searchFinal","searchBomb","searchBombFinal","path","pathFinal","pathHead","background","keyboardSupport","plus","sub","w","down","tableColor","touchContext","createContext","touchInitial","touchReducer","state","action","under","moveContext","moveReducer","updateContext","updateReducer","position","weightValue","sysStatusContext","React","initialsysStatus","sysStatusReducer","bombContext","bombInitial","bombReducer","speedContext","speedInitial","speedReducer","algorithmContext","algorithmReducer","Colored","sysStatus","useContext","useState","isHover","setIsHover","setClassName","get","addComponentKind","kind","WhichComponent","touch","document","getElementById","type","rKind","WhichComponentSame","StartEndBombWeight","setTable","index","toString","pos","style","setbackground","color","backgroundColor","border","backgroundReset","i","name","Animation","arr","speed","count","myCallbackFunction","newid","arrAnimation","setInterval","length","clearInterval","SearchBombAnimation","sysStatusFunction","searchBombAnimation","PathAnimation","SearchAnimation","searchAnimation","FinalAnimation","j","Queue","this","queue","val","push","isEmpty","shift","Distance","dict","max_d","d","max","endPos","shortest","x","y","visited","Set","curD","Infinity","curX","curY","has","unshift","BFS","startCallback","times","retSearchPath","retBombPath","retShortestPath","searchPath","distance","startPos","set","append","getLength","node","popleft","nextD","pop","getShortestPath","concat","DFS","DoDFS","level","clear","DoDijkstra","weights","current_shortest_path","PriorityQueue","table","enqueue","isFoundEnd","curPos","dequeue","forEach","nextPos","tmp","curShortestPath","Dijkstra","DoAStar","unvisited","GetClosestNode","idx","total","GetScore","GetHeuristic","abs","retPos","retIndex","splice","direction","score","Astar","DoGreedyBestFirstSearch","GreedyBestFirstSearch","DoSwarm","pow","Swarm","DoConvergentSwarm","ConvergentSwarm","UpdateTable","Start","ClearPath","algorithm","ButtonEvent","update","updateVar","console","log","event","Addbomb","RemoveBomb","ClearWalls","ClearBoard","CreateMaze","maze","MazeAnimation","DropdownAlgorithm","algoContext","toggleHandler","buttonEvent","Nav","Item","NavDropdown","xs","title","onSelect","eventKey","DropdownAlgorithmHandler","onMouseEnter","onMouseLeave","Simple_Stair_Pattern","walls","towardUp","CreateAround","wallSet","Binary_Tree","random","DoRecursiveDivision","door","round","randomX","Random_0_to_n","_y","randomY","_x","n","RecursiveDivision","boolDirection","RecursiveDivision_Horizontal","RecursiveDivision_Vertical","DropdownMaze","speedStatus","alert","NavLink","names","handlers","whichHandler","setWhichHandler","Link","onClick","preWhichHandler","algoStatus","NavAddBomb","isMount","useRef","useEffect","current","IsMount","NavButton","buttonName","setButtonName","myVariant","setMyVariant","algoName","Button","NavClearBoard","DropdownSpeed","setTitle","Header","collapseOnSelect","expand","bg","Logo","Toggle","aria-controls","Collapse","KeyboardEvent","key","MouseEvent","move","addEventListener","MouseDownHandler","e","preventDefault","target","whichComponent","MouseUpHandler","OnMouseEnterHanlder","whichOldComponent","whichNewComponent","TableUI","row","Array","from","keys","col","mouesEvent","createTable","map","rowIndex","colIndex","onMouseUp","onMouseDown","align","cellSpacing","Table","setTimeout","Spinner","animation","Info","bannedBomb","setBannedBomb","bannedBFSDFS","setBannedBFSDFS","AlgorithmDescriptor","algorithmName","setAlgorithmName","discription1","setDiscription1","discription2","setDiscription2","d1","d2","IntroductionModal","pages","setPages","show","setShow","language","setLanguage","checked","setChecked","maxPages","data","Modal","backdrop","centered","dialogClassName","Body","Footer","onlabel","onstyle","offlabel","offstyle","onChange","pre","prePage","App","useReducer","curAlgorithm","setCurAlgorithm","curSysStatus","setCurSysStatus","curBomb","setCurBomb","curSpeed","setCurSpeed","setTouch","setMove","setUpdate","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.a3d37a04.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\n\r\nfunction logo() {\r\n    return (\r\n        <Navbar.Brand href=\"/PathFinding/\" className='Navbar-logo'>\r\n            <img\r\n                src={process.env.PUBLIC_URL + '/logo.png'} // 取得public資料夾路徑\r\n                width=\"50\"\r\n                height=\"50\"\r\n                className='d-inline-block'\r\n                variant='test'\r\n                alt='Logo'\r\n            /> {' '}\r\n                    Path-Finding\r\n        </Navbar.Brand>\r\n    )\r\n}\r\n\r\nexport default logo\r\n","import { createContext } from 'react'\n\n\nconst size = 23\n\nfunction adjustSize(size) {\n    if(size % 2 === 0){\n        size -= 1\n    }\n    return size\n}\n\nexport const tableVar = {\n    rowSize: adjustSize(Math.floor(window.screen.availHeight / size) - 16),\n    colSize: adjustSize(Math.floor(window.screen.availWidth / size)), \n    size: size,\n    id: \"0\",\n    newId: \"0\"\n}\n\nexport const componentKind =  {\n    add: \"wall\", \n    wall: \"wall\", \n    weight: \"weight\",\n    weightSearchBomb: \"weightSearchBomb\",\n    weightSearch: \"weightSearch\",\n    weightPath: \"weightPath\",\n\n    start: \"start\",\n    startSearchBomb: \"startSearchBomb\",\n    startSearch: \"startSearch\",\n    startPath: \"startPath\",\n\n    end: \"end\",\n    endSearchBomb: \"endSearchBomb\",\n    endSearch: \"endSearch\",\n    endPath: \"endPath\",\n\n    bomb: \"bomb\",\n    bombSearchBomb: \"bombSearchBomb\",\n    bombSearch: \"bombSearch\",\n    bombPath: \"bombPath\",\n\n    search: \"search\", \n    searchFinal: \"searchFinal\", \n    searchBomb: \"searchBomb\", \n    searchBombFinal: \"searchBombFinal\", \n    path: \"path\", \n    pathFinal: \"pathFinal\", \n    pathHead: \"pathHead\",\n\n    background: \"background\"\n}\n\nexport const keyboardSupport = {   \n    plus: \"+\", \n    sub: \"-\",\n\n    w: \"w\",\n    down: true\n\n}\n\nexport const tableColor = {\n    searchBomb: \"#e403e4\",\n    search: \"#26FFFF\",\n    path: \"#F0F000\",\n    background: \"white\"\n\n}\n\n// touch status\nexport const touchContext = createContext()\nexport const touchInitial = {start: componentKind.background, end: componentKind.background, bomb: componentKind.background}\nexport const touchReducer = (state, action) => {\n    switch (action.componentKind) {\n        case componentKind.start:\n            return {...state, start: action.under}\n        case componentKind.end:\n            return {...state, end: action.under}\n        case componentKind.bomb:\n            return {...state, bomb: action.under}\n        default:\n            return touchInitial\n    }\n}\n\n// move component\nexport const moveContext = createContext()\nexport const moveInitial = \"\"\nexport const moveReducer = (state, action) => {\n    switch (action) {\n        case componentKind.start:\n            return action\n        case componentKind.end:\n            return action\n        case componentKind.bomb:\n            return action\n        case componentKind.wall:\n            return action\n        case componentKind.weight:\n            return action\n        default:\n            return moveInitial\n    }\n}\n\n// result update status\nexport const updateContext = createContext()\nexport const updateInitial = false\nexport const updateReducer = (state, action) => {\n    switch (action) {\n        case \"True\":\n            return true\n        case \"False\":\n            return false\n        default:\n            return updateInitial\n    }\n} \n\n","import React from 'react'\r\nimport { tableVar } from '../Frontend/TableHelper/TableIndex'\r\n\r\n// component position\r\nexport var position = {\r\n    start: [Math.floor(tableVar.rowSize / 2), Math.floor(tableVar.colSize / 4)],\r\n    end: [Math.floor(tableVar.rowSize / 2), tableVar.colSize - Math.floor(tableVar.colSize / 4)],\r\n    bomb: false,\r\n    wall: [],\r\n    weight: [],\r\n    weightValue: 50,\r\n    rowSize: tableVar.rowSize,\r\n    colSize: tableVar.colSize\r\n}\r\n\r\n\r\n// 目前系統狀態\r\nexport const sysStatusContext = React.createContext();\r\nexport const initialsysStatus = \"LOADING\";\r\nexport const sysStatusReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'IDLE':\r\n            return 'IDLE';\r\n        case 'RUNNING':\r\n            return 'RUNNING';\r\n        case 'LOADING':\r\n            return 'LOADING';\r\n        default:\r\n            return initialsysStatus;\r\n    }\r\n}\r\n\r\n// Bomb status\r\nexport const bombContext = React.createContext();\r\nexport const bombInitial = false;\r\nexport const bombReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'True':\r\n            return true;\r\n        case 'False':\r\n            return false;\r\n        default:\r\n            return bombInitial\r\n    }\r\n}\r\n\r\n// Speed\r\nexport const speedContext = React.createContext();\r\nexport const speedInitial = [\"Fast\", 50];\r\nexport const speedReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'Fast':\r\n            return [\"Fast\", 50];\r\n        case 'Average':\r\n            return [\"Average\", 150];\r\n        case 'Slow':\r\n            return [\"Slow\", 500];\r\n        default:\r\n            return bombInitial\r\n    }\r\n}\r\n\r\n// 目前系統是哪種演算法\r\nexport const algorithmContext = React.createContext();\r\nexport const initialAlgorithm = \"\";\r\nexport const algorithmReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'Algorithm_Dijkstra':\r\n            return 'Algorithm_Dijkstra';\r\n        case 'Algorithm_AStar':\r\n            return 'Algorithm_AStar';\r\n        case \"Algorithm_Greedy_Best_First\":\r\n            return 'Algorithm_Greedy_Best_First';\r\n        case \"Algorithm_Swarm\":\r\n            return 'Algorithm_Swarm';\r\n        case \"Algorithm_Convergent_Swarm\":\r\n            return 'Algorithm_Convergent_Swarm';\r\n        case \"Algorithm_Bidrectional_Swarm\":\r\n            return 'Algorithm_Bidrectional_Swarm';\r\n        case \"Algorithm_Breadth_First\":\r\n            return 'Algorithm_Breadth_First';\r\n        case \"Algorithm_Depth_First\":\r\n            return 'Algorithm_Depth_First';\r\n        default:\r\n            return initialAlgorithm;\r\n    }\r\n}","import { useState, useContext } from 'react';\nimport { sysStatusContext } from '../Core';\nimport '../App.scss';\n\nconst Colored = () => {\n    const sysStatus = useContext(sysStatusContext);\n    const [isHover, setIsHover] = useState(false);\n    const [className, setClassName] = useState(\"nav-link-default\");\n\n    const toggleHandler = () => {\n        if (isHover) {\n            setClassName(\"nav-link-default\");\n            setIsHover(false);\n        } else {\n            if (sysStatus.get !== \"IDLE\") {\n                setClassName(\"nav-link-red\");\n            } else {\n                setClassName(\"nav-link-green\");\n            }\n            setIsHover(true);\n        }\n    }\n\n    return [className, toggleHandler];\n}\n\nexport default Colored\n","import { componentKind } from './TableIndex'\n\n\nfunction addComponentKind(kind) {\n    switch (kind) {\n        case componentKind.add:\n            return componentKind.background\n        default:\n            return componentKind.add\n    }\n}\n\nexport function WhichComponent(id, touch){ // MouseEvent\n\n    const element = document.getElementById(id).className\n\n    switch (element) {\n        case componentKind.start:\n            return {kind: componentKind.start, touch: touch.get.start, type: 0}\n        case componentKind.startSearchBomb:\n            return {kind: componentKind.start, touch: touch.get.start, type: 0}\n        case componentKind.startSearch:\n            return {kind: componentKind.start, touch: touch.get.start, type: 0}\n        case componentKind.startPath:\n            return {kind: componentKind.start, touch: touch.get.start, type: 0}\n        case componentKind.end:\n            return {kind: componentKind.end, touch: touch.get.end, type: 0}\n        case componentKind.endSearchBomb:\n            return {kind: componentKind.end, touch: touch.get.end, type: 0}\n        case componentKind.endSearch:\n            return {kind: componentKind.end, touch: touch.get.end, type: 0}\n        case componentKind.endPath:\n            return {kind: componentKind.end, touch: touch.get.end, type: 0}\n        case componentKind.bomb:\n            return {kind: componentKind.bomb, touch: touch.get.bomb, type: 0}\n        case componentKind.bombSearchBomb:\n            return {kind: componentKind.bomb, touch: touch.get.bomb, type: 0}\n        case componentKind.bombSearch:\n            return {kind: componentKind.bomb, touch: touch.get.bomb, type: 0}\n        case componentKind.bombPath:\n            return {kind: componentKind.bomb, touch: touch.get.bomb, type: 0}\n        case componentKind.wall:\n            return {kind: componentKind.wall, rKind: addComponentKind(componentKind.wall), type: 1}\n        case componentKind.weight:\n            return {kind: componentKind.weight, rKind: addComponentKind(componentKind.weight), type: 1}\n        case componentKind.weightSearchBomb:\n            return {kind: componentKind.weight, rKind: addComponentKind(componentKind.weight), type: 1}\n        case componentKind.weightSearch:\n            return {kind: componentKind.weight, rKind: addComponentKind(componentKind.weight), type: 1}\n        case componentKind.weightPath:\n            return {kind: componentKind.weight, rKind: addComponentKind(componentKind.weight), type: 1}\n        default:\n            return {kind: componentKind.background, rKind: componentKind.add, type: 1}\n    }\n\n}\n\n\nexport function WhichComponentSame(kind){\n\n    switch (kind) {\n        case componentKind.start:\n            return 0\n        case componentKind.startSearchBomb:\n            return 0\n        case componentKind.startSearch:\n            return 0\n        case componentKind.startPath:\n            return 0\n        case componentKind.end:\n            return 1\n        case componentKind.endSearchBomb:\n            return 1\n        case componentKind.endSearch:\n            return 1\n        case componentKind.endPath:\n            return 1\n        case componentKind.bomb:\n            return 2\n        case componentKind.bombSearchBomb:\n            return 2\n        case componentKind.bombSearch:\n            return 2\n        case componentKind.bombPath:\n            return 2\n        case componentKind.weight:\n            return 3\n        case componentKind.weightSearchBomb:\n            return 3\n        case componentKind.weightSearch:\n            return 3\n        case componentKind.weightPath:\n            return 3\n        case componentKind.wall:\n            return 4\n        case componentKind.search:\n            return 5\n        case componentKind.searchBomb:\n            return 6\n        case componentKind.path:\n            return 7\n        case componentKind.pathHead:\n            return 8\n        case componentKind.background:\n            return 9\n        default:\n            return 10\n    }\n\n}\n\nexport function StartEndBombWeight(type, start, end, bomb, weight){\n\n    switch (type) {\n        case 0:\n            return start\n        case 1:\n            return end\n        case 2:\n            return bomb\n        case 3:\n            return weight\n        default:\n            return null\n    }\n\n}","import { componentKind, tableVar, tableColor } from './TableIndex'\nimport { WhichComponentSame, StartEndBombWeight } from './WhichComp'\nimport { position } from '../../Core/index'\n\n\nexport function setTable(index, kind){\n    if(index < 0){\n        return\n    }\n\n    document.getElementById(index.toString()).className = kind\n    const pos = [Math.floor(index / tableVar.colSize), index % tableVar.colSize]\n\n    if(WhichComponentSame(kind) > 3){\n        document.getElementById(index.toString()).style = \"\"\n    }\n\n    if(position.wall[pos]){\n        delete position.wall[pos]\n    }else if(position.weight[pos]){\n        delete position.weight[pos]\n    }\n\n    if(kind === componentKind.wall){\n        position.wall[pos] = true\n    }else if(kind === componentKind.weight){\n        position.weight[pos] = true\n    }else if(kind === componentKind.start){\n        position.start = pos\n    }else if(kind === componentKind.end){\n        position.end = pos\n    }else if(kind === componentKind.bomb){\n        position.bomb = pos\n    }else if(kind === componentKind.background){\n        if(position.bomb[0] === pos[0] && position.bomb[1] === pos[1]){\n            position.bomb = false\n        }\n    }\n\n    // console.log(position)\n\n}\n\nexport function setbackground(index, color){\n    document.getElementById(index.toString()).style.backgroundColor = color\n    if(color === tableColor.path){\n        document.getElementById(index.toString()).style.border = 0\n    }\n}\n\nexport function backgroundReset(){\n    for (var i = 0; i < tableVar.rowSize * tableVar.colSize; i++) {\n        document.getElementById(i.toString()).style = \"\"\n        const name = document.getElementById(i.toString()).className\n        if(WhichComponentSame(name) <= 3){\n            setTable(i, StartEndBombWeight(WhichComponentSame(name), componentKind.start, componentKind.end, componentKind.bomb, componentKind.weight))\n        }\n    }\n}","import { tableVar, componentKind, tableColor } from './TableIndex'\nimport { setTable, setbackground } from './SetTable'\nimport { WhichComponentSame, StartEndBombWeight } from './WhichComp'\nimport { position } from '../../Core/index'\n\n\nexport function Animation(arr, speed, count, kind, myCallbackFunction = null) {\n    var [id, newid] = [-1, -1]\n    const arrAnimation = setInterval(() => {\n        if (count === arr.length) {\n            if(kind === componentKind.path){\n                setTable(newid, componentKind.path)\n            }\n            if (myCallbackFunction !== null) {\n                myCallbackFunction();\n            }\n            clearInterval(arrAnimation);\n        }else {\n            const index = arr[count][0] * tableVar.colSize + arr[count][1]\n            const name = document.getElementById(index.toString()).className\n            if (WhichComponentSame(name) > 3) {\n                if(kind === componentKind.path){\n                    newid = index\n                    setTable(id, componentKind.path)\n                    setTable(newid, componentKind.pathHead)\n                    id = newid\n                }else{\n                    setTable(index, kind)\n                }\n            }else{\n                setTable(id, componentKind.path)\n                setTable(index, StartEndBombWeight(WhichComponentSame(name), componentKind.startPath, componentKind.endPath, componentKind.bombPath, componentKind.weightPath))\n            }\n        }\n        count += 1\n    }, speed / 2)\n}\n\nexport function SearchBombAnimation(search, bomb, path, speed, count, myCallbackFunction, sysStatusFunction) {\n    var index = position.start[0] * tableVar.colSize + position.start[1]\n    if(bomb.length === 0){\n        setTable(index, componentKind.startSearch)\n    }else{\n        setTable(index, componentKind.startSearchBomb)\n    }\n    const searchBombAnimation = setInterval(() => {\n        if (count === search.length) {\n            myCallbackFunction(bomb, path, speed, 0, PathAnimation, sysStatusFunction)\n            clearInterval(searchBombAnimation)\n        }else{\n            for(var i = 0;i < search[count].length;i++){\n                index = search[count][i][0] * tableVar.colSize + search[count][i][1]\n                const name = document.getElementById(index.toString()).className\n                if (WhichComponentSame(name) > 3) {\n                    if(bomb.length === 0){\n                        setTable(index, componentKind.search)\n                    }else{\n                        setTable(index, componentKind.searchBomb)\n                    }\n                }else{\n                    if(bomb.length === 0){\n                        setTable(index, StartEndBombWeight(WhichComponentSame(name), componentKind.startSearch, componentKind.endSearch, componentKind.bombSearch, componentKind.weightSearch))\n                    }else{\n                        setTable(index, StartEndBombWeight(WhichComponentSame(name), componentKind.startSearchBomb, componentKind.endSearchBomb, componentKind.bombSearch, componentKind.weightSearchBomb))\n                    }\n                }\n            }\n        }\n        count += 1\n    }, speed)\n}\n\nexport function SearchAnimation(bomb, path, speed, count, myCallbackFunction, sysStatusFunction) {\n    const searchAnimation = setInterval(() => {\n        if (count === bomb.length) {\n            myCallbackFunction(path, speed, 0, sysStatusFunction)\n            clearInterval(searchAnimation)\n        }else{\n            for(var i = 0;i < bomb[count].length;i++){\n                const index = bomb[count][i][0] * tableVar.colSize + bomb[count][i][1]\n                const name = document.getElementById(index.toString()).className\n                if (WhichComponentSame(name) > 3) {\n                    setTable(index, componentKind.search)\n                }else{\n                    setTable(index, StartEndBombWeight(WhichComponentSame(name), componentKind.startSearch, componentKind.endSearch, componentKind.bombSearch, componentKind.weightSearch))\n                }\n            }\n        }\n        count += 1\n    }, speed)\n}\n\nexport function PathAnimation(path, speed, count, myCallbackFunction = null) {\n    Animation(path, speed, count, componentKind.path, myCallbackFunction)\n}\n\nexport function MazeAnimation(maze, speed, count, myCallbackFunction = null) {\n    Animation(maze, speed, count, componentKind.wall, myCallbackFunction)\n}\n\nexport function FinalAnimation(search, path, bomb){\n    var index = position.start[0] * tableVar.colSize + position.start[1]\n    if(bomb.length === 0){\n        setbackground(index, tableColor.search) \n    }else{\n        setbackground(index, tableColor.searchBomb)\n    }\n    for (var i = 0; i < search.length; i++) {\n        for (var j = 0; j < search[i].length; j++) {\n            index = search[i][j][0] * tableVar.colSize + search[i][j][1]\n            if(bomb.length === 0){\n                setbackground(index, tableColor.search)\n            }else{\n                setbackground(index, tableColor.searchBomb)\n            }\n        }\n    }\n    for (i = 0; i < bomb.length; i++) {\n        for (j = 0; j < bomb[i].length; j++) {\n            index = bomb[i][j][0] * tableVar.colSize + bomb[i][j][1]\n            setbackground(index, tableColor.search)\n        }\n    }\n    for (i = 0; i < path.length; i++) {\n        index = path[i][0] * tableVar.colSize + path[i][1]\n        setbackground(index, tableColor.path)\n    }\n}","class Queue {\n    constructor() {\n        this.queue = [];\n    }\n\n    append(val) {\n        this.queue.push(val);\n    }\n\n    popleft() {\n        if (this.isEmpty()) return -1;\n        return this.queue.shift();\n    }\n\n    isEmpty() {\n        return this.queue.length === 0;\n    }\n\n    getLength() {\n        return this.queue.length;\n    }\n\n    getArray() {\n        return this.queue;\n    }\n}\n\nexport default Queue;","class Distance {\n    constructor() {\n        this.dict = {};\n        this.max_d = 0;\n    }\n\n    // pos=[x, y], d=距離\n    set(pos, d) {\n        this.dict[pos] = d;\n        this.max_d = Math.max(this.max_d, d);\n    }\n\n    // 取得距離\n    get(pos) {\n        if (pos in this.dict) {\n            return this.dict[pos];\n        } else {\n            return -1;\n        }\n    }\n\n    // 從end開始找尋附近四周圍，第一個 \"有被找過的\" 且 \"距離最小的\"的點，並回傳一個array\n    getShortestPath(endPos) {\n        if (!(endPos in this.dict)) return []; // 若終點沒被找過，就回傳空值\n\n        var shortest = [endPos];\n        var x = endPos[0];\n        var y = endPos[1];\n        var visited = new Set();\n\n        visited.add(endPos.toString());\n        while (this.max_d > 0) {\n            var curD = Infinity;\n            var curX = x;\n            var curY = y;\n\n            // up\n            if ([x - 1, y] in this.dict && !(visited.has([x - 1, y].toString()))) {\n                if (this.dict[[x - 1, y]] < curD) {\n                    curX = x - 1;\n                    curY = y;\n                    curD = this.dict[[x - 1, y]];\n                }\n                visited.add([x - 1, y].toString());\n            }\n\n            // right\n            if ([x, y + 1] in this.dict && !(visited.has([x, y + 1].toString()))) {\n                if (this.dict[[x, y + 1]] < curD) {\n                    curX = x;\n                    curY = y + 1;\n                    curD = this.dict[[x, y + 1]];\n                }\n                visited.add([x, y + 1].toString());\n            }\n\n            // down\n            if ([x + 1, y] in this.dict && !(visited.has([x + 1, y].toString()))) {\n                if (this.dict[[x + 1, y]] < curD) {\n                    curX = x + 1;\n                    curY = y;\n                    curD = this.dict[[x + 1, y]];\n                }\n                visited.add([x + 1, y].toString());\n            }\n\n            // up\n            if ([x, y - 1] in this.dict && !(visited.has([x, y - 1].toString()))) {\n                if (this.dict[[x, y - 1]] < curD) {\n                    curX = x;\n                    curY = y - 1;\n                    curD = this.dict[[x, y - 1]];\n                }\n                visited.add([x, y - 1].toString());\n            }\n            x = curX;\n            y = curY;\n            shortest.unshift([x, y]);\n            this.max_d = curD;\n        }\n        if (shortest.length === 1) return []; // 如果沒有找到路徑(只有終點自己)，則不用跑最短路徑\n        return shortest;\n    }\n\n    clear() {\n        this.dict = {};\n        this.max_d = 0;\n    }\n}\n\nexport default Distance;","import { position } from '../../Core';\nimport Queue from '../../Core/Queue';\nimport Distance from '../../Core/Distance';\n\nfunction BFS(startCallback, speed) {\n    var times = 1 + (position.bomb === false ? 0 : 1); // 如果有bomb要執行2次\n    var retSearchPath = [];\n    var retBombPath = [];\n    var retShortestPath = [];\n\n    for (var i = 0; i < times; i++) {\n        var searchPath = [];\n        const visited = new Set();\n        const queue = new Queue();\n        var distance = new Distance();\n        var startPos = i === 0 ? position.start : position.bomb; // 第一次執行start，第二次bomb\n        var endPos = i === 0 && times > 1 ? position.bomb : position.end; // 第一次執行bomb，第二次end\n\n        distance.set(startPos, 0); // 加入自己\n        queue.append([startPos, 0]); // [pos, 距離]\n        visited.add(startPos.toString()); // 防止重複找尋\n        while (queue.getLength() > 0) {\n            var node = queue.popleft();\n            var x = node[0][0];\n            var y = node[0][1];\n            var nextD = node[1] + 1;\n\n            if (nextD > searchPath.length) searchPath.push([]); // 若有新的長度就增加array\n\n            if ([x, y].toString() === endPos.toString()) break; // 若找到終點就跳出\n\n            // left\n            if (y - 1 >= 0 && !([x, y - 1] in position.wall) && !(visited.has([x, y - 1].toString()))) {\n                queue.append([[x, y - 1], nextD]);\n                searchPath[nextD - 1].push([x, y - 1]);\n                distance.set([x, y - 1], nextD);\n                visited.add([x, y - 1].toString());\n            }\n\n            // up\n            if (x - 1 >= 0 && !([x - 1, y] in position.wall) && !(visited.has([x - 1, y].toString()))) {\n                queue.append([[x - 1, y], nextD]);\n                searchPath[nextD - 1].push([x - 1, y]);\n                distance.set([x - 1, y], nextD);\n                visited.add([x - 1, y].toString());\n            }\n\n            // right\n            // 這裡的position.rowSize怪怪的\n            if (y + 1 < position.colSize && !([x, y + 1] in position.wall) && !(visited.has([x, y + 1].toString()))) {\n                queue.append([[x, y + 1], nextD]);\n                searchPath[nextD - 1].push([x, y + 1]);\n                distance.set([x, y + 1], nextD);\n                visited.add([x, y + 1].toString());\n            }\n\n            // down\n            // 這裡的position.colSize怪怪的\n            if (x + 1 < position.rowSize && !([x + 1, y] in position.wall) && !(visited.has([x + 1, y].toString()))) {\n                queue.append([[x + 1, y], nextD]);\n                searchPath[nextD - 1].push([x + 1, y]);\n                distance.set([x + 1, y], nextD);\n                visited.add([x + 1, y].toString());\n            }\n\n        }\n\n        // 去除多找的一圈\n        while (distance.get(endPos) !== -1 && searchPath.length > distance.get(endPos)) {\n            searchPath.pop();\n        }\n\n        // 取得最短路徑\n        var shortest = distance.getShortestPath(endPos);\n\n        if (i === 0) {\n            retSearchPath = retSearchPath.concat(searchPath);\n        } else {\n            retBombPath = retBombPath.concat(searchPath);\n        }\n        retShortestPath = retShortestPath.concat(shortest);\n\n        if (distance.get(endPos) === -1) break; // 如果第一次沒找到終點，直接跳出\n    }\n    // 執行 start 動畫\n    startCallback(retSearchPath, retShortestPath, speed, retBombPath);\n}\nexport default BFS;","import { position } from '../../Core';\nimport Distance from '../../Core/Distance';\n\nfunction DFS(startCallback, speed) {\n    var retSearchPath = [];\n    var retBombPath = [];\n    var retShortestPath = [];\n    // retSearchPath 會等於 retShortestPath\n\n    function DoDFS(x, y, endPos, visited, startPath, distance, level) {\n        if (x < 0 || y < 0 || x >= position.rowSize || y >= position.colSize || [x, y] in position.wall || visited.has([x, y].toString())) {\n            return false;\n        }\n\n        visited.add([x, y].toString());\n        startPath.push([[x, y]]); // 每一層都是一個\n        distance.set([x, y], level);\n\n        if ([x, y].toString() === endPos.toString()) return true;\n\n\n        if (DoDFS(x - 1, y, endPos, visited, startPath, distance, level + 1)) {// up\n            return true;\n        }\n        if (DoDFS(x, y + 1, endPos, visited, startPath, distance, level + 1)) {// right\n            return true;\n        }\n        if (DoDFS(x + 1, y, endPos, visited, startPath, distance, level + 1)) {// down\n            return true;\n        }\n        if (DoDFS(x, y - 1, endPos, visited, startPath, distance, level + 1)) {// left\n            return true;\n        }\n    }\n    const visited = new Set();\n    const distance = new Distance();\n    var start = position.start;\n    if (position.bomb) {\n        DoDFS(start[0], start[1], position.bomb, visited, retSearchPath, distance, 0);\n        start = position.bomb;\n        retShortestPath = retShortestPath.concat(distance.getShortestPath(position.bomb));\n        distance.clear();\n        visited.clear();\n\n        // 有找到最小路徑才繼續\n        if (retShortestPath.length > 0) {\n            DoDFS(start[0], start[1], position.end, visited, retBombPath, distance, 0);\n            retShortestPath = retShortestPath.concat(distance.getShortestPath(position.end));\n        }\n    } else {\n        DoDFS(start[0], start[1], position.end, visited, retBombPath, distance, 0);\n        retShortestPath = retShortestPath.concat(distance.getShortestPath(position.end));\n    }\n    startCallback(retSearchPath, retShortestPath, speed, retBombPath);\n}\n\nexport default DFS;","import { position } from '../../Core';\nimport PriorityQueue from 'javascript-priority-queue'; //https://www.npmjs.com/package/javascript-priority-queue\n\nfunction Dijkstra(startCallback, speed) {\n    var retSearchPath = [];\n    var retBombPath = [];\n    var retShortestPath = [];\n\n    if (position.bomb) {\n        retShortestPath = retShortestPath.concat(DoDijkstra(position.start, position.bomb, retSearchPath));\n\n        // 有找到最小路徑才繼續\n        if (retShortestPath.length > 0) {\n            retShortestPath = retShortestPath.concat(DoDijkstra(position.bomb, position.end, retBombPath));\n        }\n    } else {\n        retShortestPath = retShortestPath.concat(DoDijkstra(position.start, position.end, retSearchPath));\n    }\n    // 執行 start 動畫\n    startCallback(retSearchPath, retShortestPath, speed, retBombPath);\n}\n\n/// 回傳最短路徑\nfunction DoDijkstra(startPos, endPos, searchPath) {\n    /*  //https://medium.com/basecs/finding-the-shortest-path-with-a-little-help-from-dijkstra-613149fbdc8e\n        Create Dijkstra table \n        \n        table = {pos : [shortest distance, previous vertex]}\n            * start pos : [0, null]\n            * use priority queue to pick the pos which contains current shortest disance.\n    */\n\n    // 先假設權重都是1\n    var i, j;\n    var weights = {}\n    for (i = 0; i < position.rowSize; i++) {\n        for (j = 0; j < position.colSize; j++) {\n            weights[[i, j]] = 1;\n        }\n    }\n\n    var current_shortest_path = new PriorityQueue('min');\n    var table = {}\n\n    // 設定table: 起始點為0，其他為無限大，所有的previous vertex均為null\n    // 設定目前最短路徑的queue\n    for (i = 0; i < position.rowSize; i++) {\n        for (j = 0; j < position.colSize; j++) {\n            var pos = [i, j]\n            table[pos] = [Infinity, null]; // 起始點走到pos的最短距離，上一個點\n        }\n    }\n    table[startPos] = [0, null]; // 設定起始點\n    current_shortest_path.enqueue(startPos, 0); // 設定目前最短路徑的queue\n\n\n    /* 演算法開始 */\n    var isFoundEnd = false;\n    var visited = new Set();\n    visited.add(startPos.toString()); // 加入已走過\n    searchPath.push([startPos]); // 加入搜尋範圍\n\n    while (current_shortest_path.size() > 0) {\n        // 1. 選出當前最小路徑的點 O(logn)\n        var curPos = current_shortest_path.dequeue();\n\n        // 2. 計算相鄰且尚未走過的點\n        // tmp = curPos.最短距離 + 走到下一點的權重\n        // 若 tmp < 下一點.最短距離 : 下一點.最短距離=tmp, 且previous vertex=curPos\n\n        var up = curPos[0] - 1 >= 0 ? [curPos[0] - 1, curPos[1]] : null;\n        var right = curPos[1] + 1 < position.colSize ? [curPos[0], curPos[1] + 1] : null;\n        var down = curPos[0] + 1 < position.rowSize ? [curPos[0] + 1, curPos[1]] : null;\n        var left = curPos[1] - 1 >= 0 ? [curPos[0], curPos[1] - 1] : null;\n\n        // eslint-disable-next-line\n        [up, right, down, left].forEach(nextPos => {\n            if (!nextPos || isFoundEnd || nextPos in position.wall) return; // 若超過邊界 or 已經找到終點了 or 是牆壁\n\n\n            if (visited.has(nextPos.toString())) {\n                return; // 已走過的點不走\n            }\n            else {\n                visited.add(nextPos.toString()); // 加入已走過\n                searchPath.push([nextPos]); // 加入搜尋範圍\n            }\n\n            var tmp = table[curPos][0] + weights[nextPos];\n            if (tmp < table[nextPos][0]) {\n                table[nextPos][0] = tmp;\n                table[nextPos][1] = curPos;\n            }\n            current_shortest_path.enqueue(nextPos, table[nextPos][0]); // 加入計算目前的最小的路徑\n\n            if (nextPos.toString() === endPos.toString()) { // 看是否找到終點了\n                isFoundEnd = true;\n            }\n        })\n\n        if (isFoundEnd) { // 找到終點跳出\n            break;\n        }\n    }\n\n\n    // 若有找到終點再判斷最小路徑\n    var curShortestPath = []\n    if (isFoundEnd) {\n        curPos = endPos;\n        while (curPos) { // 因為找到start時的previous vertex為null\n            curShortestPath.unshift(curPos);\n            curPos = table[curPos][1];\n        }\n    }\n    return curShortestPath;\n}\n\nexport default Dijkstra;","import { position } from '../../Core';\n\nfunction Astar(startCallback, speed) {\n    var retSearchPath = [];\n    var retBombPath = [];\n    var retShortestPath = [];\n\n    if (position.bomb) {\n        retShortestPath = retShortestPath.concat(DoAStar(position.start, position.bomb, retSearchPath))\n\n        // 有找到最小路徑才繼續\n        if (retShortestPath.length > 0) {\n            retShortestPath = retShortestPath.concat(DoAStar(position.bomb, position.end, retBombPath))\n        }\n    } else {\n        retShortestPath = retShortestPath.concat(DoAStar(position.start, position.end, retSearchPath))\n    }\n    // 執行 start 動畫\n    startCallback(retSearchPath, retShortestPath, speed, retBombPath);\n}\n\n// 回傳最短路徑，update search\nfunction DoAStar(startPos, endPos, searchPath) {\n    // 先假設權重都是1\n    var i, j;\n    var weights = {}\n    for (i = 0; i < position.rowSize; i++) {\n        for (j = 0; j < position.colSize; j++) {\n            weights[[i, j]] = 0;\n        }\n    }\n\n    var unvisited = [];\n    var table = {};\n\n    // 設定table: 起始點為0，其他為無限大，所有的previous vertex均為null\n    // 設定目前最短路徑的queue\n    for (i = 0; i < position.rowSize; i++) {\n        for (j = 0; j < position.colSize; j++) {\n            var pos = [i, j];\n\n            // 起始點走到pos的最短距離，上一個點，direction，total距離\n            table[pos] = [Infinity, null, null, Infinity];\n        }\n    }\n    table[startPos] = [0, null, \"up\", 0]; // 設定起始點\n    unvisited.push(startPos); // 設定目前最短路徑的queue\n\n    /* 演算法開始 */\n    var isFoundEnd = false;\n    var visited = new Set();\n    searchPath.push([startPos]); // 加入搜尋範圍\n    while (unvisited.length > 0) {\n        // 1. 選出當前最小路徑的點\n        var curPos = GetClosestNode(table, unvisited, endPos);\n\n        if (curPos in position.wall) {\n            continue; // 牆壁不走\n        }\n\n        // 2. 計算相鄰且尚未走過的點\n        var up = curPos[0] - 1 >= 0 ? [curPos[0] - 1, curPos[1]] : null;\n        var right = curPos[1] + 1 < position.colSize ? [curPos[0], curPos[1] + 1] : null;\n        var down = curPos[0] + 1 < position.rowSize ? [curPos[0] + 1, curPos[1]] : null;\n        var left = curPos[1] - 1 >= 0 ? [curPos[0], curPos[1] - 1] : null;\n\n        // eslint-disable-next-line\n        [up, right, down, left].forEach((nextPos, idx) => {\n            if (!nextPos || isFoundEnd || nextPos in position.wall) return; // 若超過邊界 or 已經找到終點了 or 是牆壁\n\n            // 策略為：只考慮 目前總分+權重+轉向分數\n            // 且，走過的也要更新，只是不會加入unvisited，因此不會在上面continue\n            var total = table[curPos][0] + weights[nextPos] + GetScore(table[curPos][2], idx);\n            if (total < table[nextPos][0]) {\n                table[nextPos][0] = total;\n                table[nextPos][3] = table[nextPos][0] + GetHeuristic(nextPos, endPos);\n                table[nextPos][1] = curPos;\n                switch (idx) {\n                    case 0:\n                        table[nextPos][2] = \"up\";\n                        break;\n                    case 1:\n                        table[nextPos][2] = \"right\";\n                        break;\n                    case 2:\n                        table[nextPos][2] = \"down\";\n                        break;\n                    case 3:\n                        table[nextPos][2] = \"left\";\n                        break;\n                    default:\n                        break;\n                }\n            }\n\n            if (!visited.has(curPos.toString())) {\n                unvisited.push(nextPos);\n            }\n\n            if (nextPos.toString() === endPos.toString()) { // 看是否找到終點了\n                isFoundEnd = true;\n            }\n        })\n        if (!visited.has(curPos.toString())) {\n            searchPath.push([curPos]); // 加入搜尋範圍\n            visited.add(curPos.toString()); // 加入已走過\n        }\n\n        if (isFoundEnd) { // 找到終點跳出\n            break;\n        }\n    }\n\n    // 若有找到終點再判斷最小路徑\n    var curShortestPath = []\n    if (isFoundEnd) {\n        curPos = endPos;\n        while (curPos) { // 因為找到start時的previous vertex為null\n            curShortestPath.unshift(curPos);\n            curPos = table[curPos][1];\n        }\n    }\n    return curShortestPath;\n}\n\n// 推測值：用距離來表示，因為是棋盤，所以改成最短距離幾格\nfunction GetHeuristic(startPos, endPos) {\n    return Math.abs(endPos[0] - startPos[0]) + Math.abs(endPos[1] - startPos[1]);\n}\n\n// 找出分數最小點，策略：考慮所有的分數 目前總分+權重+轉向分數+估值\nfunction GetClosestNode(table, unvisited, endPos) {\n    let retPos, retIndex;\n    for (var i = 0; i < unvisited.length; i++) {\n        if (!retPos || table[retPos][3] > table[unvisited[i]][3]) {\n            retPos = unvisited[i];\n            retIndex = i;\n\n            // 若相等則取得 估值大的（距離目標遠的）\n        } else if (table[retPos][3] === table[unvisited[i]][3]) {\n            if (GetHeuristic(retPos, endPos) > GetHeuristic(unvisited[i], endPos)) {\n                retPos = unvisited[i];\n                retIndex = i;\n            }\n        }\n    }\n\n    unvisited.splice(retIndex, 1);\n    return retPos;\n}\n\nfunction GetScore(direction, index) {\n    var score = 0;\n    switch (direction) {\n        case \"up\":\n            switch (index) {\n                case 0:\n                    score = 1;\n                    break;\n                case 1:\n                    score = 2;\n                    break;\n                case 2:\n                    score = 3;\n                    break;\n                case 3:\n                    score = 2;\n                    break;\n                default:\n                    break;\n            }\n            break;\n        case \"right\":\n            switch (index) {\n                case 0:\n                    score = 2;\n                    break;\n                case 1:\n                    score = 1;\n                    break;\n                case 2:\n                    score = 2;\n                    break;\n                case 3:\n                    score = 3;\n                    break;\n                default:\n                    break;\n            }\n            break;\n        case \"down\":\n            switch (index) {\n                case 0:\n                    score = 3;\n                    break;\n                case 1:\n                    score = 2;\n                    break;\n                case 2:\n                    score = 1;\n                    break;\n                case 3:\n                    score = 2;\n                    break;\n                default:\n                    break;\n            }\n            break;\n        case \"left\":\n            switch (index) {\n                case 0:\n                    score = 2;\n                    break;\n                case 1:\n                    score = 3;\n                    break;\n                case 2:\n                    score = 2;\n                    break;\n                case 3:\n                    score = 1;\n                    break;\n                default:\n                    break;\n            }\n            break;\n        default:\n            break;\n    }\n    return score;\n}\n\nexport default Astar;","import { position } from '../../Core';\n\nfunction GreedyBestFirstSearch(startCallback, speed) {\n    var retSearchPath = [];\n    var retBombPath = [];\n    var retShortestPath = [];\n\n    if (position.bomb) {\n        retShortestPath = retShortestPath.concat(DoGreedyBestFirstSearch(position.start, position.bomb, retSearchPath));\n        retShortestPath = retShortestPath.concat(DoGreedyBestFirstSearch(position.bomb, position.end, retBombPath));\n    } else {\n        retShortestPath = retShortestPath.concat(DoGreedyBestFirstSearch(position.start, position.end, retSearchPath));\n    }\n    // 執行 start 動畫\n    startCallback(retSearchPath, retShortestPath, speed, retBombPath);\n}\n\nfunction DoGreedyBestFirstSearch(startPos, endPos, searchPath) {\n    // 先假設權重都是1\n    var i, j;\n    var weights = {}\n    for (i = 0; i < position.rowSize; i++) {\n        for (j = 0; j < position.colSize; j++) {\n            weights[[i, j]] = 1;\n        }\n    }\n\n    var unvisited = [];\n    var table = {};\n\n    // 設定table: 起始點為0，其他為無限大，所有的previous vertex均為null\n    // 設定目前最短路徑的queue\n    for (i = 0; i < position.rowSize; i++) {\n        for (j = 0; j < position.colSize; j++) {\n            var pos = [i, j];\n\n            // 起始點走到pos的最短距離，上一個點，direction，total距離\n            table[pos] = [Infinity, null, null, null];\n        }\n    }\n    table[startPos] = [0, null, \"up\", 0]; // 設定起始點\n    unvisited.push(startPos); // 設定目前最短路徑的queue\n\n    /* 演算法開始 */\n    var isFoundEnd = false;\n    var visited = new Set();\n    searchPath.push([startPos]); // 加入搜尋範圍\n    while (unvisited.length > 0) {\n        // 1. 選出當前最小路徑的點\n        var curPos = GetClosestNode(table, unvisited, endPos);\n\n        if (curPos in position.wall) {\n            continue; // 牆壁不走\n        }\n\n        // 2. 計算相鄰且尚未走過的點\n        var up = curPos[0] - 1 >= 0 ? [curPos[0] - 1, curPos[1]] : null;\n        var right = curPos[1] + 1 < position.colSize ? [curPos[0], curPos[1] + 1] : null;\n        var down = curPos[0] + 1 < position.rowSize ? [curPos[0] + 1, curPos[1]] : null;\n        var left = curPos[1] - 1 >= 0 ? [curPos[0], curPos[1] - 1] : null;\n\n        // eslint-disable-next-line\n        [up, right, down, left].forEach((nextPos, idx) => {\n            if (!nextPos || isFoundEnd || nextPos in position.wall) return; // 若超過邊界 or 已經找到終點了 or 是牆壁\n\n            // 策略為：只考慮 估值+轉向分數\n            var total = table[curPos][0] + GetScore(table[nextPos][2], idx);\n            if (total < table[nextPos][0]) {\n                table[nextPos][0] = GetHeuristic(nextPos, endPos);\n                table[nextPos][1] = curPos; // 因為table[0]現在是heuristic（因此不更新），所以四周圍直接更新成目前的點就行\n                switch (idx) {\n                    case 0:\n                        table[nextPos][2] = \"up\";\n                        break;\n                    case 1:\n                        table[nextPos][2] = \"right\";\n                        break;\n                    case 2:\n                        table[nextPos][2] = \"down\";\n                        break;\n                    case 3:\n                        table[nextPos][2] = \"left\";\n                        break;\n                    default:\n                        break;\n                }\n            }\n            if (!visited.has(curPos.toString())) {\n                unvisited.push(nextPos);\n            }\n\n            if (nextPos.toString() === endPos.toString()) { // 看是否找到終點了\n                isFoundEnd = true;\n            }\n        })\n        if (!visited.has(curPos.toString())) {\n            visited.add(curPos.toString()); // 加入已走過\n            searchPath.push([curPos]); // 加入搜尋範圍\n        }\n        if (isFoundEnd) { // 找到終點跳出\n            break;\n        }\n    }\n\n    // 若有找到終點再判斷最小路徑\n    var curShortestPath = []\n    if (isFoundEnd) {\n        curPos = endPos;\n        while (curPos) { // 因為找到start時的previous vertex為null\n            curShortestPath.unshift(curPos);\n            curPos = table[curPos][1];\n        }\n    }\n    return curShortestPath;\n}\n\n// 推測值：用距離來表示，因為是棋盤，所以改成最短距離幾格\nfunction GetHeuristic(startPos, endPos) {\n    return Math.abs(endPos[0] - startPos[0]) + Math.abs(endPos[1] - startPos[1]);\n}\n\n// 找出分數最小點，策略：考慮所有的GetHeuristic\nfunction GetClosestNode(table, unvisited, endPos) {\n    let retPos, retIndex;\n    for (var i = 0; i < unvisited.length; i++) {\n        if (!retPos || table[retPos][0] > table[unvisited[i]][0]) {\n            retPos = unvisited[i];\n            retIndex = i;\n\n            // 若相等則取得 估值大的（距離目標遠的）\n        } else if (table[retPos][0] === table[unvisited[i]][0]) {\n            if (GetHeuristic(retPos, endPos) > GetHeuristic(unvisited[i], endPos)) {\n                retPos = unvisited[i];\n                retIndex = i;\n            }\n        }\n    }\n\n    unvisited.splice(retIndex, 1);\n    return retPos;\n}\n\n// 取得轉向分數\n// 考慮轉向分數是為了只搜尋一條線，如果沒有這個分數，則搜尋會變成三條線，因為１點的前下上 距離終點 的估值可能相同，所以會走三條路\nfunction GetScore(direction, index) {\n    var score = 0;\n    switch (direction) {\n        case \"up\":\n            switch (index) {\n                case 0:\n                    score = 1;\n                    break;\n                case 1:\n                    score = 2;\n                    break;\n                case 2:\n                    score = 3;\n                    break;\n                case 3:\n                    score = 2;\n                    break;\n                default:\n                    break;\n            }\n            break;\n        case \"right\":\n            switch (index) {\n                case 0:\n                    score = 2;\n                    break;\n                case 1:\n                    score = 1;\n                    break;\n                case 2:\n                    score = 2;\n                    break;\n                case 3:\n                    score = 3;\n                    break;\n                default:\n                    break;\n            }\n            break;\n        case \"down\":\n            switch (index) {\n                case 0:\n                    score = 3;\n                    break;\n                case 1:\n                    score = 2;\n                    break;\n                case 2:\n                    score = 1;\n                    break;\n                case 3:\n                    score = 2;\n                    break;\n                default:\n                    break;\n            }\n            break;\n        case \"left\":\n            switch (index) {\n                case 0:\n                    score = 2;\n                    break;\n                case 1:\n                    score = 3;\n                    break;\n                case 2:\n                    score = 2;\n                    break;\n                case 3:\n                    score = 1;\n                    break;\n                default:\n                    break;\n            }\n            break;\n        default:\n            break;\n    }\n    return score;\n}\n\nexport default GreedyBestFirstSearch;","import { position } from '../../Core';\n\nfunction Swarm(startCallback, speed) {\n    var retSearchPath = [];\n    var retBombPath = [];\n    var retShortestPath = [];\n\n    if (position.bomb) {\n        retShortestPath = retShortestPath.concat(DoSwarm(position.start, position.bomb, retSearchPath))\n\n        // 有找到最小路徑才繼續\n        if (retShortestPath.length > 0) {\n            retShortestPath = retShortestPath.concat(DoSwarm(position.bomb, position.end, retBombPath))\n        }\n    } else {\n        retShortestPath = retShortestPath.concat(DoSwarm(position.start, position.end, retSearchPath))\n    }\n    // 執行 start 動畫\n    startCallback(retSearchPath, retShortestPath, speed, retBombPath);\n}\n\n// 回傳最短路徑，update search\nfunction DoSwarm(startPos, endPos, searchPath) {\n    // 先假設權重都是1\n    var i, j;\n    var weights = {}\n    for (i = 0; i < position.rowSize; i++) {\n        for (j = 0; j < position.colSize; j++) {\n            weights[[i, j]] = 0;\n        }\n    }\n\n    var unvisited = [];\n    var table = {};\n\n    // 設定table: 起始點為0，其他為無限大，所有的previous vertex均為null\n    // 設定目前最短路徑的queue\n    for (i = 0; i < position.rowSize; i++) {\n        for (j = 0; j < position.colSize; j++) {\n            var pos = [i, j];\n\n            // 起始點走到pos的最短距離，上一個點，direction，total距離\n            table[pos] = [Infinity, null, null, Infinity];\n        }\n    }\n    table[startPos] = [0, null, \"right\", 0]; // 設定起始點\n    unvisited.push(startPos); // 設定目前最短路徑的queue\n\n    /* 演算法開始 */\n    var isFoundEnd = false;\n    var visited = new Set();\n    searchPath.push([startPos]); // 加入搜尋範圍\n    while (unvisited.length > 0) {\n        // 1. 選出當前最小路徑的點\n        var curPos = GetClosestNode(table, unvisited, endPos);\n\n        if (curPos in position.wall) {\n            continue; // 牆壁不走\n        }\n\n        // 2. 計算相鄰且尚未走過的點\n        var up = curPos[0] - 1 >= 0 ? [curPos[0] - 1, curPos[1]] : null;\n        var right = curPos[1] + 1 < position.colSize ? [curPos[0], curPos[1] + 1] : null;\n        var down = curPos[0] + 1 < position.rowSize ? [curPos[0] + 1, curPos[1]] : null;\n        var left = curPos[1] - 1 >= 0 ? [curPos[0], curPos[1] - 1] : null;\n\n        // eslint-disable-next-line\n        [up, right, down, left].forEach((nextPos, idx) => {\n            if (!nextPos || isFoundEnd || nextPos in position.wall) return; // 若超過邊界 or 已經找到終點了 or 是牆壁\n\n            // 策略為：只考慮 目前總分+權重+轉向分數\n            // 且，走過的也要更新，只是不會加入unvisited，因此不會在上面continue\n            var total = table[curPos][0] + weights[nextPos] + GetScore(table[curPos][2], idx) + Math.pow(GetHeuristic(nextPos, endPos), 2);\n            if (total < table[nextPos][0]) {\n                table[nextPos][0] = total;\n                table[nextPos][3] = table[nextPos][0];\n                table[nextPos][1] = curPos;\n                switch (idx) {\n                    case 0:\n                        table[nextPos][2] = \"up\";\n                        break;\n                    case 1:\n                        table[nextPos][2] = \"right\";\n                        break;\n                    case 2:\n                        table[nextPos][2] = \"down\";\n                        break;\n                    case 3:\n                        table[nextPos][2] = \"left\";\n                        break;\n                    default:\n                        break;\n                }\n            }\n\n            if (!visited.has(curPos.toString())) {\n                unvisited.push(nextPos);\n            }\n\n            if (nextPos.toString() === endPos.toString()) { // 看是否找到終點了\n                isFoundEnd = true;\n            }\n        })\n        if (!visited.has(curPos.toString())) {\n            searchPath.push([curPos]); // 加入搜尋範圍\n            visited.add(curPos.toString()); // 加入已走過\n        }\n\n        if (isFoundEnd) { // 找到終點跳出\n            break;\n        }\n    }\n\n    // 若有找到終點再判斷最小路徑\n    var curShortestPath = []\n    if (isFoundEnd) {\n        curPos = endPos;\n        while (curPos) { // 因為找到start時的previous vertex為null\n            curShortestPath.unshift(curPos);\n            curPos = table[curPos][1];\n        }\n    }\n    return curShortestPath;\n}\n\n// 推測值：用距離來表示，因為是棋盤，所以改成最短距離幾格\nfunction GetHeuristic(startPos, endPos) {\n    return Math.abs(endPos[0] - startPos[0]) + Math.abs(endPos[1] - startPos[1]);\n}\n\n// 找出分數最小點，策略：考慮所有的分數 目前總分+權重+轉向分數+估值\nfunction GetClosestNode(table, unvisited, endPos) {\n    let retPos, retIndex;\n    for (var i = 0; i < unvisited.length; i++) {\n        if (!retPos || table[retPos][3] > table[unvisited[i]][3]) {\n            retPos = unvisited[i];\n            retIndex = i;\n        }\n    }\n\n    unvisited.splice(retIndex, 1);\n    return retPos;\n}\n\nfunction GetScore(direction, index) {\n    var score = 0;\n    switch (direction) {\n        case \"up\":\n            switch (index) {\n                case 0:\n                    score = 1;\n                    break;\n                case 1:\n                    score = 2;\n                    break;\n                case 2:\n                    score = 3;\n                    break;\n                case 3:\n                    score = 2;\n                    break;\n                default:\n                    break;\n            }\n            break;\n        case \"right\":\n            switch (index) {\n                case 0:\n                    score = 2;\n                    break;\n                case 1:\n                    score = 1;\n                    break;\n                case 2:\n                    score = 2;\n                    break;\n                case 3:\n                    score = 3;\n                    break;\n                default:\n                    break;\n            }\n            break;\n        case \"down\":\n            switch (index) {\n                case 0:\n                    score = 3;\n                    break;\n                case 1:\n                    score = 2;\n                    break;\n                case 2:\n                    score = 1;\n                    break;\n                case 3:\n                    score = 2;\n                    break;\n                default:\n                    break;\n            }\n            break;\n        case \"left\":\n            switch (index) {\n                case 0:\n                    score = 2;\n                    break;\n                case 1:\n                    score = 3;\n                    break;\n                case 2:\n                    score = 2;\n                    break;\n                case 3:\n                    score = 1;\n                    break;\n                default:\n                    break;\n            }\n            break;\n        default:\n            break;\n    }\n    return score;\n}\n\nexport default Swarm;","import { position } from '../../Core';\n\nfunction ConvergentSwarm(startCallback, speed) {\n    var retSearchPath = [];\n    var retBombPath = [];\n    var retShortestPath = [];\n\n    if (position.bomb) {\n        retShortestPath = retShortestPath.concat(DoConvergentSwarm(position.start, position.bomb, retSearchPath))\n\n        // 有找到最小路徑才繼續\n        if (retShortestPath.length > 0) {\n            retShortestPath = retShortestPath.concat(DoConvergentSwarm(position.bomb, position.end, retBombPath))\n        }\n    } else {\n        retShortestPath = retShortestPath.concat(DoConvergentSwarm(position.start, position.end, retSearchPath))\n    }\n    // 執行 start 動畫\n    startCallback(retSearchPath, retShortestPath, speed, retBombPath);\n}\n\n// 回傳最短路徑，update search\nfunction DoConvergentSwarm(startPos, endPos, searchPath) {\n    // 先假設權重都是1\n    var i, j;\n    var weights = {}\n    for (i = 0; i < position.rowSize; i++) {\n        for (j = 0; j < position.colSize; j++) {\n            weights[[i, j]] = 0;\n        }\n    }\n\n    var unvisited = [];\n    var table = {};\n\n    // 設定table: 起始點為0，其他為無限大，所有的previous vertex均為null\n    // 設定目前最短路徑的queue\n    for (i = 0; i < position.rowSize; i++) {\n        for (j = 0; j < position.colSize; j++) {\n            var pos = [i, j];\n\n            // 起始點走到pos的最短距離，上一個點，direction，total距離\n            table[pos] = [Infinity, null, null, Infinity];\n        }\n    }\n    table[startPos] = [0, null, \"right\", 0]; // 設定起始點\n    unvisited.push(startPos); // 設定目前最短路徑的queue\n\n    /* 演算法開始 */\n    var isFoundEnd = false;\n    var visited = new Set();\n    searchPath.push([startPos]); // 加入搜尋範圍\n    while (unvisited.length > 0) {\n        // 1. 選出當前最小路徑的點\n        var curPos = GetClosestNode(table, unvisited, endPos);\n\n        if (curPos in position.wall) {\n            continue; // 牆壁不走\n        }\n\n        // 2. 計算相鄰且尚未走過的點\n        var up = curPos[0] - 1 >= 0 ? [curPos[0] - 1, curPos[1]] : null;\n        var right = curPos[1] + 1 < position.colSize ? [curPos[0], curPos[1] + 1] : null;\n        var down = curPos[0] + 1 < position.rowSize ? [curPos[0] + 1, curPos[1]] : null;\n        var left = curPos[1] - 1 >= 0 ? [curPos[0], curPos[1] - 1] : null;\n\n        // eslint-disable-next-line\n        [up, right, down, left].forEach((nextPos, idx) => {\n            if (!nextPos || isFoundEnd || nextPos in position.wall) return; // 若超過邊界 or 已經找到終點了 or 是牆壁\n\n            // 策略為：只考慮 目前總分+權重+轉向分數\n            // 且，走過的也要更新，只是不會加入unvisited，因此不會在上面continue\n            var total = table[curPos][0] + (weights[nextPos] + GetScore(table[curPos][2], idx)) * Math.pow(GetHeuristic(nextPos, endPos), 7);\n            if (total < table[nextPos][0]) {\n                table[nextPos][0] = total;\n                table[nextPos][3] = table[nextPos][0];\n                table[nextPos][1] = curPos;\n                switch (idx) {\n                    case 0:\n                        table[nextPos][2] = \"up\";\n                        break;\n                    case 1:\n                        table[nextPos][2] = \"right\";\n                        break;\n                    case 2:\n                        table[nextPos][2] = \"down\";\n                        break;\n                    case 3:\n                        table[nextPos][2] = \"left\";\n                        break;\n                    default:\n                        break;\n                }\n            }\n\n            if (!visited.has(curPos.toString())) {\n                unvisited.push(nextPos);\n            }\n\n            if (nextPos.toString() === endPos.toString()) { // 看是否找到終點了\n                isFoundEnd = true;\n            }\n        })\n        if (!visited.has(curPos.toString())) {\n            searchPath.push([curPos]); // 加入搜尋範圍\n            visited.add(curPos.toString()); // 加入已走過\n        }\n\n        if (isFoundEnd) { // 找到終點跳出\n            break;\n        }\n    }\n\n    // 若有找到終點再判斷最小路徑\n    var curShortestPath = []\n    if (isFoundEnd) {\n        curPos = endPos;\n        while (curPos) { // 因為找到start時的previous vertex為null\n            curShortestPath.unshift(curPos);\n            curPos = table[curPos][1];\n        }\n    }\n    return curShortestPath;\n}\n\n// 推測值：用距離來表示，因為是棋盤，所以改成最短距離幾格\nfunction GetHeuristic(startPos, endPos) {\n    return Math.abs(endPos[0] - startPos[0]) + Math.abs(endPos[1] - startPos[1]);\n}\n\n// 找出分數最小點，策略：考慮所有的分數 目前總分+權重+轉向分數+估值\nfunction GetClosestNode(table, unvisited, endPos) {\n    let retPos, retIndex;\n    for (var i = 0; i < unvisited.length; i++) {\n        if (!retPos || table[retPos][3] > table[unvisited[i]][3]) {\n            retPos = unvisited[i];\n            retIndex = i;\n        }\n    }\n\n    unvisited.splice(retIndex, 1);\n    return retPos;\n}\n\nfunction GetScore(direction, index) {\n    var score = 0;\n    switch (direction) {\n        case \"up\":\n            switch (index) {\n                case 0:\n                    score = 1;\n                    break;\n                case 1:\n                    score = 2;\n                    break;\n                case 2:\n                    score = 3;\n                    break;\n                case 3:\n                    score = 2;\n                    break;\n                default:\n                    break;\n            }\n            break;\n        case \"right\":\n            switch (index) {\n                case 0:\n                    score = 2;\n                    break;\n                case 1:\n                    score = 1;\n                    break;\n                case 2:\n                    score = 2;\n                    break;\n                case 3:\n                    score = 3;\n                    break;\n                default:\n                    break;\n            }\n            break;\n        case \"down\":\n            switch (index) {\n                case 0:\n                    score = 3;\n                    break;\n                case 1:\n                    score = 2;\n                    break;\n                case 2:\n                    score = 1;\n                    break;\n                case 3:\n                    score = 2;\n                    break;\n                default:\n                    break;\n            }\n            break;\n        case \"left\":\n            switch (index) {\n                case 0:\n                    score = 2;\n                    break;\n                case 1:\n                    score = 3;\n                    break;\n                case 2:\n                    score = 2;\n                    break;\n                case 3:\n                    score = 1;\n                    break;\n                default:\n                    break;\n            }\n            break;\n        default:\n            break;\n    }\n    return score;\n}\n\nexport default ConvergentSwarm;","import BFS from '../../Backend/Algorithms/BFS';\nimport DFS from '../../Backend/Algorithms/DFS';\nimport Dijkstra from '../../Backend/Algorithms/Dijkstra';\nimport Astar from '../../Backend/Algorithms/Astar';\nimport GreedyBestFirstSearch from '../../Backend/Algorithms/GreedyBestFirstSearch';\nimport Swarm from '../../Backend/Algorithms/Swarm';\nimport ConvergentSwarm from '../../Backend/Algorithms/ConvergentSwarm';\n\n\nexport function UpdateTable(Start, ClearPath, algorithm, speed) {\n    ClearPath(false)\n    switch (algorithm.get) {\n        case \"Algorithm_Dijkstra\":\n            Dijkstra(Start, speed.get[1]);\n            break;\n        case 'Algorithm_AStar':\n            Astar(Start, speed.get[1]);\n            break;\n        case \"Algorithm_Greedy_Best_First\":\n            GreedyBestFirstSearch(Start, speed.get[1]);\n            break;\n        case \"Algorithm_Swarm\":\n            Swarm(Start, speed.get[1]);\n            break;\n        case \"Algorithm_Convergent_Swarm\":\n            ConvergentSwarm(Start, speed.get[1]);\n            break;\n        case \"Algorithm_Bidrectional_Swarm\":\n            break;\n        case \"Algorithm_Breadth_First\":\n            BFS(Start, speed.get[1]);\n            break;\n        case \"Algorithm_Depth_First\":\n            DFS(Start, speed.get[1]);\n            break;\n        default:\n            break;\n    }\n}","import { useContext } from 'react'\nimport { tableVar, touchContext, updateContext, componentKind } from './TableIndex'\nimport { SearchAnimation, SearchBombAnimation, MazeAnimation, FinalAnimation } from './Animation'\nimport { sysStatusContext, algorithmContext, bombContext, speedContext } from '../../Core'\nimport { setTable, backgroundReset } from './SetTable'\nimport { UpdateTable } from './UpdateTable'\nimport { WhichComponentSame } from './WhichComp'\n\n\nfunction ButtonEvent() {\n    const [touch, update] = [useContext(touchContext), useContext(updateContext)]\n    const [algorithm, bomb, speed, sysStatus] = [useContext(algorithmContext), useContext(bombContext), useContext(speedContext), useContext(sysStatusContext)]\n    var updateVar = true\n\n    const Start = (search, path, speed, bomb = []) => {\n        if (update.get && updateVar) {\n            FinalAnimation(search, path, bomb)\n        }else {\n            sysStatus.set(\"RUNNING\")\n            update.set(\"True\")\n            updateVar = true\n            console.log(\"Start\")\n            SearchBombAnimation(search, bomb, path, speed, 0, SearchAnimation, () => sysStatus.set(\"IDLE\"))\n        }\n    }\n\n    const CreateMaze = (maze, speed) => {\n        backgroundReset()\n        sysStatus.set(\"RUNNING\");\n        MazeAnimation(maze, speed, 0, () => sysStatus.set(\"IDLE\"));\n    }\n\n    const Addbomb = () => {\n        console.log(\"AddBomb\" + update.get)\n        const index = Math.floor(tableVar.rowSize / 2) * tableVar.colSize + Math.floor(tableVar.colSize / 2)\n        const name = document.getElementById(index.toString()).className\n\n        if (WhichComponentSame(name) <= 2) {\n            return\n        }\n\n        bomb.set(\"True\")\n        setTable(index.toString(), componentKind.bomb)\n\n        if (update.get) {\n            UpdateTable(Start, ClearPath, algorithm, speed)\n        }\n    }\n\n    const RemoveBomb = () => {\n        console.log(\"RemoveBomb\")\n        for (var i = 0; i < tableVar.rowSize * tableVar.colSize; i++) {\n            const name = document.getElementById(i.toString()).className\n            if (WhichComponentSame(name) === 2) {\n                setTable(i, componentKind.background)\n                break\n            }\n        }\n        bomb.set(\"False\")\n\n        if (update.get) {\n            UpdateTable(Start, ClearPath, algorithm, speed)\n        }\n    }\n\n    const ClearWalls = () => {\n        console.log(\"ClearWall\")\n        for (var i = 0; i < tableVar.rowSize * tableVar.colSize; i++) {\n            const name = document.getElementById(i.toString()).className\n            if (WhichComponentSame(name) === 3 || WhichComponentSame(name) === 4) {\n                setTable(i, componentKind.background)\n            }\n        }\n        touch.set(\"\")\n        ClearPath()\n    }\n\n    const ClearPath = (event = true) => {\n        console.log(\"ClearPath\")\n        backgroundReset()\n        if (event) {\n            update.set(\"False\")\n            updateVar = false\n        }\n        for (var i = 0; i < tableVar.rowSize * tableVar.colSize; i++) {\n            const name = document.getElementById(i.toString()).className\n            if (WhichComponentSame(name) >= 5 && WhichComponentSame(name) <= 7) {\n                setTable(i, componentKind.background)\n            }\n        }\n    }\n\n    const ClearBoard = () => {\n        console.log(\"ClearBoard\")\n        update.set(\"False\")\n        for (var i = 0; i < tableVar.rowSize * tableVar.colSize; i++) {\n            setTable(i, componentKind.background)\n        }\n        setTable(Math.floor(tableVar.rowSize / 2) * tableVar.colSize + Math.floor(tableVar.colSize / 4), componentKind.start)\n        setTable(Math.floor(tableVar.rowSize / 2 + 1) * tableVar.colSize - Math.floor(tableVar.colSize / 4), componentKind.end)\n        touch.set(\"\")\n        bomb.set(\"False\")\n    }\n\n    return { Start, Addbomb, RemoveBomb, ClearWalls, ClearPath, ClearBoard, CreateMaze }\n}\n\nexport default ButtonEvent\n\n\n\n","import React, { useContext } from 'react';\r\nimport { NavDropdown, Nav } from 'react-bootstrap';\r\nimport { algorithmContext, sysStatusContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\nimport ButtonEvent from '../TableHelper/ButtonEvent';\r\n\r\nfunction DropdownAlgorithm() {\r\n    const algoContext = useContext(algorithmContext);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const [className, toggleHandler] = Colored();\r\n    const buttonEvent = ButtonEvent()\r\n\r\n    const DropdownAlgorithmHandler = (eventKey) => {\r\n\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Algorithm_Dijkstra\":\r\n                algoContext.set('Algorithm_Dijkstra');\r\n                break;\r\n            case \"Algorithm_AStar\":\r\n                algoContext.set('Algorithm_AStar');\r\n                break;\r\n            case \"Algorithm_Greedy_Best_First\":\r\n                algoContext.set('Algorithm_Greedy_Best_First');\r\n                break;\r\n            case \"Algorithm_Swarm\":\r\n                algoContext.set('Algorithm_Swarm');\r\n                break;\r\n            case \"Algorithm_Convergent_Swarm\":\r\n                algoContext.set('Algorithm_Convergent_Swarm');\r\n                break;\r\n            case \"Algorithm_Bidrectional_Swarm\":\r\n                buttonEvent.RemoveBomb(); // 按下去後要清空bomb\r\n                algoContext.set('Algorithm_Bidrectional_Swarm');\r\n                break;\r\n            case \"Algorithm_Breadth_First\":\r\n                algoContext.set('Algorithm_Breadth_First');\r\n                break;\r\n            case \"Algorithm_Depth_First\":\r\n                algoContext.set('Algorithm_Depth_First');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item>\r\n            <NavDropdown xs={1} title={<span className={className}>Algorithms</span>} id=\"DropdownAlgorithm\" onSelect={(eventKey) => DropdownAlgorithmHandler(eventKey)}\r\n                onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}\r\n            >\r\n                <NavDropdown.Item eventKey=\"Algorithm_Dijkstra\">Dijkstra's Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_AStar\">A* Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Greedy_Best_First\">Greedy Best-First Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Swarm\">Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Convergent_Swarm\">Convergent Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Bidrectional_Swarm\">Bidirectional Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Breadth_First\">Breadth-First Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Depth_First\">Depth-First Search</NavDropdown.Item>\r\n            </NavDropdown>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default DropdownAlgorithm;","import { position } from '../../Core';\n\nfunction Simple_Stair_Pattern() {\n    var walls = [];\n    var towardUp = true;\n    var x = position.rowSize;\n\n    for (var y = 0; y < position.colSize; y++) {\n        if (towardUp) {\n            x--;\n            if (x < 0) {\n                towardUp = false;\n                x = 1;\n            }\n        } else {\n            x++;\n            if (x >= position.rowSize) {\n                towardUp = true;\n                x = position.rowSize - 2;\n            }\n        }\n        walls.push([x, y]);\n    }\n    return walls;\n}\n\nexport default Simple_Stair_Pattern;","import { position } from '../../Core';\n\n// 取得四周圍\nexport const CreateAround = (wallSet = new Set()) => {\n    var walls = [];\n    var x = 0;\n    var y = 0;\n\n    // 取得外圍\n    var tmp = position.colSize - 1;\n    for (y = 0; y <= tmp; y++) {\n        walls.push([0, y]);\n        walls.push([0, tmp]);\n        wallSet.add([0, y].toString());\n        wallSet.add([0, tmp].toString());\n        tmp--;\n    }\n\n    for (x = 0; x < position.rowSize; x++) {\n        walls.push([x, 0]);\n        walls.push([x, position.colSize - 1]);\n        wallSet.add([x, 0].toString());\n        wallSet.add([x, position.colSize - 1].toString());\n\n    }\n\n    tmp = position.colSize - 1;\n    for (y = 0; y <= tmp; y++) {\n        walls.push([position.rowSize - 1, y]);\n        walls.push([position.rowSize - 1, tmp]);\n        wallSet.add([position.rowSize - 1, y].toString());\n        wallSet.add([position.rowSize - 1, tmp].toString());\n        tmp--;\n    }\n    return walls;\n}","import { position } from '../../Core';\nimport { CreateAround } from './Core';\n\nfunction Binary_Tree() {\n    var wallSet = new Set();\n    var walls = CreateAround(wallSet);\n    var x = 0;\n    var y = 0;\n\n    // Binary Tree to get random maze\n    // http://weblog.jamisbuck.org/2011/2/1/maze-generation-binary-tree-algorithm\n    for (x = 2; x <= position.rowSize - 2; x += 2) {\n        for (y = 2; y <= position.colSize - 2; y += 2) {\n            if (wallSet.has([x - 2, y].toString()) && wallSet.has([x, y - 2].toString())) {\n                var randomFace = Math.floor(Math.random() * 2) + 1;// 1=上，2=左\n                switch (randomFace) {\n                    case 1:\n                        walls.push([x - 1, y]);\n                        wallSet.add([x - 1, y].toString());\n                        break;\n                    case 2:\n                        walls.push([x, y - 1]);\n                        wallSet.add([x, y - 1].toString());\n                        break;\n                    default:\n                        break;\n                }\n            } else if (wallSet.has([x - 2, y].toString())) {\n                walls.push([x - 1, y]);\n                wallSet.add([x - 1, y].toString());\n            } else if (wallSet.has([x, y - 2].toString())) {\n                walls.push([x, y - 2]);\n                wallSet.add([x, y - 1].toString());\n            } else {\n                console.log('Some Error in Binary_Tree_Maze()');\n            }\n            walls.push([x, y]);\n            wallSet.add([x, y].toString());\n        }\n    }\n\n    return walls;\n}\n\nexport default Binary_Tree;","import { position } from '../../Core';\nimport { CreateAround } from './Core';\n\nconst direction = {\n    horizontal: 0,\n    vertical: 1\n}\n\nfunction RecursiveDivision() {\n    var walls = CreateAround();\n    DoRecursiveDivision(0, 0, position.colSize, position.rowSize, walls);\n    return walls;\n}\n\n// walls 為 pass-by-reference，動態加入生成牆壁\n// x, y, width, height均會包含 牆壁，要生成的範圍會在這個牆壁內\n// 為了保證道路暢通 且 周圍要都是牆壁，因此已經設計成棋盤長寬均為奇數，width, height也必為為奇數\n// 所以x, y必為偶數也就是牆壁必為偶數，則道路必為奇數\n// 因此 就能保證沒有死路，因為選擇牆壁的話（偶數），絕對不會擋到路（奇數）\nfunction DoRecursiveDivision(x, y, width, height, walls) {\n    // 而且為了保證道路暢通，兩個牆壁+一個空白才會形成一個道路\n    // 因此長跟寬必須至少大於3\n    if (width < 4 || height < 4) {\n        return;\n    }\n\n    // 選擇切割方向：挑選短的那邊，一樣就random\n    var curDirection = null;\n    if (width < height) curDirection = direction.horizontal;\n    else if (width > height) curDirection = direction.vertical;\n    else curDirection = Math.round(Math.random());\n\n    var door;\n    if (curDirection === direction.horizontal) {\n        // 假設現在height=11，表示x=x0跟x=10的那整條都是牆壁\n        // 則 x建立牆壁的範圍為 2~8 (牆壁跟牆壁中間要留一條路)\n\n        // 因此x要x0+2，而剩下的random範圍為0~6且只能為偶數\n        var randomX = x + 2 + Random_0_to_n(height - 4);\n\n        // 假設width = 9，表示y=y0跟y=8的那整條都是牆壁\n        // 開路的範圍為 y0+ 1~7（但開路必為奇數），而剩下的random範圍為0~6且只能為偶數\n        door = y + 1 + Random_0_to_n(width - 3);\n\n        // 建立牆壁，範圍從 y0~y0+width\n        for (var _y = y; _y < y + width; _y++) {\n            if (_y !== door) {\n                walls.push([randomX, _y]);\n            }\n        }\n\n        // 跑 x,y,width 且 height變成了剛剛選的高-x0（跑上面）\n        DoRecursiveDivision(x, y, width, randomX - x, walls);\n\n        // 跑 新x, y, width 且 height變成了 目前總高 - 剛剛選的高度(跑下面)\n        DoRecursiveDivision(randomX, y, width, height - (randomX - x), walls);\n    } else {\n        // 垂直雷同\n        var randomY = y + 2 + Random_0_to_n(width - 4);\n        door = x + 1 + Random_0_to_n(height - 3);\n\n        for (var _x = x; _x < x + height; _x++) {\n            if (_x !== door) {\n                walls.push([_x, randomY]);\n            }\n        }\n\n        DoRecursiveDivision(x, y, randomY - y, height, walls);\n        DoRecursiveDivision(x, randomY, width - (randomY - y), height, walls);\n    }\n}\n\n// 只回傳偶數\nfunction Random_0_to_n(n) {\n    return Math.floor(Math.random() * n / 2) * 2;\n}\n\nexport default RecursiveDivision;","import { position } from '../../Core';\nimport { CreateAround } from './Core';\n\nconst direction = {\n    horizontal: 0,\n    vertical: 1\n}\n\nfunction RecursiveDivision_Horizontal() {\n    var walls = CreateAround();\n\n    // true代表水平，false代表垂直\n    // 改用最後一個參數選定要跑哪個方向\n    DoRecursiveDivision(0, 0, position.colSize, position.rowSize, walls, true);\n    return walls;\n}\n\n// 與正常版的差別在於，選擇切水平或是垂直的條件不同\n// 水平偏移（horizontal skew）：表示優先跑左邊，所以第一個遞迴規定跑水平，第二個規定跑垂直\nfunction DoRecursiveDivision(x, y, width, height, walls, boolDirection) {\n    // 而且為了保證道路暢通，兩個牆壁+一個空白才會形成一個道路\n    // 因此長跟寬必須至少大於3\n    if (width < 4 || height < 4) {\n        return;\n    }\n\n    // 選擇切割方向：挑選短的那邊，一樣就random\n    var curDirection = null;\n    if (boolDirection) curDirection = direction.horizontal;\n    else curDirection = direction.vertical;\n\n    var door;\n    if (curDirection === direction.horizontal) {\n        // 假設現在height=11，表示x=x0跟x=10的那整條都是牆壁\n        // 則 x建立牆壁的範圍為 2~8 (牆壁跟牆壁中間要留一條路)\n\n        // 因此x要x0+2，而剩下的random範圍為0~6且只能為偶數\n        var randomX = x + 2 + Random_0_to_n(height - 4);\n\n        // 假設width = 9，表示y=y0跟y=8的那整條都是牆壁\n        // 開路的範圍為 y0+ 1~7（但開路必為奇數），而剩下的random範圍為0~6且只能為偶數\n        door = y + 1 + Random_0_to_n(width - 3);\n\n        // 建立牆壁，範圍從 y0~y0+width\n        for (var _y = y; _y < y + width; _y++) {\n            if (_y !== door) {\n                walls.push([randomX, _y]);\n            }\n        }\n\n        // 跑 x,y,width 且 height變成了剛剛選的高-x0（跑上面）\n        DoRecursiveDivision(x, y, width, randomX - x, walls, true); // 第一個規定跑水平\n\n        // 跑 新x, y, width 且 height變成了 目前總高 - 剛剛選的高度(跑下面)\n        DoRecursiveDivision(randomX, y, width, height - (randomX - x), walls, false); // 第二個規定跑垂直\n    } else {\n        // 垂直雷同\n        var randomY = y + 2 + Random_0_to_n(width - 4);\n        door = x + 1 + Random_0_to_n(height - 3);\n\n        for (var _x = x; _x < x + height; _x++) {\n            if (_x !== door) {\n                walls.push([_x, randomY]);\n            }\n        }\n\n        DoRecursiveDivision(x, y, randomY - y, height, walls, true); // 第一個規定跑水平\n        DoRecursiveDivision(x, randomY, width - (randomY - y), height, walls, false); // 第二個規定跑垂直\n    }\n}\n\n// 只回傳偶數\nfunction Random_0_to_n(n) {\n    return Math.floor(Math.random() * n / 2) * 2;\n}\n\nexport default RecursiveDivision_Horizontal;","import { position } from '../../Core';\nimport { CreateAround } from './Core';\n\nconst direction = {\n    horizontal: 0,\n    vertical: 1\n}\n\nfunction RecursiveDivision_Vertical() {\n    var walls = CreateAround();\n\n    // true代表水平，false代表垂直\n    // 改用最後一個參數選定要跑哪個方向\n    DoRecursiveDivision(0, 0, position.colSize, position.rowSize, walls, false);\n    return walls;\n}\n\n// 與正常版的差別在於，選擇切水平或是垂直的條件不同\n// 垂直偏移（vertical skew）：表示優先跑左邊，所以第一個遞迴規定跑垂直，第二個規定跑水平\n// boolDirection=true代表水平，false代表垂直\nfunction DoRecursiveDivision(x, y, width, height, walls, boolDirection) {\n    // 而且為了保證道路暢通，兩個牆壁+一個空白才會形成一個道路\n    // 因此長跟寬必須至少大於3\n    if (width < 4 || height < 4) {\n        return;\n    }\n\n    // 選擇切割方向：挑選短的那邊，一樣就random\n    var curDirection = null;\n    if (boolDirection) curDirection = direction.horizontal;\n    else curDirection = direction.vertical;\n\n    var door;\n    if (curDirection === direction.horizontal) {\n        // 假設現在height=11，表示x=x0跟x=10的那整條都是牆壁\n        // 則 x建立牆壁的範圍為 2~8 (牆壁跟牆壁中間要留一條路)\n\n        // 因此x要x0+2，而剩下的random範圍為0~6且只能為偶數\n        var randomX = x + 2 + Random_0_to_n(height - 4);\n\n        // 假設width = 9，表示y=y0跟y=8的那整條都是牆壁\n        // 開路的範圍為 y0+ 1~7（但開路必為奇數），而剩下的random範圍為0~6且只能為偶數\n        door = y + 1 + Random_0_to_n(width - 3);\n\n        // 建立牆壁，範圍從 y0~y0+width\n        for (var _y = y; _y < y + width; _y++) {\n            if (_y !== door) {\n                walls.push([randomX, _y]);\n            }\n        }\n\n        // 跑 x,y,width 且 height變成了剛剛選的高-x0（跑上面）\n        DoRecursiveDivision(x, y, width, randomX - x, walls, false);  // 第一個規定跑垂直\n\n        // 跑 新x, y, width 且 height變成了 目前總高 - 剛剛選的高度(跑下面)\n        DoRecursiveDivision(randomX, y, width, height - (randomX - x), walls, true); // 第二個規定跑水平\n    } else {\n        // 垂直雷同\n        var randomY = y + 2 + Random_0_to_n(width - 4);\n        door = x + 1 + Random_0_to_n(height - 3);\n\n        for (var _x = x; _x < x + height; _x++) {\n            if (_x !== door) {\n                walls.push([_x, randomY]);\n            }\n        }\n\n        DoRecursiveDivision(x, y, randomY - y, height, walls, false); // 第一個規定跑垂直\n        DoRecursiveDivision(x, randomY, width - (randomY - y), height, walls, true); // 第二個規定跑水平\n    }\n}\n\n// 只回傳偶數\nfunction Random_0_to_n(n) {\n    return Math.floor(Math.random() * n / 2) * 2;\n}\n\nexport default RecursiveDivision_Vertical;","import React, { useContext } from 'react'\r\nimport { NavDropdown, Nav } from 'react-bootstrap';\r\nimport { sysStatusContext, speedContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\nimport ButtonEvent from '../TableHelper/ButtonEvent';\r\nimport Simple_Stair_Pattern from '../../Backend/Maze/Simple_Stair_Pattern';\r\nimport Binary_Tree from '../../Backend/Maze/Binary_Tree';\r\nimport RecursiveDivision from '../../Backend/Maze/RecursiveDivision';\r\nimport RecursiveDivision_Horizontal from '../../Backend/Maze/RecursiveDivision_Horizontal';\r\nimport RecursiveDivision_Vertical from '../../Backend/Maze/RecursiveDivision_Vertical';\r\n\r\nfunction DropdownMaze() {\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const speedStatus = useContext(speedContext);\r\n    const [className, toggleHandler] = Colored();\r\n    const buttonEvent = ButtonEvent();\r\n    const speed = speedStatus.get[1];\r\n\r\n    const DropdownMazeHandler = (eventKey) => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n        buttonEvent.ClearPath()\r\n        buttonEvent.ClearWalls()\r\n        switch (eventKey) {\r\n            case \"Maze_Recursive_Division\":\r\n                buttonEvent.CreateMaze(RecursiveDivision(), speed);\r\n                break;\r\n            case \"Maze_Recursive_Division_vertical\":\r\n                buttonEvent.CreateMaze(RecursiveDivision_Vertical(), speed);\r\n                break;\r\n            case \"Maze_Recursive_Division_horizontal\":\r\n                buttonEvent.CreateMaze(RecursiveDivision_Horizontal(), speed);\r\n                break;\r\n            case \"Maze_Basic_Random\":\r\n                break;\r\n            case \"Maze_Basic_Weight_Maze\":\r\n                alert(\"Maze_Basic_Weight_Maze\");\r\n                break;\r\n            case \"Maze_Simple_stair_pattern\":\r\n                buttonEvent.CreateMaze(Simple_Stair_Pattern(), speed);\r\n                break;\r\n            case \"Maze_Binary_Tree\":\r\n                buttonEvent.CreateMaze(Binary_Tree(), speed);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item>\r\n            <NavDropdown xs={1} title={<span className={className}>Mazes & Patterns</span>} id=\"DropdownMaze\" onSelect={DropdownMazeHandler}\r\n                onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}\r\n            >\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division\">Recursive Division</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division_vertical\">Recursive Division(vertical skew)</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division_horizontal\">Recursive Division(horizontal skew)</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Basic_Random\">Basic Random Maze</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Basic_Weight_Maze\">Basic Weight Maze</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Simple_stair_pattern\">Simple Stair Pattern</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Binary_Tree\">Binary Tree Generator</NavDropdown.Item>\r\n            </NavDropdown>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default DropdownMaze;","import React, { useState, useContext } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { sysStatusContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\n\r\nfunction NavLink({ names, handlers }) {\r\n    const [whichHandler, setWhichHandler] = useState(0);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const [className, toggleHandler] = Colored();\r\n\r\n    const localHandler = () => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        setWhichHandler(preWhichHandler => (preWhichHandler + 1) % handlers.length);\r\n        handlers[whichHandler]();\r\n    }\r\n\r\n    return (\r\n        <Nav.Item xs={1}>\r\n            <Nav.Link onClick={localHandler} className={className} onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}>{names[whichHandler]}</Nav.Link>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default NavLink\r\n","import { useState, useContext } from 'react';\nimport { sysStatusContext, algorithmContext } from '../Core';\nimport '../App.scss';\n\nconst Colored = () => {\n    const sysStatus = useContext(sysStatusContext);\n    const algoStatus = useContext(algorithmContext);\n    const [isHover, setIsHover] = useState(false);\n    const [className, setClassName] = useState(\"nav-link-default\");\n\n    const toggleHandler = () => {\n        if (isHover) {\n            setClassName(\"nav-link-default\");\n            setIsHover(false);\n        } else {\n            if (sysStatus.get !== \"IDLE\" || algoStatus.get === \"\" || algoStatus.get === \"Algorithm_Bidrectional_Swarm\") {\n                setClassName(\"nav-link-red\");\n            } else {\n                setClassName(\"nav-link-green\");\n            }\n            setIsHover(true);\n        }\n    }\n\n    return [className, toggleHandler];\n}\n\nexport default Colored\n","import React, { useState, useContext, useEffect } from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport { bombContext, sysStatusContext, algorithmContext } from '../../Core';\nimport Colored from '../../HOC/Colored_AddButton';\nimport { IsMount } from '../../Core/IsMount.js'\n\nfunction NavAddBomb({ names, handlers }) {\n    const [whichHandler, setWhichHandler] = useState(0);\n    const bomb = useContext(bombContext);\n    const sysStatus = useContext(sysStatusContext);\n    const algoContext = useContext(algorithmContext);\n    const [className, toggleHandler] = Colored();\n    const isMount = IsMount();\n\n    useEffect(() => {\n        if (isMount) return; // 防止第一次render也會跑進來執行\n\n        if (bomb.get === true) {\n            setWhichHandler(1);\n        } else {\n            setWhichHandler(0);\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [bomb])\n\n    useEffect(() => {\n        if (isMount) return;\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [whichHandler])\n\n    const localHandler = () => {\n        if (isMount) return;\n\n        if (sysStatus.get !== \"IDLE\" || algoContext.get === \"\" || algoContext.get === \"Algorithm_Bidrectional_Swarm\") {\n            return;\n        }\n\n        handlers[whichHandler]();\n    }\n\n\n    return (\n        <Nav.Item xs={1}>\n            <Nav.Link onClick={localHandler} className={className} onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}>{names[whichHandler]}</Nav.Link>\n        </Nav.Item>\n    )\n}\n\nexport default NavAddBomb\n","import { useRef, useEffect } from 'react';\n\nexport const IsMount = () => {\n    const isMount = useRef(true);\n\n    useEffect(() => {\n        isMount.current = false;\n    }, [])\n\n    return isMount.current;\n}\n\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { algorithmContext, sysStatusContext, speedContext } from '../../Core';\r\nimport ButtonEvent from '../TableHelper/ButtonEvent';\r\nimport BFS from '../../Backend/Algorithms/BFS';\r\nimport DFS from '../../Backend/Algorithms/DFS';\r\nimport Dijkstra from '../../Backend/Algorithms/Dijkstra';\r\nimport Astar from '../../Backend/Algorithms/Astar';\r\nimport GreedyBestFirstSearch from '../../Backend/Algorithms/GreedyBestFirstSearch';\r\nimport Swarm from '../../Backend/Algorithms/Swarm';\r\nimport ConvergentSwarm from '../../Backend/Algorithms/ConvergentSwarm';\r\n\r\nconst NavButton = () => {\r\n\r\n    const [buttonName, setButtonName] = useState(\"Visualize !\");\r\n    const [myVariant, setMyVariant] = useState(\"\");\r\n    const algoContext = useContext(algorithmContext);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const speed = useContext(speedContext);\r\n    const buttonEvent = ButtonEvent();\r\n\r\n    useEffect(() => {\r\n        setMyVariant('success');\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        var algoName = \"\";\r\n        switch (algoContext.get) {\r\n            case \"Algorithm_Dijkstra\":\r\n                algoName = \"Dijkstra's\";\r\n                break;\r\n            case 'Algorithm_AStar':\r\n                algoName = \"A*\";\r\n                break;\r\n            case \"Algorithm_Greedy_Best_First\":\r\n                algoName = \"Greedy\";\r\n                break;\r\n            case \"Algorithm_Swarm\":\r\n                algoName = \"Swarm\";\r\n                break;\r\n            case \"Algorithm_Convergent_Swarm\":\r\n                algoName = \"Convergent Swarm\";\r\n                break;\r\n            case \"Algorithm_Bidrectional_Swarm\":\r\n                algoName = \"Bidrectional Swarm\";\r\n                break;\r\n            case \"Algorithm_Breadth_First\":\r\n                algoName = \"BFS\";\r\n                break;\r\n            case \"Algorithm_Depth_First\":\r\n                algoName = \"DFS\";\r\n                break;\r\n            default:\r\n                algoName = \"\";\r\n                break;\r\n        }\r\n        setButtonName(`Visualize ${algoName}!`);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [algoContext.get])\r\n\r\n    useEffect(() => {\r\n        if (sysStatus.get === 'RUNNING') {\r\n            setMyVariant('danger');\r\n        } else {\r\n            setMyVariant('success');\r\n        }\r\n    }, [sysStatus.get])\r\n\r\n\r\n    const handler = () => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        if (algoContext.get === \"\") {\r\n            setButtonName(\"Pick an Algorithm\");\r\n        } else {\r\n            buttonEvent.ClearPath();\r\n            switch (algoContext.get) {\r\n                case \"Algorithm_Dijkstra\":\r\n                    Dijkstra(buttonEvent.Start, speed.get[1]);\r\n                    break;\r\n                case 'Algorithm_AStar':\r\n                    Astar(buttonEvent.Start, speed.get[1]);\r\n                    break;\r\n                case \"Algorithm_Greedy_Best_First\":\r\n                    GreedyBestFirstSearch(buttonEvent.Start, speed.get[1]);\r\n                    break;\r\n                case \"Algorithm_Swarm\":\r\n                    Swarm(buttonEvent.Start, speed.get[1]);\r\n                    break;\r\n                case \"Algorithm_Convergent_Swarm\":\r\n                    ConvergentSwarm(buttonEvent.Start, speed.get[1]);\r\n                    break;\r\n                case \"Algorithm_Bidrectional_Swarm\":\r\n                    break;\r\n                case \"Algorithm_Breadth_First\":\r\n                    BFS(buttonEvent.Start, speed.get[1]);\r\n                    break;\r\n                case \"Algorithm_Depth_First\":\r\n                    DFS(buttonEvent.Start, speed.get[1]);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item xs={1}>\r\n            <Button id=\"navButton\" variant={myVariant} size=\"lg\" onClick={handler}>{buttonName}</Button>\r\n        </Nav.Item>\r\n    )\r\n};\r\n\r\nexport default NavButton\r\n","import React, { useState, useContext } from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport { sysStatusContext } from '../../Core';\nimport Colored from '../../HOC/Colored';\n\nfunction NavClearBoard({ names, handlers }) {\n    const [whichHandler, setWhichHandler] = useState(0);\n    const sysStatus = useContext(sysStatusContext);\n    const [className, toggleHandler] = Colored();\n\n    const localHandler = () => {\n        if (sysStatus.get !== \"IDLE\") {\n            return;\n        }\n\n        setWhichHandler(preWhichHandler => (preWhichHandler + 1) % handlers.length);\n        handlers[whichHandler]();\n    }\n\n    return (\n        <Nav.Item xs={1}>\n            <Nav.Link onClick={localHandler} className={className} onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}>{names[whichHandler]}</Nav.Link>\n        </Nav.Item>\n    )\n}\n\nexport default NavClearBoard\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport { sysStatusContext } from '../../Core';\r\nimport { speedContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\n\r\nfunction DropdownSpeed() {\r\n    const [title, setTitle] = useState('Average');\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const speed = useContext(speedContext);\r\n    const [className, toggleHandler] = Colored();\r\n\r\n    useEffect(() => {\r\n        setTitle(speed.get[0]);\r\n    }, [speed.get])\r\n\r\n\r\n    const DropdownSpeedHandler = (eventKey) => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Fast\":\r\n                speed.set(\"Fast\");\r\n                break;\r\n            case \"Average\":\r\n                speed.set(\"Average\");\r\n                break;\r\n            case \"Slow\":\r\n                speed.set(\"Slow\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <NavDropdown xs={1} title={<span className={className}>Speed: {title}</span>} id=\"DropdownSpeed\" onSelect={DropdownSpeedHandler}\r\n            onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}\r\n        >\r\n            <NavDropdown.Item eventKey=\"Fast\">Fast</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Average\">Average</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Slow\">Slow</NavDropdown.Item>\r\n        </NavDropdown>\r\n    )\r\n}\r\n\r\nexport default DropdownSpeed;","import React from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Logo from './HeaderHelper/Logo';\r\nimport DropdownAlgorithm from './HeaderHelper/DropdownAlgorithm';\r\nimport DropdownMaze from './HeaderHelper/DropdownMaze';\r\nimport NavLink from './HeaderHelper/NavLink';\r\nimport NavAddBomb from './HeaderHelper/NavAddBomb';\r\nimport NavButton from './HeaderHelper/NavButton';\r\nimport NavClearBoard from './HeaderHelper/NavClearBoard';\r\nimport DropdownSpeed from './HeaderHelper/DropdownSpeed';\r\nimport ButtonEvent from './TableHelper/ButtonEvent';\r\n\r\nfunction Header() {\r\n    const buttonEvent = ButtonEvent()\r\n\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"xl\" bg='dark' variant='dark'>\r\n            <Logo />\r\n            <Navbar.Toggle aria-controls=\"Collapse\" />\r\n            <Navbar.Collapse id=\"Collapse\" className='nvbar-collapse'>\r\n                <Nav className=\"nav-bar\">\r\n                    <DropdownAlgorithm />\r\n                    <DropdownMaze />\r\n                    <NavAddBomb names={[\"Add Bomb\", \"Remove Bomb\"]} handlers={[buttonEvent.Addbomb, buttonEvent.RemoveBomb]} />\r\n                    <NavButton />\r\n                    <NavClearBoard names={[\"Clear Board\"]} handlers={[buttonEvent.ClearBoard]} />\r\n                    <NavLink names={[\"Clear Walls & Weights\"]} handlers={[buttonEvent.ClearWalls]} />\r\n                    <NavLink names={[\"Clear Path\"]} handlers={[buttonEvent.ClearPath]} />\r\n                    <DropdownSpeed />\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Header\r\n","import { componentKind, keyboardSupport } from './TableIndex'\nimport { position } from '../../Core/index'\n\n\nexport function KeyboardEvent(event) {\n    console.log(\"KeyboardEvent\")\n\n    if(event.key === keyboardSupport.w){\n        if(componentKind.add === componentKind.wall){\n            componentKind.add = componentKind.weight\n            keyboardSupport.down = false\n        }else{\n            componentKind.add = componentKind.wall\n            keyboardSupport.down = true\n        }\n\n    }else if(event.key === keyboardSupport.plus && position.weightValue < 100){\n        position.weightValue += 1\n\n    }else if(event.key === keyboardSupport.sub && position.weightValue > 0){\n        position.weightValue -= 1\n\n    }\n\n    // console.log(position.weightValue)\n\n}\n","import { useContext, useEffect } from 'react'\nimport { sysStatusContext, algorithmContext, speedContext } from '../../Core/index'\nimport { tableVar, touchContext, moveContext, updateContext, componentKind, keyboardSupport } from './TableIndex'\nimport { setTable } from './SetTable'\nimport { UpdateTable } from './UpdateTable'\nimport { WhichComponent } from './WhichComp'\nimport { KeyboardEvent } from './KeyboardEvent'\nimport ButtonEvent from './ButtonEvent'\n\nfunction MouseEvent() {\n    const [touch, move, update] = [useContext(touchContext), useContext(moveContext), useContext(updateContext)]\n    const [algorithm, speed, sysStatus] = [useContext(algorithmContext), useContext(speedContext), useContext(sysStatusContext)]\n    const buttonEvent = ButtonEvent()\n\n    useEffect(() => {\n        document.addEventListener('keydown', function(event) {\n            if(keyboardSupport.down){\n                KeyboardEvent(event)\n            }\n        })\n        document.addEventListener('keyup', function(event) {\n            if(keyboardSupport.down === false){\n                KeyboardEvent(event)\n            }\n        })\n    })\n\n    const MouseDownHandler = (e) => {\n        // console.log(\"MouseDownHandler \" + e.target.id)\n\n        if (sysStatus.get !== \"IDLE\") {\n            return\n        }\n\n        e.preventDefault()\n\n        tableVar.id = e.target.id\n        const whichComponent = WhichComponent(tableVar.id, touch)\n\n        if(whichComponent.type){\n            setTable(tableVar.id, whichComponent.rKind)\n            move.set(componentKind.add)\n\n        }else{\n            move.set(whichComponent.kind)\n        }\n    }\n\n    const MouseUpHandler = (e) => {\n        // console.log(\"MouseUpHandler \" + e.target.id)\n\n        if (sysStatus.get !== \"IDLE\") {\n            return\n        }\n\n        move.set(\"\")\n\n        if(update.get && move.get !== \"\"){\n            UpdateTable(buttonEvent.Start, buttonEvent.ClearPath, algorithm, speed)\n        }\n    }\n\n    const OnMouseEnterHanlder = (e) => {\n        // console.log(\"OnMouseEnterHanlder \" + e.target.id)\n\n        if (sysStatus.get !== \"IDLE\") {\n            return\n        }\n\n        tableVar.newId = e.target.id\n        const whichOldComponent = WhichComponent(tableVar.id, touch)\n        const whichNewComponent = WhichComponent(tableVar.newId, touch)\n\n        if(move.get === componentKind.add && whichNewComponent.type){\n            setTable(tableVar.newId, whichNewComponent.rKind)\n            tableVar.id = tableVar.newId\n\n        }else if(move.get !== componentKind.add && move.get !== \"\" && whichNewComponent.type){\n            setTable(tableVar.id, whichOldComponent.touch)\n            touch.set({componentKind: whichOldComponent.kind, under: whichNewComponent.kind})\n            setTable(tableVar.newId, whichOldComponent.kind)\n            tableVar.id = tableVar.newId\n        }\n\n        if(update.get && move.get !== \"\"){\n            UpdateTable(buttonEvent.Start, buttonEvent.ClearPath, algorithm, speed)\n        }\n    }\n\n    return {MouseDownHandler, MouseUpHandler, OnMouseEnterHanlder}\n\n}\n\nexport default MouseEvent","import { useEffect } from 'react'\nimport MouseEvent from './MouseEvent'\nimport { tableVar, componentKind } from './TableIndex'\n\n\nfunction TableUI() {\n    const [rowSize, colSize, size] = [tableVar.rowSize, tableVar.colSize, tableVar.size]\n\n    const row = Array.from(Array(rowSize).keys())\n    const col = Array.from(Array(colSize).keys())\n\n    const mouesEvent = MouseEvent()\n    const [MouseDownHandler, MouseUpHandler, OnMouseEnterHanlder] = [mouesEvent.MouseDownHandler, mouesEvent.MouseUpHandler, mouesEvent.OnMouseEnterHanlder]\n\n    const createTable = row.map((rowIndex, index) => {\n        return ( \n            <tr key = {index} height={size}>\n                {col.map((colIndex, index) => {\n                    // console.log(rowIndex + \" \" + colIndex)\n                    return (\n                        <td id = {rowIndex * colSize + colIndex} key = {index} className = {componentKind.background} width={size} onMouseUp = {MouseUpHandler} onMouseDown = {MouseDownHandler} onMouseEnter = {OnMouseEnterHanlder}>\n                            {}\n                        </td>)}\n                    )}\n            </tr>)}\n        )\n\n    useEffect(() => {\n        document.getElementById((Math.floor(tableVar.rowSize / 2) * tableVar.colSize + Math.floor(tableVar.colSize / 4)).toString()).className = componentKind.start\n        document.getElementById((Math.floor(tableVar.rowSize / 2 + 1) * tableVar.colSize - Math.floor(tableVar.colSize / 4)).toString()).className = componentKind.end\n    }, [])\n    \n    \n      \n    return (\n        <div className = \"tablePadding\">\n            <table id = \"board\" align=\"center\" border=\"1\" cellSpacing=\"0\">\n                <tbody>\n                    {createTable}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default TableUI\n","import TableUI from './TableHelper/TableUI';\nimport { useContext, useEffect } from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { sysStatusContext } from '../Core';\n\nfunction Table() {  \n\tconst sysStatus = useContext(sysStatusContext);\n\n\tuseEffect(()=>{\n\t\tsetTimeout(()=>{sysStatus.set(\"IDLE\");}, 1000);\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [])\n\n\tif (sysStatus.get === \"LOADING\"){\n\t\treturn (<Spinner animation=\"border\" variant=\"warning\" />);\n\t}\n\telse{\n\t\treturn (\n\t        <div id = \"UI\">\n\t            <TableUI/>\n\t        </div>\n\t    )\n\t}\n}\n\nexport default Table\n","import { useState, useContext, useEffect } from 'react';\nimport { algorithmContext } from '../../Core';\n\nfunction Info() {\n\tconst [bannedBomb, setBannedBomb] = useState(\"\");\n\tconst [bannedBFSDFS, setBannedBFSDFS] = useState(\"\");\n\tconst algoContext = useContext(algorithmContext);\n\n\tuseEffect(() => {\n\t\tif (algoContext.get === \"Algorithm_Bidrectional_Swarm\") {\n\t\t\tsetBannedBomb(\"banned\");\n\t\t} else {\n\t\t\tsetBannedBomb(\"\");\n\t\t}\n\n\t\tif (algoContext.get === \"Algorithm_Breadth_First\" || algoContext.get === \"Algorithm_Depth_First\") {\n\t\t\tsetBannedBFSDFS(\"banned\");\n\t\t} else {\n\t\t\tsetBannedBFSDFS(\"\");\n\t\t}\n\t}, [algoContext.get])\n\n\treturn (\n\t\t<div id=\"mainInfo\">\n\t\t\t<ul>\n\t\t\t\t<li> <div className=\"Info-Start-Node\"></div>Start Node </li>\n\t\t\t\t<li> <div className=\"Info-End-Node\"></div>Target Node </li>\n\t\t\t\t<li className={bannedBomb}> <div className=\"Info-Bomb-Node\"></div>Bomb Node </li>\n\t\t\t\t<li className={bannedBFSDFS}> <div className=\"Info-Weight-Node\"></div>Weight Node </li>\n\t\t\t\t<li> <div className=\"Info-Unvisited-Node\"></div>Unvisited Node </li>\n\t\t\t\t<li> <div className=\"Info-Visited-Node\"></div><div className=\"Info-Visited1-Node\"></div>Visited Node </li>\n\t\t\t\t<li> <div className=\"Info-ShortestPathNode-Node\"></div>Shortest-Path Node </li>\n\t\t\t\t<li> <div className=\"Info-WallNode-Node\"></div>Wall Node </li>\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n\nexport default Info;","import { useState, useContext, useEffect } from 'react';\nimport { algorithmContext } from '../../Core';\n\nfunction AlgorithmDescriptor() {\n    const [algorithmName, setAlgorithmName] = useState('Pick an algorithm and visualize it!');\n    const [discription1, setDiscription1] = useState('');\n    const [discription2, setDiscription2] = useState('');\n    const algoContext = useContext(algorithmContext);\n\n    useEffect(() => {\n        var algoName = \"\";\n        var d1 = \"\";\n        var d2 = \"\";\n        switch (algoContext.get) {\n            case \"Algorithm_Dijkstra\":\n                algoName = \"Dijkstra's Algorithm\";\n                d1 = \"weighted\";\n                d2 = \"guarantees\";\n                break;\n            case 'Algorithm_AStar':\n                algoName = \"A* Search\";\n                d1 = \"weighted\";\n                d2 = \"guarantees\";\n                break;\n            case \"Algorithm_Greedy_Best_First\":\n                algoName = \"Greedy Best-first Search\";\n                d1 = \"weighted\";\n                d2 = \"does not guarantee\";\n                break;\n            case \"Algorithm_Swarm\":\n                algoName = \"Swarm Algorithm\";\n                d1 = \"weighted\";\n                d2 = \"does not guarantee\";\n                break;\n            case \"Algorithm_Convergent_Swarm\":\n                algoName = \"Convergent Swarm Algorithm\";\n                d1 = \"weighted\";\n                d2 = \"does not guarantee\";\n                break;\n            case \"Algorithm_Bidrectional_Swarm\":\n                algoName = \"Bidrectional Swarm Algorithm\";\n                d1 = \"weighted\";\n                d2 = \"does not guarantee\";\n                break;\n            case \"Algorithm_Breadth_First\":\n                algoName = \"Breath-first Search\";\n                d1 = \"unweighted\";\n                d2 = \"guarantee\";\n                break;\n            case \"Algorithm_Depth_First\":\n                algoName = \"Depth-first Search\";\n                d1 = \"unweighted\";\n                d2 = \"does not guarantee\";\n                break;\n            default:\n                algoName = \"Pick an algorithm and visualize it!\";\n                d1 = \"\";\n                d2 = \"\";\n                break;\n        }\n\n        setAlgorithmName(algoName);\n        setDiscription1(d1);\n        setDiscription2(d2);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [algoContext.get])\n\n    if (algoContext.get === \"\") {\n        return (\n            <div id=\"algorithmDescriptor\">\n                {algorithmName}\n            </div>\n        )\n    } else {\n        return (\n            <div id=\"algorithmDescriptor\">\n                {algorithmName} is <i><b>{discription1}</b></i> and <i><b>{discription2}</b></i> the shortest path!\n            </div>\n        )\n    }\n\n}\n\nexport default AlgorithmDescriptor;","import React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport data from '../../Resources/Data/Modalnfo.json';\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react'\n\nfunction IntroductionModal() {\n    const [pages, setPages] = useState(1);\n    const [show, setShow] = useState(true);\n    const [language, setLanguage] = useState(0);\n    const [checked, setChecked] = useState(true);\n    const maxPages = data.length;\n\n    const HandlePrevious = () => {\n        setPages(prePage => prePage - 1 >= 1 ? prePage - 1 : prePage);\n    }\n\n    const HandleNext = () => {\n        if (pages + 1 > maxPages) {\n            setShow(false);\n            return;\n        }\n        setPages(prePage => prePage + 1 <= maxPages ? prePage + 1 : prePage);\n    }\n\n    return (\n        <Modal show={show} size='xl' backdrop=\"static\" centered dialogClassName=\"Modal\">\n            <div className=\"ml-auto Modal-Page\">{`${pages}/${maxPages}`}</div>\n            <div className=\"Modal-Title\">{data[pages - 1][\"Title\"][language]}</div>\n\n            <Modal.Body className=\"Modal-Body\">\n                <p className=\"Modal-BodyText\">{data[pages - 1][\"Dialog\"][language]}</p>\n                <p className=\"Modal-BodyText1\">{data[pages - 1][\"Body\"][language]}</p>\n                {pages === 1 ? <div className=\"Logo\"></div> : null}\n                {pages === 2 ? <div className=\"ShortestPath\"></div> : null}\n                {pages === 3 ? <div className=\"Algorithm\"></div> : null}\n                {pages === 4 ? <div className=\"Maze\"></div> : null}\n                {pages === 5 ? <div className=\"WallWeight\"></div> : null}\n                {pages === 6 ? <div className=\"AddBomb\"></div> : null}\n                {pages === 7 ? <div className=\"StartDrag\"></div> : null}\n                {pages === 8 ? <div className=\"Other\"></div> : null}\n                {pages === 9 ? (language === 1 ? <p className=\"Modal-BodyText1\">本專案由 <a href=\"https://github.com/novayo\">novayo</a> 及 <a href=\"https://github.com/ChengTsungPao\">ChengTsungPao</a> 共同製作</p> : <p className=\"Modal-BodyText1\">This application made by <a href=\"https://github.com/novayo\">novayo</a> and <a href=\"https://github.com/ChengTsungPao\">ChengTsungPao</a>.</p>) : null}\n            </Modal.Body>\n\n            <Modal.Footer>\n                <Button className=\"mr-auto Button\" variant='outline-success' size=\"md\" onClick={() => setShow(false)}>Skip Tutorial</Button>\n                <BootstrapSwitchButton\n                    checked={checked}\n                    onlabel='En'\n                    onstyle='outline-info'\n                    offlabel='Ch'\n                    offstyle='outline-success'\n                    size=\"md\" // eslint-disable-next-line \n                    style='mr-auto' // 這裡會有怪怪的warning，所以加上上面的註解去除warning\n                    onChange={(checked) => {\n                        if (checked) {\n                            setLanguage(0);\n                        } else {\n                            setLanguage(1);\n                        }\n                        setChecked(pre => !pre);\n                    }}\n                />\n                <Button className=\"Button\" variant='outline-success' size=\"md\" onClick={() => HandlePrevious()}>Previous</Button>\n                <Button className=\"Button\" variant='outline-success' size=\"md\" onClick={() => HandleNext()}>Next</Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default IntroductionModal\n","import './App.scss';\nimport { useReducer } from 'react';\nimport Header from './Frontend/Header';\nimport { algorithmReducer, initialAlgorithm, algorithmContext } from './Core';\nimport { sysStatusReducer, initialsysStatus, sysStatusContext } from './Core';\nimport { bombContext, bombInitial, bombReducer } from './Core';\nimport { speedContext, speedInitial, speedReducer } from './Core';\nimport Table from './Frontend/Table';\nimport { touchReducer, touchInitial, touchContext } from './Frontend/TableHelper/TableIndex';\nimport { moveReducer, moveInitial, moveContext } from './Frontend/TableHelper/TableIndex';\nimport { updateReducer, updateInitial, updateContext } from './Frontend/TableHelper/TableIndex';\nimport Info from './Frontend/HeaderHelper/Info';\nimport AlgorithmDescriptor from './Frontend/HeaderHelper/AlgorithmDescriptor';\nimport IntroductionModal from './Frontend/HeaderHelper/IntroductionModal';\n\nfunction App() {\n  const [curAlgorithm, setCurAlgorithm] = useReducer(algorithmReducer, initialAlgorithm);\n  const [curSysStatus, setCurSysStatus] = useReducer(sysStatusReducer, initialsysStatus);\n  const [curBomb, setCurBomb] = useReducer(bombReducer, bombInitial);\n  const [curSpeed, setCurSpeed] = useReducer(speedReducer, speedInitial);\n  const [touch, setTouch] = useReducer(touchReducer, touchInitial)\n  const [move, setMove] = useReducer(moveReducer, moveInitial)\n  const [update, setUpdate] = useReducer(updateReducer, updateInitial)\n\n  return (\n    <div className=\"App\">\n      <IntroductionModal />\n      <updateContext.Provider value={{ get: update, set: setUpdate }}>\n        <moveContext.Provider value={{ get: move, set: setMove }}>\n          <touchContext.Provider value={{ get: touch, set: setTouch }}>\n            <speedContext.Provider value={{ get: curSpeed, set: setCurSpeed }}>\n              <bombContext.Provider value={{ get: curBomb, set: setCurBomb }}>\n                <sysStatusContext.Provider value={{ get: curSysStatus, set: setCurSysStatus }}>\n                  <algorithmContext.Provider value={{ get: curAlgorithm, set: setCurAlgorithm }}>\n                    <Header />\n                    <Info />\n                    <AlgorithmDescriptor />\n                    <Table />\n                  </algorithmContext.Provider>\n                </sysStatusContext.Provider>\n              </bombContext.Provider>\n            </speedContext.Provider>\n          </touchContext.Provider>\n        </moveContext.Provider>\n      </updateContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}