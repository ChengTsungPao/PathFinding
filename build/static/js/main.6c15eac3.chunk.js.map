{"version":3,"sources":["Frontend/HeaderHelper/Logo.js","Frontend/TableHelper/TableIndex.js","Core/index.js","HOC/Colored.js","Frontend/TableHelper/SetTable.js","Frontend/TableHelper/WhichComp.js","Frontend/TableHelper/Animation.js","Core/Queue.js","Core/Distance.js","Backend/Algorithms/BFS.js","Backend/Algorithms/DFS.js","Backend/Algorithms/Dijkstra.js","Frontend/TableHelper/UpdateTable.js","Frontend/TableHelper/ButtonEvent.js","Frontend/HeaderHelper/DropdownAlgorithm.js","Backend/Maze/Simple_Stair_Pattern.js","Backend/Maze/Core.js","Backend/Maze/Binary_Tree.js","Backend/Maze/RecursiveDivision.js","Backend/Maze/Kruskal.js","Backend/Maze/Basic_Random_Maze.js","Backend/Maze/Basic_Weight_Maze.js","Backend/Maze/Prim.js","Backend/Maze/Eller.js","Frontend/HeaderHelper/DropdownMaze.js","Frontend/HeaderHelper/NavLink.js","HOC/Colored_AddButton.js","Frontend/HeaderHelper/NavAddBomb.js","Core/IsMount.js","Frontend/HeaderHelper/NavButton.js","Frontend/HeaderHelper/NavClearBoard.js","Frontend/HeaderHelper/DropdownSpeed.js","Frontend/Header.js","Frontend/TableHelper/RestrictComp.js","Frontend/TableHelper/KeyboardEvent.js","Frontend/TableHelper/MouseEvent.js","Frontend/TableHelper/TableUI.js","Frontend/TableHelper/WeightModal.js","Frontend/Table.js","Frontend/HeaderHelper/Info.js","Frontend/HeaderHelper/AlgorithmDescriptor.js","Frontend/HeaderHelper/IntroductionModal.js","Frontend/HeaderHelper/Email.js","App.js","reportWebVitals.js","index.js"],"names":["logo","Navbar","Brand","href","className","adjust","size","tableVar","rowSize","Math","floor","window","screen","availHeight","colSize","availWidth","id","newId","weightValueRange","componentKind","add","wall","weight","weightSearchBomb","weightSearch","weightPath","start","startSearchBomb","startSearch","startPath","end","endSearchBomb","endSearch","endPath","bomb","bombSearchBomb","bombSearch","bombPath","search","searchBomb","path","weightStatic","weightSearchBombStatic","weightSearchStatic","weightPathStatic","searchStatic","searchBombStatic","pathStatic","pathHead","pathHeadLeft","pathHeadRight","pathHeadUp","pathHeadDown","background","keyboardSupport","plus","sub","w","down","synchronize","update","algorithm","sysStatus","touchContext","createContext","touchInitial","touchReducer","state","action","under","moveContext","moveReducer","updateContext","updateReducer","weightValueContext","weightValueInitial","value","status","weightValueReducer","position","weightValue","sysStatusContext","React","initialsysStatus","sysStatusReducer","bombContext","bombInitial","bombReducer","speedContext","speedInitial","speedReducer","algorithmContext","algorithmReducer","Colored","useContext","useState","isHover","setIsHover","setClassName","get","setTable","index","kind","setPosition","parseInt","document","getElementById","toString","pos","addComponentKind","WhichComponent","touch","type","rKind","WhichComponentSame","StartEndBombWeight","SearchBombAnimation","pathDirection","speed","count","myCallbackFunction","sysStatusFunction","searchBombAnimation","setInterval","length","PathAnimation","clearInterval","i","SearchAnimation","searchAnimation","newid","pathAnimation","direction","FinalAnimation","j","Queue","this","queue","val","push","isEmpty","shift","Distance","dict","max_d","d","max","endPos","shortest","shortestDirection","x","y","visited","Set","curD","Infinity","curX","curY","dir","has","unshift","BFS","startCallback","times","retSearchPath","retBombPath","retShortestPath","retDirection","searchPath","distance","startPos","set","append","getLength","node","popleft","nextD","pop","concat","getShortestPath","splice","DFS","DoDFS","clear","tmp","tmp2","DoDijkstra","whichAlgo","table","unvisited","curShortestPath","which","actualEnd","isFoundEnd","curPos","GetClosestNode","forEach","nextPos","idx","total","GetScore","pow","GetHeuristic","abs","strategy","retPos","retIndex","score","Dijkstra","UpdateTable","Start","ClearPath","ButtonEvent","sysSpeed","ClearWeights","Object","keys","split","event","Addbomb","RemoveBomb","ClearWalls","ClearBoard","CreateMaze","maze","FinalMazeAnimation","mazeAnimation","MazeAnimation","DropdownAlgorithm","algoContext","toggleHandler","buttonEvent","Nav","Item","NavDropdown","xs","title","onSelect","eventKey","DropdownAlgorithmHandler","onMouseEnter","onMouseLeave","Simple_Stair_Pattern","walls","towardUp","CreateAround","wallSet","Random","n","random","RandomEven","Binary_Tree","console","log","DoRecursiveDivision","width","height","boolDirection","door","randomX","_y","randomY","_x","RecursiveDivision","specialNodes","up","right","left","validWall","blockDirection","removedWallIndex","array","target","IndexOf","FindRoot","parentArray","Union","rankArray","index1","index3","Kruskal","parent","rank","x1","x2","xHead","yHead","Basic_Random_Maze","Basic_Weight_Maze","Prim","startNode","randomIndex","availableDirection","Eller","haveBuildedPath","buildWall","buildPath","DropdownMaze","speedStatus","NavLink","names","handlers","whichHandler","setWhichHandler","Link","onClick","preWhichHandler","algoStatus","NavAddBomb","isMount","useRef","useEffect","current","IsMount","NavButton","buttonName","setButtonName","myVariant","setMyVariant","algoName","NavClearBoard","DropdownSpeed","setTitle","Header","collapseOnSelect","expand","Logo","Toggle","aria-controls","Collapse","RestrictComp","KeyboardEvent","key","MouseEvent","move","addEventListener","MouseDownHandler","e","preventDefault","whichComponent","MouseUpHandler","OnMouseEnterHanlder","whichOldComponent","whichNewComponent","TableUI","row","Array","from","col","mouesEvent","createTable","map","rowIndex","colIndex","onMouseUp","onMouseDown","align","border","cellSpacing","WeightModal","initShow","setInitShow","show","setShow","setTimeout","Modal","onHide","dialogClassName","Body","Row","Col","ProgressBar","now","label","min","Table","Spinner","animation","variant","Info","bannedBomb","setBannedBomb","bannedBFSDFS","setBannedBFSDFS","AlgorithmDescriptor","algorithmName","setAlgorithmName","discription1","setDiscription1","discription2","setDiscription2","d1","d2","IntroductionModal","pages","setPages","language","setLanguage","checked","setChecked","maxPages","data","backdrop","centered","Footer","Button","onlabel","onstyle","offlabel","offstyle","style","onChange","pre","prePage","Email","handleClose","data-toggle","data-placement","data-original-title","src","alt","onSubmit","emailjs","sendForm","then","result","text","error","htmlFor","name","required","App","useReducer","curAlgorithm","setCurAlgorithm","curSysStatus","setCurSysStatus","curBomb","setCurBomb","curSpeed","setCurSpeed","setTouch","setMove","setUpdate","setWeightValue","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.6c15eac3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\n\r\nfunction logo() {\r\n    return (\r\n        <Navbar.Brand href=\"/PathFinding/\" className='navbar-logo'>\r\n            {/* <img\r\n                src={process.env.PUBLIC_URL + '/logo.png'} // 取得public資料夾路徑\r\n                width=\"50\"\r\n                height=\"50\"\r\n                className='d-inline-block'\r\n                variant='test'\r\n                alt='Logo'\r\n            /> {' '} */}\r\n                    PathFinding\r\n        </Navbar.Brand>\r\n    )\r\n}\r\n\r\nexport default logo\r\n","import { createContext } from 'react'\nimport { position } from '../../Core/index'\n\n\nconst size = 23\n\nexport function adjust(size) {\n    if (size % 2 === 0) {\n        return size - 1\n    } else {\n        return size\n    }\n\n}\n\nexport const tableVar = {\n    rowSize: adjust(Math.floor(window.screen.availHeight / size) - 16),\n    colSize: adjust(Math.floor(window.screen.availWidth / size)),\n    size: size,\n    id: 0,\n    newId: 0\n}\n\nexport const weightValueRange = {\n    max: 50,\n    min: 0,\n    init: 0,\n    increase: 10,\n    waiting: 2000\n}\n\nexport const componentKind = {\n    add: \"wall\",\n    wall: \"wall\",\n\n    /*---------dynamic---------*/\n\n    weight: \"weight\",\n    weightSearchBomb: \"weightSearchBomb\",\n    weightSearch: \"weightSearch\",\n    weightPath: \"weightPath\",\n\n    start: \"start\",\n    startSearchBomb: \"startSearchBomb\",\n    startSearch: \"startSearch\",\n    startPath: \"startPath\",\n\n    end: \"end\",\n    endSearchBomb: \"endSearchBomb\",\n    endSearch: \"endSearch\",\n    endPath: \"endPath\",\n\n    bomb: \"bomb\",\n    bombSearchBomb: \"bombSearchBomb\",\n    bombSearch: \"bombSearch\",\n    bombPath: \"bombPath\",\n\n    search: \"search\",\n    searchBomb: \"searchBomb\",\n    path: \"path\",\n\n    /*----------static-----------*/\n\n    weightStatic: \"weightStatic\",\n    weightSearchBombStatic: \"weightSearchBombStatic\",\n    weightSearchStatic: \"weightSearchStatic\",\n    weightPathStatic: \"weightPathStatic\",\n\n    searchStatic: \"searchStatic\",\n    searchBombStatic: \"searchBombStatic\",\n    pathStatic: \"pathStatic\",\n\n    /*----------------------------*/\n\n    pathHead: \"pathHead\",\n    pathHeadLeft: \"pathHeadLeft\",\n    pathHeadRight: \"pathHeadRight\",\n    pathHeadUp: \"pathHeadUp\",\n    pathHeadDown: \"pathHeadDown\",\n\n    background: \"background\"\n}\n\nexport const keyboardSupport = {\n    plus: \"+\",\n    sub: \"-\",\n\n    w: \"w\",\n    down: true,\n}\n\nexport const synchronize = {\n    update: true,\n    algorithm: \"\",\n    sysStatus: \"IDLE\"\n}\n\n// touch status\nexport const touchContext = createContext()\nexport const touchInitial = { start: componentKind.background, end: componentKind.background, bomb: componentKind.background }\nexport const touchReducer = (state, action) => {\n    switch (action.componentKind) {\n        case componentKind.start:\n            return { ...state, start: action.under }\n        case componentKind.end:\n            return { ...state, end: action.under }\n        case componentKind.bomb:\n            return { ...state, bomb: action.under }\n        default:\n            return touchInitial\n    }\n}\n\n// move component\nexport const moveContext = createContext()\nexport const moveInitial = \"\"\nexport const moveReducer = (state, action) => {\n    switch (action) {\n        case componentKind.start:\n            return action\n        case componentKind.end:\n            return action\n        case componentKind.bomb:\n            return action\n        case componentKind.wall:\n            return action\n        case componentKind.weight:\n            return action\n        default:\n            return moveInitial\n    }\n}\n\n// result update status\nexport const updateContext = createContext()\nexport const updateInitial = false\nexport const updateReducer = (state, action) => {\n    switch (action) {\n        case \"True\":\n            return true\n        case \"False\":\n            return false\n        default:\n            return updateInitial\n    }\n}\n\nexport const weightValueContext = createContext()\nexport const weightValueInitial = { value: weightValueRange.init, status: true }\nexport const weightValueReducer = (state, action) => {\n    switch (action) {\n        case \"+\":\n            position.weightValue = state.value + weightValueRange.increase\n            return { value: position.weightValue, status: true }\n        case \"-\":\n            position.weightValue = state.value - weightValueRange.increase\n            return { value: position.weightValue, status: true }\n        case true:\n            return { value: position.weightValue, status: true }\n        case false:\n            return { value: position.weightValue, status: false }\n        default:\n            return weightValueInitial\n    }\n}\n\n","import React from 'react'\r\nimport { tableVar, weightValueRange, adjust } from '../Frontend/TableHelper/TableIndex'\r\n\r\n// component position\r\nexport var position = {\r\n    start: [adjust(Math.floor(tableVar.rowSize / 2)), adjust(Math.floor(tableVar.colSize / 4))],\r\n    end: [adjust(Math.floor(tableVar.rowSize / 2)), adjust(tableVar.colSize - Math.floor(tableVar.colSize / 4))],\r\n    bomb: false,\r\n    wall: [],\r\n    weight: [],\r\n    weightValue: weightValueRange.init,\r\n    rowSize: tableVar.rowSize,\r\n    colSize: tableVar.colSize\r\n}\r\n\r\n\r\n// 目前系統狀態\r\nexport const sysStatusContext = React.createContext();\r\nexport const initialsysStatus = \"LOADING\";\r\nexport const sysStatusReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'IDLE':\r\n            return 'IDLE';\r\n        case 'RUNNING':\r\n            return 'RUNNING';\r\n        case 'LOADING':\r\n            return 'LOADING';\r\n        default:\r\n            return initialsysStatus;\r\n    }\r\n}\r\n\r\n// Bomb status\r\nexport const bombContext = React.createContext();\r\nexport const bombInitial = false;\r\nexport const bombReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'True':\r\n            return true;\r\n        case 'False':\r\n            return false;\r\n        default:\r\n            return bombInitial\r\n    }\r\n}\r\n\r\n// Speed\r\nexport const speedContext = React.createContext();\r\nexport const speedInitial = [\"Fast\", 20];\r\nexport const speedReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'Fast':\r\n            return [\"Fast\", 20];\r\n        case 'Average':\r\n            return [\"Average\", 50];\r\n        case 'Slow':\r\n            return [\"Slow\", 100];\r\n        default:\r\n            return bombInitial\r\n    }\r\n}\r\n\r\n// 目前系統是哪種演算法\r\nexport const algorithmContext = React.createContext();\r\nexport const initialAlgorithm = \"\";\r\nexport const algorithmReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'Algorithm_Dijkstra':\r\n            return 'Algorithm_Dijkstra';\r\n        case 'Algorithm_AStar':\r\n            return 'Algorithm_AStar';\r\n        case \"Algorithm_Greedy_Best_First\":\r\n            return 'Algorithm_Greedy_Best_First';\r\n        case \"Algorithm_Swarm\":\r\n            return 'Algorithm_Swarm';\r\n        case \"Algorithm_Convergent_Swarm\":\r\n            return 'Algorithm_Convergent_Swarm';\r\n        case \"Algorithm_Bidrectional_Swarm\":\r\n            return 'Algorithm_Bidrectional_Swarm';\r\n        case \"Algorithm_Breadth_First\":\r\n            return 'Algorithm_Breadth_First';\r\n        case \"Algorithm_Depth_First\":\r\n            return 'Algorithm_Depth_First';\r\n        default:\r\n            return initialAlgorithm;\r\n    }\r\n}","import { useState, useContext } from 'react';\nimport { sysStatusContext } from '../Core';\nimport '../App.scss';\n\nconst Colored = () => {\n    const sysStatus = useContext(sysStatusContext);\n    const [isHover, setIsHover] = useState(false);\n    const [className, setClassName] = useState(\"nav-link-default\");\n\n    const toggleHandler = () => {\n        if (isHover) {\n            setClassName(\"nav-link-default\");\n            setIsHover(false);\n        } else {\n            if (sysStatus.get !== \"IDLE\") {\n                setClassName(\"nav-link-red\");\n            } else {\n                setClassName(\"nav-link-green\");\n            }\n            setIsHover(true);\n        }\n    }\n\n    return [className, toggleHandler];\n}\n\nexport default Colored\n","import { componentKind, tableVar } from './TableIndex'\nimport { position } from '../../Core/index'\n\n\nexport function setTable(index, kind, setPosition = false){\n\n    if(typeof index !== \"number\"){\n        index = parseInt(index[0]) * tableVar.colSize + parseInt(index[1])\n    }\n\n    if(index < 0){\n        return\n    }\n\n    document.getElementById(index.toString()).className = kind\n\n    if(setPosition){\n\n        const pos = [Math.floor(index / tableVar.colSize), index % tableVar.colSize]\n\n        if(position.wall[pos]){\n            delete position.wall[pos]\n        }else if(position.weight[pos]){\n            delete position.weight[pos]\n        }\n    \n        if(kind === componentKind.wall){\n            position.wall[pos] = true\n        }else if(kind === componentKind.weight){\n            position.weight[pos] = true\n        }else if(kind === componentKind.start){\n            position.start = pos\n        }else if(kind === componentKind.end){\n            position.end = pos\n        }else if(kind === componentKind.bomb){\n            position.bomb = pos\n        }else if(kind === componentKind.background){\n            if(position.bomb[0] === pos[0] && position.bomb[1] === pos[1]){\n                position.bomb = false\n            }\n        }\n\n    }\n\n    // console.log(position)\n\n}","import { tableVar, componentKind } from './TableIndex'\nimport { position } from '../../Core/index'\n\n\nfunction addComponentKind(kind) {\n    switch (kind) {\n        case componentKind.add:\n            return componentKind.background\n        default:\n            return componentKind.add\n    }\n}\n\nexport function WhichComponent(id, touch){ // MouseEvent\n\n    var pos = id\n\n    if(typeof id === \"number\"){\n        pos = [Math.floor(parseInt(id) / tableVar.colSize), parseInt(id) % tableVar.colSize]\n    }\n\n    if(position.start[0] === pos[0] && position.start[1] === pos[1]){\n        return {kind: componentKind.start, touch: touch.get.start, type: 0}\n    }else if(position.end[0] === pos[0] && position.end[1] === pos[1]){\n        return {kind: componentKind.end, touch: touch.get.end, type: 0}\n    }else if(position.bomb !== false && position.bomb[0] === pos[0] && position.bomb[1] === pos[1]){\n        return {kind: componentKind.bomb, touch: touch.get.bomb, type: 0}\n    }else if(position.wall[pos]){\n        return {kind: componentKind.wall, rKind: addComponentKind(componentKind.wall), type: 1}\n    }else if(position.weight[pos]){\n        return {kind: componentKind.weight, rKind: addComponentKind(componentKind.weight), type: 1}\n    }else{\n        return {kind: componentKind.background, rKind: componentKind.add, type: 1}\n    }\n\n}\n\n\nexport function WhichComponentSame(id){\n\n    var pos = id\n\n    if(typeof id === \"string\" || typeof id === \"number\"){\n        pos = [Math.floor(parseInt(id) / tableVar.colSize), parseInt(id) % tableVar.colSize]\n    }\n\n    if(position.start[0] === pos[0] && position.start[1] === pos[1]){\n        return 0\n    }else if(position.end[0] === pos[0] && position.end[1] === pos[1]){\n        return 1\n    }else if(position.bomb !== false && position.bomb[0] === pos[0] && position.bomb[1] === pos[1]){\n        return 2\n    }else if(position.weight[pos]){\n        return 3\n    }else if(position.wall[pos]){\n        return 4\n    }else{\n        return 5\n    }\n\n}\n\nexport function StartEndBombWeight(type, start, end, bomb, weight){\n\n    switch (type) {\n        case 0:\n            return start\n        case 1:\n            return end\n        case 2:\n            return bomb\n        case 3:\n            return weight\n        default:\n            return null\n    }\n\n}","import { componentKind } from './TableIndex'\nimport { setTable } from './SetTable'\nimport { WhichComponentSame, StartEndBombWeight } from './WhichComp'\nimport { position } from '../../Core/index'\n\n\n/* Search */\n\nexport function SearchBombAnimation(search, bomb, path, pathDirection, speed, count, myCallbackFunction, sysStatusFunction) {\n    const searchBombAnimation = setInterval(() => {\n        if (count === search.length) {\n            myCallbackFunction(bomb, path, pathDirection, speed, 0, PathAnimation, sysStatusFunction)\n            clearInterval(searchBombAnimation)\n        }else{\n            for(var i = 0;i < search[count].length;i++){\n                if (WhichComponentSame(search[count][i]) > 3) {\n                    if(position.bomb === false){\n                        setTable(search[count][i], componentKind.search)\n                    }else{\n                        setTable(search[count][i], componentKind.searchBomb)\n                    }\n                }else{\n                    if(position.bomb === false){\n                        setTable(search[count][i], StartEndBombWeight(WhichComponentSame(search[count][i]), componentKind.startSearch, componentKind.endSearch, componentKind.bombSearch, componentKind.weightSearch))\n                    }else{\n                        setTable(search[count][i], StartEndBombWeight(WhichComponentSame(search[count][i]), componentKind.startSearchBomb, componentKind.endSearchBomb, componentKind.bombSearch, componentKind.weightSearchBomb))\n                    }\n                }\n            }\n        }\n        count += 1\n    }, speed)\n}\n\nexport function SearchAnimation(bomb, path, pathDirection, speed, count, myCallbackFunction, sysStatusFunction) {\n    const searchAnimation = setInterval(() => {\n        if (count === bomb.length) {\n            myCallbackFunction(path, speed, pathDirection, 0, sysStatusFunction)\n            clearInterval(searchAnimation)\n        }else{\n            for(var i = 0;i < bomb[count].length;i++){\n                if (WhichComponentSame(bomb[count][i]) > 3) {\n                    setTable(bomb[count][i], componentKind.search)\n                }else{\n                    setTable(bomb[count][i], StartEndBombWeight(WhichComponentSame(bomb[count][i]), componentKind.startSearch, componentKind.endSearch, componentKind.bombSearch, componentKind.weightSearch))\n                }\n            }\n        }\n        count += 1\n    }, speed)\n}\n\nexport function PathAnimation(path, speed, pathDirection, count, myCallbackFunction = null) {\n    var [id, newid] = [-1, -1]\n\n    const pathAnimation = setInterval(() => {\n        if (count === path.length) {\n            myCallbackFunction();\n            clearInterval(pathAnimation);\n        }else {\n            if (WhichComponentSame(path[count]) > 3) {\n                newid = path[count]\n                setTable(id, componentKind.path)\n                setTable(newid, direction(pathDirection[count]))\n                id = newid\n            }else{\n                setTable(id, componentKind.path)\n                setTable(path[count], StartEndBombWeight(WhichComponentSame(path[count]), direction(pathDirection[count]), direction(pathDirection[count]), componentKind.bombPath, componentKind.weightPath))\n            }\n        }\n        count += 1\n    }, speed)\n\n}\n\nexport function FinalAnimation(search, path, pathDirection, bomb){\n    for (var i = 0; i < search.length; i++) {\n        for (var j = 0; j < search[i].length; j++) {\n            if (WhichComponentSame(search[i][j]) > 3) {\n                if(position.bomb === false){\n                    setTable(search[i][j], componentKind.searchStatic)\n                }else{\n                    setTable(search[i][j], componentKind.searchBombStatic)\n                }\n            }else{\n                if(position.bomb === false){\n                    setTable(search[i][j], StartEndBombWeight(WhichComponentSame(search[i][j]), componentKind.startSearch, componentKind.endSearch, componentKind.bombSearch, componentKind.weightSearchStatic))\n                }else{\n                    setTable(search[i][j], StartEndBombWeight(WhichComponentSame(search[i][j]), componentKind.startSearchBomb, componentKind.endSearchBomb, componentKind.bombSearchBomb, componentKind.weightSearchBombStatic))\n                }\n            }\n        }\n    }\n    for (i = 0; i < bomb.length; i++) {\n        for (j = 0; j < bomb[i].length; j++) {\n            if (WhichComponentSame(bomb[i][j]) > 3) {\n                setTable(bomb[i][j], componentKind.searchStatic)\n            }else{\n                setTable(bomb[i][j], StartEndBombWeight(WhichComponentSame(bomb[i][j]), componentKind.startSearch, componentKind.endSearch, componentKind.bombSearch, componentKind.weightSearchStatic))\n            }\n        }\n    }\n    for (i = 0; i < path.length; i++) {\n        if (WhichComponentSame(path[i]) > 3) {\n            setTable(path[i], componentKind.pathStatic)\n        }else{\n            setTable(path[i], StartEndBombWeight(WhichComponentSame(path[i]), direction(pathDirection[i]), direction(pathDirection[i]), componentKind.bombPath, componentKind.weightPathStatic))\n        }\n    }\n}\n\n\n/* Maze */\n\nexport function MazeAnimation(maze, speed, count, myCallbackFunction) { // maze = [walls, weights]\n\n    maze = maze[0]\n    speed = speed / 2\n    \n    const mazeAnimation = setInterval(() => {\n        if (count === maze.length) {\n            myCallbackFunction();\n            clearInterval(mazeAnimation);\n        }else {\n            if (WhichComponentSame(maze[count]) > 3) {\n                setTable(maze[count], componentKind.wall, true)\n            }\n        }\n        count += 1\n    }, speed)\n}\n\nexport function FinalMazeAnimation(maze){ // maze = [walls, weights]\n    for(var i = 0; i < maze[0].length; i++){\n        setTable(maze[0][i], componentKind.wall, true)\n    }\n    for(i = 0; i < maze[1].length; i++){\n        setTable(maze[1][i], componentKind.weight, true)\n    }\n}\n\n\n/* Rocket left right up down */\n\nfunction direction(kind){\n\n    switch (kind) {\n        case \"left\":\n            return componentKind.pathHeadLeft\n        case \"right\":\n            return componentKind.pathHeadRight\n        case \"up\":\n            return componentKind.pathHeadUp\n        case \"down\":\n            return componentKind.pathHeadDown\n        default:\n            return componentKind.path\n    }\n\n}","class Queue {\n    constructor() {\n        this.queue = [];\n    }\n\n    append(val) {\n        this.queue.push(val);\n    }\n\n    popleft() {\n        if (this.isEmpty()) return -1;\n        return this.queue.shift();\n    }\n\n    isEmpty() {\n        return this.queue.length === 0;\n    }\n\n    getLength() {\n        return this.queue.length;\n    }\n\n    getArray() {\n        return this.queue;\n    }\n}\n\nexport default Queue;","class Distance {\n    constructor() {\n        this.dict = {};\n        this.max_d = 0;\n    }\n\n    // pos=[x, y], d=距離\n    set(pos, d) {\n        this.dict[pos] = d;\n        this.max_d = Math.max(this.max_d, d);\n    }\n\n    // 取得距離\n    get(pos) {\n        if (pos in this.dict) {\n            return this.dict[pos];\n        } else {\n            return -1;\n        }\n    }\n\n    remove(pos) {\n        if (pos in this.dict) {\n            delete this.dict[pos];\n        } else {\n            return -1;\n        }\n    }\n\n    // 從end開始找尋附近四周圍，第一個 \"有被找過的\" 且 \"距離最小的\"的點\n    // 回傳最短路徑 及 方向\n    getShortestPath(endPos) {\n        if (!(endPos in this.dict)) return []; // 若終點沒被找過，就回傳空值\n\n        var shortest = [endPos];\n        var shortestDirection = [];\n        var x = endPos[0];\n        var y = endPos[1];\n        var visited = new Set();\n\n        visited.add(endPos.toString());\n        while (this.max_d > 0) {\n            var curD = Infinity;\n            var curX = x;\n            var curY = y;\n            var dir = null;\n\n            // up\n            if ([x - 1, y] in this.dict && !(visited.has([x - 1, y].toString()))) {\n                if (this.dict[[x - 1, y]] < curD) {\n                    curX = x - 1;\n                    curY = y;\n                    curD = this.dict[[x - 1, y]];\n                    dir = \"down\"; // 上一個方向要反過來\n                }\n                visited.add([x - 1, y].toString());\n            }\n\n            // right\n            if ([x, y + 1] in this.dict && !(visited.has([x, y + 1].toString()))) {\n                if (this.dict[[x, y + 1]] < curD) {\n                    curX = x;\n                    curY = y + 1;\n                    curD = this.dict[[x, y + 1]];\n                    dir = \"left\"; // 上一個方向要反過來\n                }\n                visited.add([x, y + 1].toString());\n            }\n\n            // down\n            if ([x + 1, y] in this.dict && !(visited.has([x + 1, y].toString()))) {\n                if (this.dict[[x + 1, y]] < curD) {\n                    curX = x + 1;\n                    curY = y;\n                    curD = this.dict[[x + 1, y]];\n                    dir = \"up\"; // 上一個方向要反過來\n                }\n                visited.add([x + 1, y].toString());\n            }\n\n            // left\n            if ([x, y - 1] in this.dict && !(visited.has([x, y - 1].toString()))) {\n                if (this.dict[[x, y - 1]] < curD) {\n                    curX = x;\n                    curY = y - 1;\n                    curD = this.dict[[x, y - 1]];\n                    dir = \"right\"; // 上一個方向要反過來\n                }\n                visited.add([x, y - 1].toString());\n            }\n            x = curX;\n            y = curY;\n            shortest.unshift([x, y]);\n            shortestDirection.unshift(dir);\n            this.max_d = curD;\n        }\n        if (shortest.length === 1) return []; // 如果沒有找到路徑(只有終點自己)，則不用跑最短路徑\n        shortestDirection.unshift(shortestDirection[0]); // 加入改變方向找法\n\n        return [shortest, shortestDirection];\n    }\n\n    clear() {\n        this.dict = {};\n        this.max_d = 0;\n    }\n}\n\nexport default Distance;","import { position } from '../../Core';\nimport Queue from '../../Core/Queue';\nimport Distance from '../../Core/Distance';\n\nfunction BFS(startCallback, speed) {\n    var times = 1 + (position.bomb === false ? 0 : 1); // 如果有bomb要執行2次\n    var retSearchPath = [];\n    var retBombPath = [];\n    var retShortestPath = [];\n    var retDirection = [];\n\n    for (var i = 0; i < times; i++) {\n        var searchPath = [];\n        const visited = new Set();\n        const queue = new Queue();\n        var distance = new Distance();\n        var startPos = i === 0 ? position.start : position.bomb; // 第一次執行start，第二次bomb\n        var endPos = i === 0 && times > 1 ? position.bomb : position.end; // 第一次執行bomb，第二次end\n\n        distance.set(startPos, 0); // 加入自己\n        queue.append([startPos, 0]); // [pos, 距離]\n        visited.add(startPos.toString()); // 防止重複找尋\n        while (queue.getLength() > 0) {\n            var node = queue.popleft();\n            var x = node[0][0];\n            var y = node[0][1];\n            var nextD = node[1] + 1;\n\n            if (nextD > searchPath.length) searchPath.push([]); // 若有新的長度就增加array\n\n            if ([x, y].toString() === endPos.toString()) break; // 若找到終點就跳出\n\n            // left\n            if (y - 1 >= 0 && !([x, y - 1] in position.wall) && !(visited.has([x, y - 1].toString()))) {\n                queue.append([[x, y - 1], nextD]);\n                searchPath[nextD - 1].push([x, y - 1]);\n                distance.set([x, y - 1], nextD);\n                visited.add([x, y - 1].toString());\n            }\n\n            // up\n            if (x - 1 >= 0 && !([x - 1, y] in position.wall) && !(visited.has([x - 1, y].toString()))) {\n                queue.append([[x - 1, y], nextD]);\n                searchPath[nextD - 1].push([x - 1, y]);\n                distance.set([x - 1, y], nextD);\n                visited.add([x - 1, y].toString());\n            }\n\n            // right\n            // 這裡的position.rowSize怪怪的\n            if (y + 1 < position.colSize && !([x, y + 1] in position.wall) && !(visited.has([x, y + 1].toString()))) {\n                queue.append([[x, y + 1], nextD]);\n                searchPath[nextD - 1].push([x, y + 1]);\n                distance.set([x, y + 1], nextD);\n                visited.add([x, y + 1].toString());\n            }\n\n            // down\n            // 這裡的position.colSize怪怪的\n            if (x + 1 < position.rowSize && !([x + 1, y] in position.wall) && !(visited.has([x + 1, y].toString()))) {\n                queue.append([[x + 1, y], nextD]);\n                searchPath[nextD - 1].push([x + 1, y]);\n                distance.set([x + 1, y], nextD);\n                visited.add([x + 1, y].toString());\n            }\n\n        }\n\n        // 去除多找的一圈\n        while (distance.get(endPos) !== -1 && searchPath.length > distance.get(endPos)) {\n            searchPath.pop();\n        }\n\n        if (i === 0) {\n            retSearchPath = retSearchPath.concat(searchPath);\n        } else {\n            retBombPath = retBombPath.concat(searchPath);\n        }\n\n        if (distance.get(endPos) === -1) break; // 如果第一次沒找到終點，不加入最短路徑\n\n        // 取得最短路徑\n        var shortest = distance.getShortestPath(endPos);\n        retShortestPath = retShortestPath.concat(shortest[0]);\n        retDirection = retDirection.concat(shortest[1]);\n        if (i === 0 && times === 2) {\n            // 將尾巴（bomb）去除\n            retShortestPath.splice(retShortestPath.length - 1, 1);\n            retDirection.splice(retDirection.length - 1, 1);\n        }\n    }\n    retSearchPath.unshift([position.start]); // 加入起始點\n    // 執行 start 動畫\n    startCallback(retSearchPath, retShortestPath, retDirection, speed, retBombPath);\n}\nexport default BFS;","import { position } from '../../Core';\n\nfunction DFS(startCallback, speed) {\n    var retSearchPath = [];\n    var retBombPath = [];\n    var retShortestPath = [];\n    var retDirection = [];\n\n    // dfs 需bottom-up去找最短路徑\n    function DoDFS(x, y, endPos, visited, startPath, retShortestPath, retDirection) {\n        if (x < 0 || y < 0 || x >= position.rowSize || y >= position.colSize || [x, y] in position.wall || visited.has([x, y].toString())) {\n            return false;\n        }\n\n        visited.add([x, y].toString());\n        startPath.push([[x, y]]); // 每一層都是一個\n\n        if ([x, y].toString() === endPos.toString()) {\n            retShortestPath.unshift([x, y]);\n            return true;\n        }\n\n\n        if (DoDFS(x - 1, y, endPos, visited, startPath, retShortestPath, retDirection)) {// up\n            retShortestPath.unshift([x, y]);\n            retDirection.unshift(\"up\");\n            return true;\n        }\n        if (DoDFS(x, y + 1, endPos, visited, startPath, retShortestPath, retDirection)) {// right\n            retShortestPath.unshift([x, y]);\n            retDirection.unshift(\"right\");\n            return true;\n        }\n        if (DoDFS(x + 1, y, endPos, visited, startPath, retShortestPath, retDirection)) {// down\n            retShortestPath.unshift([x, y]);\n            retDirection.unshift(\"down\");\n            return true;\n        }\n        if (DoDFS(x, y - 1, endPos, visited, startPath, retShortestPath, retDirection)) {// left\n            retShortestPath.unshift([x, y]);\n            retDirection.unshift(\"left\");\n            return true;\n        }\n    }\n    const visited = new Set();\n    var start = position.start;\n    if (position.bomb) {\n        DoDFS(start[0], start[1], position.bomb, visited, retSearchPath, retShortestPath, retDirection);\n        start = position.bomb;\n        visited.clear();\n\n        // 有找到最小路徑才繼續\n        if (retShortestPath.length > 0) {\n            // bottom up 時 尾巴不確定方向，故現在加上方向\n            retShortestPath.splice(retShortestPath.length - 1, 1); // 去除bomb重複\n            var tmp = []; // 因為unshift，所以先暫存\n            var tmp2 = [];\n            DoDFS(start[0], start[1], position.end, visited, retBombPath, tmp, tmp2);\n            retShortestPath = retShortestPath.concat(tmp);\n            retDirection = retDirection.concat(tmp2);\n        }\n    } else {\n        DoDFS(start[0], start[1], position.end, visited, retBombPath, retShortestPath, retDirection);\n    }\n\n    // bottom up 時 尾巴不確定方向，故現在加上方向\n    retDirection.unshift(retDirection[0]); // 改變方向找法，往前推移一格\n    startCallback(retSearchPath, retShortestPath, retDirection, speed, retBombPath);\n}\n\nexport default DFS;","import { position } from '../../Core';\n\nfunction Dijkstra(whichAlgo, startCallback, speed) {\n    var retSearchPath = [];\n    var retBombPath = [];\n    var retShortestPath = [];\n    var retDirection = [];\n\n    if (position.bomb) {\n        retShortestPath = retShortestPath.concat(DoDijkstra(whichAlgo, position.start, position.bomb, retSearchPath, retDirection))\n\n        // 有找到最小路徑才繼續\n        if (retShortestPath.length > 0) {\n            retShortestPath.splice(retShortestPath.length - 1, 1); // 第一段的終點也是第二段的起點，故去除\n            retDirection.splice(retDirection.length - 1, 1); // 第一段的終點也是第二段的起點，故去除\n            let tmp = []; // 因為unshift所以暫存\n            retShortestPath = retShortestPath.concat(DoDijkstra(whichAlgo, position.bomb, position.end, retBombPath, tmp))\n            retDirection = retDirection.concat(tmp);\n        }\n    } else {\n        retShortestPath = retShortestPath.concat(DoDijkstra(whichAlgo, position.start, position.end, retSearchPath, retDirection))\n    }\n\n    // 執行 start 動畫\n    startCallback(retSearchPath, retShortestPath, retDirection, speed, retBombPath);\n}\n\n// 回傳最短路徑\nfunction DoDijkstra(whichAlgo, startPos, endPos, searchPath, retDirection) {\n    /*  //https://medium.com/basecs/finding-the-shortest-path-with-a-little-help-from-dijkstra-613149fbdc8e\n        Create Dijkstra table \n        \n        table = {pos : [shortest distance, previous vertex]}\n            * start pos : [0, null]\n            * use priority queue to pick the pos which contains current shortest disance.\n    */\n\n\n    // 設定table: 起始點為0，其他為無限大，所有的previous vertex均為null\n    // 設定目前最短路徑的queue\n    var table = [{}, {}];\n    var i, j;\n    for (i = 0; i < position.rowSize; i++) {\n        for (j = 0; j < position.colSize; j++) {\n            var pos = [i, j];\n\n            // 起始點走到pos的最短距離，上一個點，direction，total距離\n            table[0][pos] = [Infinity, null, null, Infinity];\n            table[1][pos] = [Infinity, null, null, Infinity]; // for 決定起始點（bidirection\n        }\n    }\n\n    var end = null; // 決定終點（可能bomb or end）\n    var unvisited = [[], []]; // [0]: start, [1]: end\n    switch (whichAlgo) {\n        case \"Dijkstra\":\n            table[0][startPos] = [0, null, \"up\", 0]; // 設定起始點\n            unvisited[0].push(startPos); // 設定目前最短路徑的queue\n            end = [endPos];\n            break;\n        case \"Astar\":\n            table[0][startPos] = [0, null, \"up\", 0]; // 設定起始點\n            unvisited[0].push(startPos); // 設定目前最短路徑的queue\n            end = [endPos];\n            break;\n        case \"Swarm\":\n            table[0][startPos] = [0, null, \"right\", 0]; // 設定起始點\n            unvisited[0].push(startPos); // 設定目前最短路徑的queue\n            end = [endPos];\n            break;\n        case \"GreedyBestFirstSearch\":\n            table[0][startPos] = [0, null, \"up\", 0]; // 設定起始點\n            unvisited[0].push(startPos); // 設定目前最短路徑的queue\n            end = [endPos];\n            break;\n        case \"ConvergentSwarm\":\n            table[0][startPos] = [0, null, \"right\", 0]; // 設定起始點\n            unvisited[0].push(startPos); // 設定目前最短路徑的queue\n            end = [endPos];\n            break;\n        case \"BidirectionSwarm\":\n            table[0][startPos] = [0, null, \"right\", 0]; // 設定起始點\n            table[1][endPos] = [0, null, \"left\", 0]; // 設定起始點\n            unvisited[0].push(startPos); // 設定目前最短路徑的queue\n            unvisited[1].push(endPos); // 設定目前最短路徑的queue\n            end = [endPos, startPos];\n            break;\n        default:\n            break;\n    }\n\n    /* 演算法開始 */\n    var curShortestPath = []\n    var which = 1; // 0 for start, 1 for end\n    var actualEnd = null;\n    var isFoundEnd = false;\n    var visited = [new Set(), new Set()]; // [0]: start, [1]: end\n\n    while (unvisited[0].length > 0 || unvisited[1].length > 0) {\n\n        // 選要走哪邊\n        if (unvisited[0].length > 0 && unvisited[1].length > 0) {\n            which = (which + 1) % 2;\n        } else if (unvisited[0].length > 0) {\n            which = 0;\n        } else if (unvisited[1].length > 0) {\n            which = 1;\n        }\n\n        // 1. 選出當前最小路徑的點\n        var curPos = null;\n        if (whichAlgo === \"GreedyBestFirstSearch\") curPos = GetClosestNode(table[which], 0, unvisited[which], end[which]);\n        else curPos = GetClosestNode(table[which], 3, unvisited[which], end[which]);\n\n        if (curPos in position.wall) {\n            continue; // 牆壁不走\n        }\n\n        // 2. 計算相鄰且尚未走過的點\n        var up = curPos[0] - 1 >= 0 ? [curPos[0] - 1, curPos[1]] : null;\n        var right = curPos[1] + 1 < position.colSize ? [curPos[0], curPos[1] + 1] : null;\n        var down = curPos[0] + 1 < position.rowSize ? [curPos[0] + 1, curPos[1]] : null;\n        var left = curPos[1] - 1 >= 0 ? [curPos[0], curPos[1] - 1] : null;\n\n        // eslint-disable-next-line\n        [up, right, down, left].forEach((nextPos, idx) => {\n            if (!nextPos || nextPos in position.wall) return; // 若超過邊界 or 是牆壁\n\n            // 走過的也要更新，只是不會加入unvisited，因此不會在上面continue\n            var total = null;\n            var weight = (nextPos in position.weight ? position.weightValue : 0);\n            switch (whichAlgo) {\n                case \"Dijkstra\":\n                    // 策略為：只考慮 目前總分+權重+轉向分數\n                    total = table[which][curPos][0] + weight + GetScore(table[which][curPos][2], idx);\n                    break;\n                case \"Astar\":\n                    // 策略為：只考慮 目前總分+權重+轉向分數\n                    total = table[which][curPos][0] + weight + GetScore(table[which][curPos][2], idx);\n                    break;\n                case \"Swarm\":\n                    // 策略為：只考慮 目前總分+權重+轉向分數+估算\n                    total = table[which][curPos][0] + weight + GetScore(table[which][curPos][2], idx) + Math.pow(GetHeuristic(nextPos, end[which]), 2);\n                    break;\n                case \"GreedyBestFirstSearch\":\n                    // 策略為：只考慮 估值+轉向分數\n                    total = table[which][curPos][0] + GetScore(table[which][nextPos][2], idx);\n                    break;\n                case \"ConvergentSwarm\":\n                    // 策略為：只考慮 目前總分+權重+轉向分數+估算\n                    total = table[which][curPos][0] + (weight + GetScore(table[which][curPos][2], idx)) * Math.pow(GetHeuristic(nextPos, end[which]), 7);\n                    break;\n                case \"BidirectionSwarm\":\n                    // 策略為：只考慮 目前總分+權重+轉向分數+估算\n                    total = table[which][curPos][0] + weight + GetScore(table[which][curPos][2], idx) + Math.pow(GetHeuristic(nextPos, end[which]), 2);\n                    break;\n                default:\n                    break;\n            }\n\n            if (total <= table[which][nextPos][0]) {\n                table[which][nextPos][0] = total;\n                table[which][nextPos][1] = curPos;\n                switch (idx) {\n                    case 0:\n                        if (which === 0) table[which][nextPos][2] = \"up\";\n                        else table[which][nextPos][2] = \"down\";\n                        break;\n                    case 1:\n                        if (which === 0) table[which][nextPos][2] = \"right\";\n                        else table[which][nextPos][2] = \"left\";\n                        break;\n                    case 2:\n                        if (which === 0) table[which][nextPos][2] = \"down\";\n                        else table[which][nextPos][2] = \"up\";\n                        break;\n                    case 3:\n                        if (which === 0) table[which][nextPos][2] = \"left\";\n                        else table[which][nextPos][2] = \"right\";\n                        break;\n                    default:\n                        break;\n                }\n\n                switch (whichAlgo) {\n                    case \"Dijkstra\":\n                        table[which][nextPos][3] = table[which][nextPos][0];\n                        break;\n                    case \"Astar\":\n                        table[which][nextPos][3] = table[which][nextPos][0] + GetHeuristic(nextPos, endPos);\n                        break;\n                    case \"Swarm\":\n                        table[which][nextPos][3] = table[which][nextPos][0];\n                        break;\n                    case \"GreedyBestFirstSearch\":\n                        table[which][nextPos][3] = table[which][nextPos][0] + GetScore(table[which][nextPos][2], idx);\n                        break;\n                    case \"ConvergentSwarm\":\n                        table[which][nextPos][3] = table[which][nextPos][0];\n                        break;\n                    case \"BidirectionSwarm\":\n                        table[which][nextPos][3] = table[which][nextPos][0];\n                        break;\n                    default:\n                        break;\n                }\n            }\n\n            // 加入尚未走過的點 \n            if (!visited[which].has(curPos.toString())) {\n                unvisited[which].push(nextPos);\n            }\n\n            // 若找尋過程有對方搜尋到的，則更新actualEnd\n            if (whichAlgo === \"BidirectionSwarm\") {\n                if (visited[(which + 1) % 2].has(curPos.toString())) {\n                    if (actualEnd === null) {\n                        actualEnd = curPos;\n                        var tmp = actualEnd;\n                        while (tmp) { // 因為找到start時的previous vertex為null\n                            if (which === 0) {\n                                curShortestPath.unshift(tmp); // bidirection 左右兩邊要插入的方式相反\n                                retDirection.unshift(table[which][tmp][2]);\n                            } else {\n                                curShortestPath.push(tmp);\n                                retDirection.push(table[which][tmp][2]);\n                            }\n                            tmp = table[which][tmp][1];\n                        }\n                        if (which === 1) {\n                            // end 奇數個: actualEnd下面會在計算一次，而因為要保證「過彎處為上一個的方向」，故下面不計算actualEnd\n                        } else {\n                            // start 偶數個: actualEnd下面會在計算一次，因此去除\n                            curShortestPath.splice(curShortestPath.length - 1, 1);\n                            retDirection.splice(retDirection.length - 1, 1);\n                        }\n                    } else {\n                        isFoundEnd = true;\n                    }\n                }\n            } else {\n                if (nextPos.toString() === endPos.toString()) { // 看是否找到終點了\n                    actualEnd = nextPos;\n                    isFoundEnd = true;\n\n                    // 因為是找四周，所以找到end之後，要把end資訊加入其中\n                    table[which][actualEnd][1] = curPos;\n                }\n            }\n        })\n\n        if (!visited[which].has(curPos.toString())) {\n            searchPath.push([curPos]); // 加入搜尋範圍\n            visited[which].add(curPos.toString()); // 加入已走過\n        }\n\n        if (isFoundEnd) { // 找到終點跳出\n            searchPath.push([actualEnd]); // 先加入258行，再加入終點\n            break;\n        }\n    }\n\n    // 若有找到終點再判斷最小路徑\n    if (isFoundEnd) {\n        curPos = actualEnd;\n        if (whichAlgo !== \"BidirectionSwarm\") which = 1;\n        while (curPos) { // 因為找到start時的previous vertex為null\n            if (which === 1) {\n                if (whichAlgo === \"BidirectionSwarm\") {\n                    if (curPos.toString() !== actualEnd.toString()) { // 因為要保證「過彎處為上一個的方向」，故下面不計算actualEnd\n                        curShortestPath.unshift(curPos); // bidirection 左右兩邊要插入的方式相反\n                        retDirection.unshift(table[(which + 1) % 2][curPos][2]);\n                    }\n                } else {\n                    curShortestPath.unshift(curPos); // bidirection 左右兩邊要插入的方式相反\n                    retDirection.unshift(table[(which + 1) % 2][curPos][2]);\n                }\n            } else {\n                curShortestPath.push(curPos);\n                retDirection.push(table[(which + 1) % 2][curPos][2]);\n            }\n            curPos = table[(which + 1) % 2][curPos][1];\n        }\n    }\n\n    // 因為是找四周圍，只更新是周圍，所以頭的資訊不會被更新，因此去除頭且延伸目前的第一個位置即可\n    retDirection.splice(0, 1);\n    retDirection.unshift(retDirection[0]);\n    // BidirectionSwarm 有兩個頭，所以尾巴的頭也要做一次\n    if (whichAlgo === \"BidirectionSwarm\") {\n        retDirection.unshift(retDirection[0]);\n        retDirection.splice(retDirection.length - 1, 1);\n    }\n    return curShortestPath;\n}\n\n// 推測值：用距離來表示，因為是棋盤，所以改成最短距離幾格\nfunction GetHeuristic(startPos, endPos) {\n    return Math.abs(endPos[0] - startPos[0]) + Math.abs(endPos[1] - startPos[1]);\n}\n\n// 找出分數最小點，策略：考慮所有的分數 目前總分+權重+轉向分數+估值\nfunction GetClosestNode(table, strategy, unvisited, endPos) {\n    let retPos, retIndex;\n    for (var i = 0; i < unvisited.length; i++) {\n        if (!retPos || table[retPos][strategy] > table[unvisited[i]][strategy]) {\n            retPos = unvisited[i];\n            retIndex = i;\n\n            // 若相等則取得 估值大的（距離目標遠的）\n        } else if (table[retPos][strategy] === table[unvisited[i]][strategy]) {\n            if (GetHeuristic(retPos, endPos) > GetHeuristic(unvisited[i], endPos)) {\n                retPos = unvisited[i];\n                retIndex = i;\n            }\n        }\n    }\n\n    unvisited.splice(retIndex, 1);\n    return retPos;\n}\n\n// 取得轉向分數\n// 考慮轉向分數是為了只搜尋一條線，如果沒有這個分數，則搜尋會變成三條線，因為１點的前下上 距離終點 的估值可能相同，所以會走三條路\nfunction GetScore(direction, index) {\n    var score = 0;\n    switch (direction) {\n        case \"up\":\n            switch (index) {\n                case 0:\n                    score = 1;\n                    break;\n                case 1:\n                    score = 2;\n                    break;\n                case 2:\n                    score = 3;\n                    break;\n                case 3:\n                    score = 2;\n                    break;\n                default:\n                    break;\n            }\n            break;\n        case \"right\":\n            switch (index) {\n                case 0:\n                    score = 2;\n                    break;\n                case 1:\n                    score = 1;\n                    break;\n                case 2:\n                    score = 2;\n                    break;\n                case 3:\n                    score = 3;\n                    break;\n                default:\n                    break;\n            }\n            break;\n        case \"down\":\n            switch (index) {\n                case 0:\n                    score = 3;\n                    break;\n                case 1:\n                    score = 2;\n                    break;\n                case 2:\n                    score = 1;\n                    break;\n                case 3:\n                    score = 2;\n                    break;\n                default:\n                    break;\n            }\n            break;\n        case \"left\":\n            switch (index) {\n                case 0:\n                    score = 2;\n                    break;\n                case 1:\n                    score = 3;\n                    break;\n                case 2:\n                    score = 2;\n                    break;\n                case 3:\n                    score = 1;\n                    break;\n                default:\n                    break;\n            }\n            break;\n        default:\n            break;\n    }\n    return score;\n}\n\nexport default Dijkstra;","import BFS from '../../Backend/Algorithms/BFS';\nimport DFS from '../../Backend/Algorithms/DFS';\nimport Dijkstra from '../../Backend/Algorithms/Dijkstra';\n\nexport function UpdateTable(Start, ClearPath, algorithm, speed) {\n    ClearPath(false)\n    switch (algorithm.get) {\n        case \"Algorithm_Dijkstra\":\n            Dijkstra(\"Dijkstra\", Start, speed.get[1]);\n            break;\n        case 'Algorithm_AStar':\n            Dijkstra(\"Astar\", Start, speed.get[1]);\n            // Astar(Start, speed.get[1]);\n            break;\n        case \"Algorithm_Greedy_Best_First\":\n            Dijkstra(\"GreedyBestFirstSearch\", Start, speed.get[1]);\n            // GreedyBestFirstSearch(Start, speed.get[1]);\n            break;\n        case \"Algorithm_Swarm\":\n            Dijkstra(\"Swarm\", Start, speed.get[1]);\n            // Swarm(Start, speed.get[1]);\n            break;\n        case \"Algorithm_Convergent_Swarm\":\n            Dijkstra(\"ConvergentSwarm\", Start, speed.get[1]);\n            // ConvergentSwarm(Start, speed.get[1]);\n            break;\n        case \"Algorithm_Bidrectional_Swarm\":\n            Dijkstra(\"BidirectionSwarm\", Start, speed.get[1]);\n            // BidirectionSwarm(Start, speed.get[1]);\n            break;\n        case \"Algorithm_Breadth_First\":\n            BFS(Start, speed.get[1]);\n            break;\n        case \"Algorithm_Depth_First\":\n            DFS(Start, speed.get[1]);\n            break;\n        default:\n            break;\n    }\n}","import { useContext } from 'react'\nimport { tableVar, touchContext, updateContext, componentKind, synchronize } from './TableIndex'\nimport { SearchAnimation, SearchBombAnimation, MazeAnimation, FinalAnimation, FinalMazeAnimation } from './Animation'\nimport { sysStatusContext, algorithmContext, bombContext, speedContext, position } from '../../Core'\nimport { setTable } from './SetTable'\nimport { UpdateTable } from './UpdateTable'\nimport { WhichComponentSame } from './WhichComp'\n\n\nfunction ButtonEvent() {\n    const [touch, update] = [useContext(touchContext), useContext(updateContext)]\n    const [algorithm, bomb, sysSpeed, sysStatus] = [useContext(algorithmContext), useContext(bombContext), useContext(speedContext), useContext(sysStatusContext)]\n\n    const Start = (search, path, pathDirection, speed, bomb = []) => {\n        if (update.get && synchronize.update) {\n            FinalAnimation(search, path, pathDirection, bomb)\n        } else {\n            // console.log(\"Start\")\n            sysStatus.set(\"RUNNING\")\n            update.set(\"True\")\n            synchronize.update = true\n            SearchBombAnimation(search, bomb, path, pathDirection, speed, 0, SearchAnimation, () => sysStatus.set(\"IDLE\"))\n        }\n    }\n\n    const CreateMaze = (maze, speed) => {\n        if (speed === 0) {\n            FinalMazeAnimation(maze)\n        } else {\n            sysStatus.set(\"RUNNING\")\n            MazeAnimation(maze, speed, 0, () => sysStatus.set(\"IDLE\"))\n        }\n    }\n\n    const Addbomb = () => {\n        // console.log(\"AddBomb\")\n        const index = Math.floor(tableVar.rowSize / 2) * tableVar.colSize + Math.floor(tableVar.colSize / 2)\n\n        if (WhichComponentSame(index) <= 2) {\n            return\n        }\n\n        bomb.set(\"True\")\n        setTable(index, componentKind.bomb, true)\n\n        if (update.get) {\n            UpdateTable(Start, ClearPath, algorithm, sysSpeed)\n        }\n    }\n\n    const RemoveBomb = () => {\n        // console.log(\"RemoveBomb\")\n        if(position.bomb !== false){\n            setTable(position.bomb, componentKind.background, true)\n        }  \n        bomb.set(\"False\")\n\n        if (update.get) {\n            UpdateTable(Start, ClearPath, algorithm, sysSpeed)\n        }\n    }\n\n    const ClearWalls = () => {\n        // console.log(\"ClearWall\")\n        const wall = Object.keys(position.wall)\n        for (var i = 0; i < wall.length; i++) {\n            setTable(wall[i].split(\",\"), componentKind.background, true)\n        }\n        ClearWeights()\n        ClearPath()\n        touch.set(\"\")\n    }\n\n    const ClearWeights = () => {\n        // console.log(\"ClearWeights\")\n        const weight = Object.keys(position.weight)\n        for (var i = 0; i < weight.length; i++) {\n            setTable(weight[i].split(\",\"), componentKind.background, true)\n        }\n        if(touch.get.start !== componentKind.wall){\n            touch.set({componentKind: componentKind.start, under: componentKind.background})\n        }\n        if(touch.get.end !== componentKind.wall){\n            touch.set({componentKind: componentKind.end, under: componentKind.background})\n        }\n        if(touch.get.bomb !== componentKind.wall){\n            touch.set({componentKind: componentKind.bomb, under: componentKind.background})\n        }\n        ClearPath()\n    }\n\n    const ClearPath = (event = true) => {\n        // console.log(\"ClearPath\")\n        if (event) {\n            update.set(\"False\")\n            synchronize.update = false\n        }\n        for (var i = 0; i < tableVar.rowSize * tableVar.colSize; i++) {\n            if (WhichComponentSame(i) >= 5) {\n                setTable(i, componentKind.background)\n            } else if (WhichComponentSame(i) === 3) {\n                setTable(i, componentKind.weightStatic)\n            } else if (WhichComponentSame(i) === 2) {\n                setTable(i, componentKind.bomb)\n            } else if (WhichComponentSame(i) === 1) {\n                setTable(i, componentKind.end)\n            } else if (WhichComponentSame(i) === 0) {\n                setTable(i, componentKind.start)\n            }\n        }\n    }\n\n    const ClearBoard = () => {\n        // console.log(\"ClearBoard\")\n        update.set(\"False\")\n        for (var i = 0; i < tableVar.rowSize * tableVar.colSize; i++) {\n            setTable(i, componentKind.background, true)\n        }\n        setTable(Math.floor(tableVar.rowSize / 2) * tableVar.colSize + Math.floor(tableVar.colSize / 4), componentKind.start, true)\n        setTable(Math.floor(tableVar.rowSize / 2 + 1) * tableVar.colSize - Math.floor(tableVar.colSize / 4), componentKind.end, true)\n        touch.set(\"\")\n        bomb.set(\"False\")\n    }\n\n    return { Start, Addbomb, RemoveBomb, ClearWalls, ClearPath, ClearBoard, CreateMaze, ClearWeights }\n}\n\nexport default ButtonEvent\n\n\n\n","import React, { useContext } from 'react';\r\nimport { NavDropdown, Nav } from 'react-bootstrap';\r\nimport { algorithmContext, sysStatusContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\nimport ButtonEvent from '../TableHelper/ButtonEvent';\r\n\r\nfunction DropdownAlgorithm() {\r\n    const algoContext = useContext(algorithmContext);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const [className, toggleHandler] = Colored();\r\n    const buttonEvent = ButtonEvent()\r\n\r\n    const DropdownAlgorithmHandler = (eventKey) => {\r\n\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Algorithm_Dijkstra\":\r\n                algoContext.set('Algorithm_Dijkstra');\r\n                break;\r\n            case \"Algorithm_AStar\":\r\n                algoContext.set('Algorithm_AStar');\r\n                break;\r\n            case \"Algorithm_Greedy_Best_First\":\r\n                algoContext.set('Algorithm_Greedy_Best_First');\r\n                break;\r\n            case \"Algorithm_Swarm\":\r\n                algoContext.set('Algorithm_Swarm');\r\n                break;\r\n            case \"Algorithm_Convergent_Swarm\":\r\n                algoContext.set('Algorithm_Convergent_Swarm');\r\n                break;\r\n            case \"Algorithm_Bidrectional_Swarm\":\r\n                buttonEvent.RemoveBomb(); // 按下去後要清空bomb\r\n                algoContext.set('Algorithm_Bidrectional_Swarm');\r\n                break;\r\n            case \"Algorithm_Breadth_First\":\r\n                buttonEvent.ClearWeights(); // 按下去後要清空weight\r\n                algoContext.set('Algorithm_Breadth_First');\r\n                break;\r\n            case \"Algorithm_Depth_First\":\r\n                buttonEvent.ClearWeights(); // 按下去後要清空weight\r\n                algoContext.set('Algorithm_Depth_First');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item>\r\n            <NavDropdown xs={1} title={<span className={className}>Algorithms</span>} id=\"DropdownAlgorithm\" onSelect={(eventKey) => DropdownAlgorithmHandler(eventKey)}\r\n                onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}\r\n            >\r\n                <NavDropdown.Item eventKey=\"Algorithm_Dijkstra\">Dijkstra's Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_AStar\">A* Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Greedy_Best_First\">Greedy Best-First Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Swarm\">Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Convergent_Swarm\">Convergent Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Bidrectional_Swarm\">Bidirectional Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Breadth_First\">Breadth-First Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Depth_First\">Depth-First Search</NavDropdown.Item>\r\n            </NavDropdown>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default DropdownAlgorithm;","import { position } from '../../Core';\n\nfunction Simple_Stair_Pattern() {\n    var walls = [];\n    var weights = [];\n    var towardUp = true;\n    var x = position.rowSize;\n\n    for (var y = 0; y < position.colSize; y++) {\n        if (towardUp) {\n            x--;\n            if (x < 0) {\n                towardUp = false;\n                x = 1;\n            }\n        } else {\n            x++;\n            if (x >= position.rowSize) {\n                towardUp = true;\n                x = position.rowSize - 2;\n            }\n        }\n        walls.push([x, y]);\n    }\n    return [walls, weights];\n}\n\nexport default Simple_Stair_Pattern;","import { position } from '../../Core';\n\n// 取得四周圍\nexport const CreateAround = (wallSet = new Set()) => {\n    var walls = [];\n    var x = 0;\n    var y = 0;\n\n    // 取得外圍\n    var tmp = position.colSize - 1;\n    for (y = 0; y <= tmp; y++) {\n        walls.push([0, y]);\n        walls.push([0, tmp]);\n        wallSet.add([0, y].toString());\n        wallSet.add([0, tmp].toString());\n        tmp--;\n    }\n\n    for (x = 0; x < position.rowSize; x++) {\n        walls.push([x, 0]);\n        walls.push([x, position.colSize - 1]);\n        wallSet.add([x, 0].toString());\n        wallSet.add([x, position.colSize - 1].toString());\n\n    }\n\n    tmp = position.colSize - 1;\n    for (y = 0; y <= tmp; y++) {\n        walls.push([position.rowSize - 1, y]);\n        walls.push([position.rowSize - 1, tmp]);\n        wallSet.add([position.rowSize - 1, y].toString());\n        wallSet.add([position.rowSize - 1, tmp].toString());\n        tmp--;\n    }\n    return walls;\n}\n\nexport const IndexOf = (array, target) => {\n    for (let i = 0; i < array.length; i++) {\n        if (target.toString() === array[i].toString()) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nexport const Random = (n) => {\n    return Math.floor(Math.random() * n);\n}\n\nexport const RandomEven = (n) => {\n    return Math.floor(Math.random() * n / 2) * 2;\n}","import { position } from '../../Core';\nimport { CreateAround } from './Core';\n\nfunction Binary_Tree() {\n    var wallSet = new Set();\n    var walls = CreateAround(wallSet);\n    var weights = [];\n    var x = 0;\n    var y = 0;\n\n    // Binary Tree to get random maze\n    // http://weblog.jamisbuck.org/2011/2/1/maze-generation-binary-tree-algorithm\n    for (x = 2; x <= position.rowSize - 2; x += 2) {\n        for (y = 2; y <= position.colSize - 2; y += 2) {\n            if (wallSet.has([x - 2, y].toString()) && wallSet.has([x, y - 2].toString())) {\n                var randomFace = Math.floor(Math.random() * 2) + 1;// 1=上，2=左\n                switch (randomFace) {\n                    case 1:\n                        walls.push([x - 1, y]);\n                        wallSet.add([x - 1, y].toString());\n                        break;\n                    case 2:\n                        walls.push([x, y - 1]);\n                        wallSet.add([x, y - 1].toString());\n                        break;\n                    default:\n                        break;\n                }\n            } else if (wallSet.has([x - 2, y].toString())) {\n                walls.push([x - 1, y]);\n                wallSet.add([x - 1, y].toString());\n            } else if (wallSet.has([x, y - 2].toString())) {\n                walls.push([x, y - 2]);\n                wallSet.add([x, y - 1].toString());\n            } else {\n                console.log('Some Error in Binary_Tree_Maze()');\n            }\n            walls.push([x, y]);\n            wallSet.add([x, y].toString());\n        }\n    }\n\n    return [walls, weights];\n}\n\nexport default Binary_Tree;","import { position } from '../../Core';\nimport { CreateAround, Random, RandomEven, IndexOf } from './Core';\n\nconst direction = {\n    horizontal: 0,\n    vertical: 1\n}\n\nfunction RecursiveDivision(whichAlgo) {\n    var wallSet = new Set();\n    var walls = CreateAround(wallSet);\n    var weights = [];\n\n    // true代表水平，false代表垂直\n    // 改用最後一個參數選定要跑哪個方向\n    switch (whichAlgo) {\n        case \"RecursiveDivision\":\n            DoRecursiveDivision(0, 0, position.colSize, position.rowSize, wallSet, walls);\n            break;\n        case \"RecursiveDivision_Vertical\":\n            DoRecursiveDivision(0, 0, position.colSize, position.rowSize, wallSet, walls, true);\n            break;\n        case \"RecursiveDivision_Horizontal\":\n            DoRecursiveDivision(0, 0, position.colSize, position.rowSize, wallSet, walls, false);\n            break;\n        default:\n            break;\n    }\n\n    // 建立牆壁時，因為不會考慮特殊node，所以還是有機會在node周圍建立起牆壁，而形成死路 https://i.imgur.com/r6gYt39.png\n    // 因此跑完之後，去看特殊node是否四周圍死路\n    // 若為死路，則周圍隨機去除一個合法的wall即可\n    var specialNodes = [position.start, position.bomb, position.end];\n    for (let i = 0; i < specialNodes.length; i++) {\n        let curPos = specialNodes[i];\n\n        if (!curPos) continue; // 如果特殊node不存在，就不判斷\n\n        let up = curPos[0] - 1 >= 0 ? [curPos[0] - 1, curPos[1]] : null;\n        let right = curPos[1] + 1 < position.colSize ? [curPos[0], curPos[1] + 1] : null;\n        let down = curPos[0] + 1 < position.rowSize ? [curPos[0] + 1, curPos[1]] : null;\n        let left = curPos[1] - 1 >= 0 ? [curPos[0], curPos[1] - 1] : null;\n\n        let validWall = [];\n        let blockDirection = 0;\n        // eslint-disable-next-line\n        [up, right, down, left].forEach(nextPos => {\n            if (nextPos === null) {\n                blockDirection++;\n            } else if (wallSet.has(nextPos.toString())) {\n                validWall.push(nextPos);\n                blockDirection++;\n            }\n        })\n        if (blockDirection === 4) {\n            let removedWallIndex = Random(validWall.length);\n            walls.splice(IndexOf(walls, validWall[removedWallIndex]), 1);\n        }\n    }\n\n    return [walls, weights];\n}\n\n// 與正常版的差別在於，選擇切水平或是垂直的條件不同\n// 水平偏移（horizontal skew）：表示優先跑左邊，所以第一個遞迴規定跑水平，第二個規定跑垂直\nfunction DoRecursiveDivision(x, y, width, height, wallSet, walls, boolDirection = null) {\n    // 而且為了保證道路暢通，兩個牆壁+一個空白才會形成一個道路\n    // 因此長跟寬必須至少大於3\n    if (width < 4 || height < 4) {\n        return;\n    }\n\n    // 選擇切割方向：挑選短的那邊，一樣就random\n    var curDirection = null;\n    if (boolDirection === null) {\n        if (width < height) curDirection = direction.horizontal;\n        else if (width > height) curDirection = direction.vertical;\n        else curDirection = Random(2);\n    } else {\n        if (boolDirection) {\n            curDirection = direction.vertical;\n        }\n        else {\n            curDirection = direction.horizontal;\n        }\n    }\n\n\n    var door;\n    if (curDirection === direction.horizontal) {\n        // 假設現在height=11，表示x=x0跟x=10的那整條都是牆壁\n        // 則 x建立牆壁的範圍為 2~8 (牆壁跟牆壁中間要留一條路)\n\n        // 因此x要x0+2，而剩下的random範圍為0~6且只能為偶數\n        var randomX = x + 2 + RandomEven(height - 4);\n\n        // 假設width = 9，表示y=y0跟y=8的那整條都是牆壁\n        // 開路的範圍為 y0+ 1~7（但開路必為奇數），而剩下的random範圍為0~6且只能為偶數\n        door = y + 1 + RandomEven(width - 3);\n\n        // 建立牆壁，範圍從 y0~y0+width\n        for (var _y = y; _y < y + width; _y++) {\n            if (_y !== door) {\n                walls.push([randomX, _y]);\n                wallSet.add([randomX, _y].toString());\n            }\n        }\n\n        // 跑 x,y,width 且 height變成了剛剛選的高-x0（跑上面）\n        DoRecursiveDivision(x, y, width, randomX - x, wallSet, walls, boolDirection); // 第一個規定跑指定方向\n\n        // 跑 新x, y, width 且 height變成了 目前總高 - 剛剛選的高度(跑下面)\n        DoRecursiveDivision(randomX, y, width, height - (randomX - x), wallSet, walls, !boolDirection); // 第二個規定跑(!指定方向)\n    } else {\n        // 垂直雷同\n        var randomY = y + 2 + RandomEven(width - 4);\n        door = x + 1 + RandomEven(height - 3);\n\n        for (var _x = x; _x < x + height; _x++) {\n            if (_x !== door) {\n                walls.push([_x, randomY]);\n                wallSet.add([_x, randomY].toString());\n            }\n        }\n\n        DoRecursiveDivision(x, y, randomY - y, height, wallSet, walls, boolDirection); // 第一個規定跑指定方向\n        DoRecursiveDivision(x, randomY, width - (randomY - y), height, wallSet, walls, !boolDirection); // 第二個規定跑(!指定方向)\n    }\n}\n\nexport default RecursiveDivision;","import { position } from '../../Core';\nimport { Random, RandomEven } from './Core';\n\n// Kruskal 雖然是要找最小權重，但是maze的權重都是相同的\n// 因此此演算法就變成，隨機找一個，跟周圍相連，且不要形成cycle\n// 這種特性就可以用來建立隨機迷宮的牆壁\n// 但不會保證活路\nfunction Kruskal() {\n    var wallSet = new Set();\n    var walls = [];\n    var weights = [];\n\n    // 建立parent與rank陣列 來判斷是否有cycle及union\n    var parent = {};\n    var rank = {};\n    for (let i = 0; i < position.rowSize; i++) {\n        for (let j = 0; j < position.colSize; j++) {\n            parent[[i, j]] = [i, j];// 每個人的root一開始都是自己\n            rank[[i, j]] = 0;// 每個人的rank一開始都是0\n        }\n    }\n\n    // 長度為三，因為只能在偶數位置建立牆壁，所以長度三才能與其他牆壁相連\n    // 用佔比率來終止迴圈，0.51是經驗法則\n    while (wallSet.size / (position.rowSize * position.colSize) < 0.51) {\n\n        // 取 產生偶數位置起點\n        let x = [RandomEven(position.rowSize), RandomEven(position.colSize)];\n        let x1 = null;\n        let x2 = null;\n        let xHead = null;\n        let yHead = null;\n        let face = Random(4);\n        switch (face) {\n            case 0: // 走上\n                if (x[0] - 2 < 0) continue;\n                x1 = [x[0] - 1, x[1]];\n                x2 = [x[0] - 2, x[1]];\n                xHead = FindRoot(parent, x);\n                yHead = FindRoot(parent, x2);\n                break;\n            case 1: // 走右\n                if (x[1] + 2 >= position.colSize) continue;\n                x1 = [x[0], x[1] + 1];\n                x2 = [x[0], x[1] + 2];\n                xHead = FindRoot(parent, x);\n                yHead = FindRoot(parent, x2);\n                break;\n            case 2:\n                if (x[0] + 2 >= position.rowSize) continue;\n                x1 = [x[0] + 1, x[1]];\n                x2 = [x[0] + 2, x[1]];\n                xHead = FindRoot(parent, x);\n                yHead = FindRoot(parent, x2);\n                break;\n            case 3:\n                if (x[1] - 2 < 0) continue;\n                x1 = [x[0], x[1] - 1];\n                x2 = [x[0], x[1] - 2];\n                xHead = FindRoot(parent, x);\n                yHead = FindRoot(parent, x2);\n                break;\n            default:\n                return [];\n        }\n\n\n        if (xHead !== yHead) {\n            walls.push(x);\n            walls.push(x1);\n            walls.push(x2);\n            wallSet.add(x.toString());\n            wallSet.add(x1.toString());\n            wallSet.add(x2.toString());\n            Union(parent, rank, x, x2);\n        }\n    }\n\n    return [walls, weights];\n}\n\n/* Disjoint Set */\n// parentArray => index的爸爸在parentArray[index] = parentIndex\n// index => 目前是誰\nfunction FindRoot(parentArray, index) {\n    if (parentArray[index] !== index) {\n        // 記得邊找邊更新\n        parentArray[index] = FindRoot(parentArray, parentArray[index]);\n    }\n    return parentArray[index];\n}\n\n\n// parentArray => index的爸爸在parentArray[index] = parentIndex\n// rankArray => 每個點的階層是多少，數字大表示越接近root\n// index1, index3 => 哪兩個點要union\nfunction Union(parentArray, rankArray, index1, index3) {\n    // 要用頭去union\n    index1 = FindRoot(parentArray, index1);\n    index3 = FindRoot(parentArray, index3);\n\n    if (index1 === index3) {\n        return;\n    }\n\n    // 如果rank3 > rank1 => index1的爸爸是index3\n    if (rankArray[index1] < rankArray[index3]) {\n        parentArray[index1] = index3;\n\n        // 如果rank3 < rank1 => index3的爸爸是index1\n    } else if (rankArray[index1] > rankArray[index3]) {\n        parentArray[index3] = index1;\n\n        // 如果rank3 === rank1 => 選一個來組合，並讓爸爸的RANK+1\n    } else {\n        parentArray[index3] = index1;\n        rankArray[index1] += 1;\n    }\n}\n\n\nexport default Kruskal;","import { position } from '../../Core';\n\nconst probability = 0.2\n\nfunction Basic_Random_Maze(){\n    const wall = []\n    const weights = []\n\n    const [height, width] = [position.rowSize, position.colSize]\n    for(var i = 0; i < height; i++){\n        for(var j = 0; j < width; j++){\n            if(Math.random() < probability){\n                if(i === position.start[0] && j === position.start[1]){\n                    continue\n                }else if(i === position.end[0] && j === position.end[1]){\n                    continue\n                }else if(position.bomb !== false && i === position.bomb[0] && j === position.bomb[1]){\n                    continue\n                }else{\n                    wall.push([i, j])\n                }\n            }\n        }\n    }\n\n    return [wall, weights]\n}\n\nexport default Basic_Random_Maze","import { position } from '../../Core';\n\nconst probability = 0.35\n\nfunction Basic_Weight_Maze(){\n    const wall = []\n    const weight = []\n\n    const [height, width] = [position.rowSize, position.colSize]\n    for(var i = 0; i < height; i++){\n        for(var j = 0; j < width; j++){\n            if(Math.random() < probability){\n                if(i === position.start[0] && j === position.start[1]){\n                    continue\n                }else if(i === position.end[0] && j === position.end[1]){\n                    continue\n                }else if(position.bomb !== false && i === position.bomb[0] && j === position.bomb[1]){\n                    continue\n                }else{\n                    weight.push([i, j])\n                }\n            }\n        }\n    }\n\n    return [wall, weight]\n}\n\nexport default Basic_Weight_Maze","import { position } from '../../Core';\nimport { Random, RandomEven } from './Core';\n\n// 從一點出發找四周圍最小的權重\n// 但隨機迷宮可以改成\n// 從一點出發，往四周圍前進，並只去隨機找有走過的點\nfunction Prim() {\n    var walls = [];\n    var weights = [];\n\n\n    // Random Pick a position\n    // 取偶數，因為牆壁長度為３，棋盤長寬為奇數，所以取偶數才能伸展到四邊\n    var startNode = [2 + RandomEven(position.rowSize - 4), 2 + RandomEven(position.colSize - 4)];\n    var visited = new Set();\n    var queue = [startNode];\n\n    while (queue.length > 0) {\n        var randomIndex = RandomEven(queue.length); // random pick a node\n        var node = queue[randomIndex];\n\n        var availableDirection = [];\n\n        if (node[0] - 2 >= 0 && !visited.has([node[0] - 2, node[1]].toString())) {\n            availableDirection.push([[node[0] - 2, node[1]], [node[0] - 1, node[1]]]);\n        }\n        if (node[1] + 2 < position.colSize && !visited.has([node[0], node[1] + 2].toString())) {\n            availableDirection.push([[node[0], node[1] + 2], [node[0], node[1] + 1]]);\n        }\n        if (node[0] + 2 < position.rowSize && !visited.has([node[0] + 2, node[1]].toString())) {\n            availableDirection.push([[node[0] + 2, node[1]], [node[0] + 1, node[1]]]);\n        }\n        if (node[1] - 2 >= 0 && !visited.has([node[0], node[1] - 2].toString())) {\n            availableDirection.push([[node[0], node[1] - 2], [node[0], node[1] - 1]]);\n        }\n\n        // 若四個方位都沒有可能，再把考慮點去掉\n        if (availableDirection.length === 0) {\n            queue.splice(randomIndex, 1);\n            continue;\n        }\n\n        // 隨機挑一個方位\n        randomIndex = Random(availableDirection.length);\n        node = availableDirection[randomIndex];\n\n        // 加入此方位的牆壁\n        walls.push(node[1]);\n        walls.push(node[0]);\n\n        // 加入已走過的點\n        visited.add(node[0].toString());\n\n        // 加入考慮點\n        queue.push(node[0]);\n    }\n    return [walls, weights];\n}\n\nexport default Prim;","import { position } from '../../Core';\nimport { CreateAround, Random } from './Core';\n\nfunction Eller() {\n    var weights = [];\n    var walls = CreateAround();\n    /*\n    道路從第二層開始，牆壁從第一層開始\n    因為預設第一層的道路都是暢通的（周圍圍起來，要留出一格道路），故道路要+1\n    之後的每層每次抓取右邊兩格（一個道路一個牆壁）\n    若牆壁建立，則看「已經建立過道路了沒」（保證每個set都至少有一個建立道路（Eller））\n        若已經建立了，則看道路是否要建立\n            要建立=沒事\n            不建立=道路下方建立一個牆壁\n        若沒有建立，則這個要建立道路（也就是不要在道路下方建立一格牆壁）\n            = 沒事\n        「已經建立過道路了沒」 = false （重新計算）\n    若牆壁不建立，則\n        看道路是否要建立\n            要建立=「已經建立過道路了沒=True」\n            不建立=道路下方建立一個牆壁\n    \n    edge長度為2\n    */\n    // 要保證最下方跟最右方是暢通的，因為周圍有框起來\n    for (let i = 1; i < position.rowSize - 3; i += 2) {\n        var haveBuildedPath = false;\n        for (let j = 1; j < position.colSize - 3; j += 2) {\n            var buildWall = 1 === Random(2) ? true : false;\n            var buildPath = 1 === Random(2) ? true : false;\n\n            // 牆壁，看是否要建立牆壁\n            if (buildWall) {\n                walls.push([i, j + 1]);\n                walls.push([i + 1, j + 1]);\n\n                if (haveBuildedPath) {\n                    if (!buildPath) {\n                        walls.push([i + 1, j]);\n                        walls.push([i + 1, j + 1]);\n                    }\n                }\n                haveBuildedPath = false;\n            } else {\n                // 為了保持迷宮的感覺，牆壁不能太少\n                // 因此改成每個set只能有一個開口，且開口大小為1\n                if (buildPath && !haveBuildedPath) {\n                    haveBuildedPath = true;\n                    walls.push([i + 1, j + 1]); // 開口大小為1，所以開口的右方也要是牆壁\n                } else {\n                    walls.push([i + 1, j]);\n                    walls.push([i + 1, j + 1]);\n                }\n            }\n        }\n    }\n\n    return [walls, weights];\n}\n\n\nexport default Eller;","import React, { useContext } from 'react'\r\nimport { NavDropdown, Nav } from 'react-bootstrap';\r\nimport { sysStatusContext, speedContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\nimport ButtonEvent from '../TableHelper/ButtonEvent';\r\nimport Simple_Stair_Pattern from '../../Backend/Maze/Simple_Stair_Pattern';\r\nimport Binary_Tree from '../../Backend/Maze/Binary_Tree';\r\nimport RecursiveDivision from '../../Backend/Maze/RecursiveDivision';\r\nimport Kruskal from '../../Backend/Maze/Kruskal';\r\nimport Basic_Random_Maze from '../../Backend/Maze/Basic_Random_Maze';\r\nimport Basic_Weight_Maze from '../../Backend/Maze/Basic_Weight_Maze';\r\nimport Prim from '../../Backend/Maze/Prim';\r\nimport Eller from '../../Backend/Maze/Eller';\r\n\r\nfunction DropdownMaze() {\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const speedStatus = useContext(speedContext);\r\n    const [className, toggleHandler] = Colored();\r\n    const buttonEvent = ButtonEvent();\r\n    const speed = speedStatus.get[1];\r\n\r\n    const DropdownMazeHandler = (eventKey) => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n        buttonEvent.ClearPath()\r\n        buttonEvent.ClearWalls()\r\n        switch (eventKey) {\r\n            case \"Maze_Recursive_Division\":\r\n                buttonEvent.CreateMaze(RecursiveDivision(\"RecursiveDivision\"), speed);\r\n                break;\r\n            case \"Maze_Recursive_Division_vertical\":\r\n                buttonEvent.CreateMaze(RecursiveDivision(\"RecursiveDivision_Vertical\"), speed);\r\n                break;\r\n            case \"Maze_Recursive_Division_horizontal\":\r\n                buttonEvent.CreateMaze(RecursiveDivision(\"RecursiveDivision_Horizontal\"), speed);\r\n                break;\r\n            case \"Maze_Basic_Random\":\r\n                buttonEvent.CreateMaze(Basic_Random_Maze(), 0)\r\n                break;\r\n            case \"Maze_Basic_Weight_Maze\":\r\n                buttonEvent.CreateMaze(Basic_Weight_Maze(), 0)\r\n                break;\r\n            case \"Maze_Simple_stair_pattern\":\r\n                buttonEvent.CreateMaze(Simple_Stair_Pattern(), speed);\r\n                break;\r\n            case \"Maze_Binary_Tree\":\r\n                buttonEvent.CreateMaze(Binary_Tree(), speed);\r\n                break;\r\n            case \"Maze_Kruskal\":\r\n                buttonEvent.CreateMaze(Kruskal(), speed);\r\n                break;\r\n            case \"Maze_Prim\":\r\n                buttonEvent.CreateMaze(Prim(), speed);\r\n                break;\r\n            case \"Maze_Eller\":\r\n                buttonEvent.CreateMaze(Eller(), speed);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item>\r\n            <NavDropdown xs={1} title={<span className={className}>Mazes & Patterns</span>} id=\"DropdownMaze\" onSelect={DropdownMazeHandler}\r\n                onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}\r\n            >\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division\">Recursive Division</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division_vertical\">Recursive Division(vertical skew)</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division_horizontal\">Recursive Division(horizontal skew)</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Basic_Random\">Basic Random Maze</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Basic_Weight_Maze\">Basic Weight Maze</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Simple_stair_pattern\">Simple Stair Pattern</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Binary_Tree\">Binary Tree Generator</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Kruskal\">Kruskal's Maze</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Prim\">Prim's Maze</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Eller\">Eller's Maze</NavDropdown.Item>\r\n            </NavDropdown>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default DropdownMaze;","import React, { useState, useContext } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { sysStatusContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\n\r\nfunction NavLink({ names, handlers }) {\r\n    const [whichHandler, setWhichHandler] = useState(0);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const [className, toggleHandler] = Colored();\r\n\r\n    const localHandler = () => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        setWhichHandler(preWhichHandler => (preWhichHandler + 1) % handlers.length);\r\n        handlers[whichHandler]();\r\n    }\r\n\r\n    return (\r\n        <Nav.Item xs={1}>\r\n            <Nav.Link onClick={localHandler} className={className} onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}>{names[whichHandler]}</Nav.Link>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default NavLink\r\n","import { useState, useContext } from 'react';\nimport { sysStatusContext, algorithmContext } from '../Core';\nimport '../App.scss';\n\nconst Colored = () => {\n    const sysStatus = useContext(sysStatusContext);\n    const algoStatus = useContext(algorithmContext);\n    const [isHover, setIsHover] = useState(false);\n    const [className, setClassName] = useState(\"nav-link-default\");\n\n    const toggleHandler = () => {\n        if (isHover) {\n            setClassName(\"nav-link-default\");\n            setIsHover(false);\n        } else {\n            if (sysStatus.get !== \"IDLE\" || algoStatus.get === \"\" || algoStatus.get === \"Algorithm_Bidrectional_Swarm\") {\n                setClassName(\"nav-link-red\");\n            } else {\n                setClassName(\"nav-link-green\");\n            }\n            setIsHover(true);\n        }\n    }\n\n    return [className, toggleHandler];\n}\n\nexport default Colored\n","import React, { useState, useContext, useEffect } from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport { bombContext, sysStatusContext, algorithmContext } from '../../Core';\nimport Colored from '../../HOC/Colored_AddButton';\nimport { IsMount } from '../../Core/IsMount.js'\n\nfunction NavAddBomb({ names, handlers }) {\n    const [whichHandler, setWhichHandler] = useState(0);\n    const bomb = useContext(bombContext);\n    const sysStatus = useContext(sysStatusContext);\n    const algoContext = useContext(algorithmContext);\n    const [className, toggleHandler] = Colored();\n    const isMount = IsMount();\n\n    useEffect(() => {\n        if (isMount) return; // 防止第一次render也會跑進來執行\n\n        if (bomb.get === true) {\n            setWhichHandler(1);\n        } else {\n            setWhichHandler(0);\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [bomb])\n\n    useEffect(() => {\n        if (isMount) return;\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [whichHandler])\n\n    const localHandler = () => {\n        if (isMount) return;\n\n        if (sysStatus.get !== \"IDLE\" || algoContext.get === \"\" || algoContext.get === \"Algorithm_Bidrectional_Swarm\") {\n            return;\n        }\n\n        handlers[whichHandler]();\n    }\n\n\n    return (\n        <Nav.Item xs={1}>\n            <Nav.Link onClick={localHandler} className={className} onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}>{names[whichHandler]}</Nav.Link>\n        </Nav.Item>\n    )\n}\n\nexport default NavAddBomb\n","import { useRef, useEffect } from 'react';\n\nexport const IsMount = () => {\n    const isMount = useRef(true);\n\n    useEffect(() => {\n        isMount.current = false;\n    }, [])\n\n    return isMount.current;\n}\n\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { algorithmContext, sysStatusContext, speedContext } from '../../Core';\r\nimport ButtonEvent from '../TableHelper/ButtonEvent';\r\nimport BFS from '../../Backend/Algorithms/BFS';\r\nimport DFS from '../../Backend/Algorithms/DFS';\r\nimport Dijkstra from '../../Backend/Algorithms/Dijkstra';\r\n\r\nconst NavButton = () => {\r\n\r\n    const [buttonName, setButtonName] = useState(\"Visualize !\");\r\n    const [myVariant, setMyVariant] = useState(\"\");\r\n    const algoContext = useContext(algorithmContext);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const speed = useContext(speedContext);\r\n    const buttonEvent = ButtonEvent();\r\n\r\n    useEffect(() => {\r\n        setMyVariant('buttonEnable');\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        var algoName = \"\";\r\n        switch (algoContext.get) {\r\n            case \"Algorithm_Dijkstra\":\r\n                algoName = \"Dijkstra's\";\r\n                break;\r\n            case 'Algorithm_AStar':\r\n                algoName = \"A*\";\r\n                break;\r\n            case \"Algorithm_Greedy_Best_First\":\r\n                algoName = \"Greedy\";\r\n                break;\r\n            case \"Algorithm_Swarm\":\r\n                algoName = \"Swarm\";\r\n                break;\r\n            case \"Algorithm_Convergent_Swarm\":\r\n                algoName = \"Convergent Swarm\";\r\n                break;\r\n            case \"Algorithm_Bidrectional_Swarm\":\r\n                algoName = \"Bidrectional Swarm\";\r\n                break;\r\n            case \"Algorithm_Breadth_First\":\r\n                algoName = \"BFS\";\r\n                break;\r\n            case \"Algorithm_Depth_First\":\r\n                algoName = \"DFS\";\r\n                break;\r\n            default:\r\n                algoName = \"\";\r\n                break;\r\n        }\r\n        setButtonName(`Visualize ${algoName}!`);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [algoContext.get])\r\n\r\n    useEffect(() => {\r\n        if (sysStatus.get === 'RUNNING') {\r\n            setMyVariant('buttonDisable');\r\n        } else {\r\n            setMyVariant('buttonEnable');\r\n        }\r\n    }, [sysStatus.get])\r\n\r\n\r\n    const handler = () => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        if (algoContext.get === \"\") {\r\n            setButtonName(\"Pick an Algorithm\");\r\n        } else {\r\n            buttonEvent.ClearPath();\r\n            switch (algoContext.get) {\r\n                case \"Algorithm_Dijkstra\":\r\n                    Dijkstra(\"Dijkstra\", buttonEvent.Start, speed.get[1]);\r\n                    break;\r\n                case 'Algorithm_AStar':\r\n                    Dijkstra(\"Astar\", buttonEvent.Start, speed.get[1]);\r\n                    // Astar(buttonEvent.Start, speed.get[1]);\r\n                    break;\r\n                case \"Algorithm_Greedy_Best_First\":\r\n                    Dijkstra(\"GreedyBestFirstSearch\", buttonEvent.Start, speed.get[1]);\r\n                    // GreedyBestFirstSearch(buttonEvent.Start, speed.get[1]);\r\n                    break;\r\n                case \"Algorithm_Swarm\":\r\n                    Dijkstra(\"Swarm\", buttonEvent.Start, speed.get[1]);\r\n                    // Swarm(buttonEvent.Start, speed.get[1]);\r\n                    break;\r\n                case \"Algorithm_Convergent_Swarm\":\r\n                    Dijkstra(\"ConvergentSwarm\", buttonEvent.Start, speed.get[1]);\r\n                    // ConvergentSwarm(buttonEvent.Start, speed.get[1]);\r\n                    break;\r\n                case \"Algorithm_Bidrectional_Swarm\":\r\n                    Dijkstra(\"BidirectionSwarm\", buttonEvent.Start, speed.get[1]);\r\n                    // BidirectionSwarm(buttonEvent.Start, speed.get[1]);\r\n                    break;\r\n                case \"Algorithm_Breadth_First\":\r\n                    BFS(buttonEvent.Start, speed.get[1]);\r\n                    break;\r\n                case \"Algorithm_Depth_First\":\r\n                    DFS(buttonEvent.Start, speed.get[1]);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item>\r\n            <button className={myVariant} onClick={handler}>{buttonName}</button>\r\n        </Nav.Item>\r\n    )\r\n};\r\n\r\nexport default NavButton\r\n","import React, { useState, useContext } from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport { sysStatusContext } from '../../Core';\nimport Colored from '../../HOC/Colored';\n\nfunction NavClearBoard({ names, handlers }) {\n    const [whichHandler, setWhichHandler] = useState(0);\n    const sysStatus = useContext(sysStatusContext);\n    const [className, toggleHandler] = Colored();\n\n    const localHandler = () => {\n        if (sysStatus.get !== \"IDLE\") {\n            return;\n        }\n\n        setWhichHandler(preWhichHandler => (preWhichHandler + 1) % handlers.length);\n        handlers[whichHandler]();\n    }\n\n    return (\n        <Nav.Item xs={1}>\n            <Nav.Link onClick={localHandler} className={className} onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}>{names[whichHandler]}</Nav.Link>\n        </Nav.Item>\n    )\n}\n\nexport default NavClearBoard\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport { sysStatusContext } from '../../Core';\r\nimport { speedContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\n\r\nfunction DropdownSpeed() {\r\n    const [title, setTitle] = useState('Average');\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const speed = useContext(speedContext);\r\n    const [className, toggleHandler] = Colored();\r\n\r\n    useEffect(() => {\r\n        setTitle(speed.get[0]);\r\n    }, [speed.get])\r\n\r\n\r\n    const DropdownSpeedHandler = (eventKey) => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Fast\":\r\n                speed.set(\"Fast\");\r\n                break;\r\n            case \"Average\":\r\n                speed.set(\"Average\");\r\n                break;\r\n            case \"Slow\":\r\n                speed.set(\"Slow\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <NavDropdown xs={1} title={<span className={className}>Speed: {title}</span>} id=\"DropdownSpeed\" onSelect={DropdownSpeedHandler}\r\n            onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}\r\n        >\r\n            <NavDropdown.Item eventKey=\"Fast\">Fast</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Average\">Average</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Slow\">Slow</NavDropdown.Item>\r\n        </NavDropdown>\r\n    )\r\n}\r\n\r\nexport default DropdownSpeed;","import React from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Logo from './HeaderHelper/Logo';\r\nimport DropdownAlgorithm from './HeaderHelper/DropdownAlgorithm';\r\nimport DropdownMaze from './HeaderHelper/DropdownMaze';\r\nimport NavLink from './HeaderHelper/NavLink';\r\nimport NavAddBomb from './HeaderHelper/NavAddBomb';\r\nimport NavButton from './HeaderHelper/NavButton';\r\nimport NavClearBoard from './HeaderHelper/NavClearBoard';\r\nimport DropdownSpeed from './HeaderHelper/DropdownSpeed';\r\nimport ButtonEvent from './TableHelper/ButtonEvent';\r\n\r\nfunction Header() {\r\n    const buttonEvent = ButtonEvent()\r\n\r\n    return (\r\n        // <Navbar collapseOnSelect expand=\"xl\" bg='dark' variant='dark'>\r\n        <Navbar collapseOnSelect expand=\"xl\" className=\"navbar\">\r\n            <Logo />\r\n            <Navbar.Toggle aria-controls=\"Collapse\" />\r\n            <Navbar.Collapse id=\"Collapse\" className='nvbar-collapse'>\r\n                <Nav className=\"nav-bar\">\r\n                    <DropdownAlgorithm />\r\n                    <DropdownMaze />\r\n                    <NavAddBomb names={[\"Add Bomb\", \"Remove Bomb\"]} handlers={[buttonEvent.Addbomb, buttonEvent.RemoveBomb]} />\r\n                    <NavButton />\r\n                    <NavClearBoard names={[\"Clear Board\"]} handlers={[buttonEvent.ClearBoard]} />\r\n                    <NavLink names={[\"Clear Walls & Weights\"]} handlers={[buttonEvent.ClearWalls]} />\r\n                    <NavLink names={[\"Clear Path\"]} handlers={[buttonEvent.ClearPath]} />\r\n                    <DropdownSpeed />\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Header\r\n","\nexport function RestrictComp(algorithm){\n\n    switch (algorithm.get) {\n        case \"Algorithm_Dijkstra\":\n            return { wall: true, weight: true, bomb: true }\n        case \"Algorithm_AStar\":\n            return { wall: true, weight: true, bomb: true }\n        case \"Algorithm_Greedy_Best_First\":\n            return { wall: true, weight: true, bomb: true }\n        case \"Algorithm_Swarm\":\n            return { wall: true, weight: true, bomb: true }\n        case \"Algorithm_Convergent_Swarm\":\n            return { wall: true, weight: true, bomb: true }\n        case \"Algorithm_Bidrectional_Swarm\":\n            return { wall: true, weight: true, bomb: false }\n        case \"Algorithm_Breadth_First\":\n            return { wall: true, weight: false, bomb: true }\n        case \"Algorithm_Depth_First\":\n            return { wall: true, weight: false, bomb: true }\n        default:\n            return { wall: true, weight: true, bomb: true }\n    }   \n}","import { componentKind, keyboardSupport, weightValueRange } from './TableIndex'\nimport { position } from '../../Core/index'\nimport { RestrictComp } from './RestrictComp'\n\n\nexport function KeyboardEvent(event, algorithm, weightValue = null) {\n    // console.log(\"KeyboardEvent\")\n\n    if(RestrictComp(algorithm).weight === false){\n        if(weightValue != null){\n            componentKind.add = false\n            keyboardSupport.down = false\n        }else{\n            componentKind.add = componentKind.wall\n            keyboardSupport.down = true\n        }\n        return\n    \n    }\n\n    if(event.key === keyboardSupport.w){\n        if(componentKind.add === componentKind.wall){\n            componentKind.add = componentKind.weight\n            keyboardSupport.down = false\n        }else{\n            componentKind.add = componentKind.wall\n            keyboardSupport.down = true\n        }\n\n    }else if(event.key === keyboardSupport.plus && position.weightValue + weightValueRange.increase <= weightValueRange.max){\n        if(weightValue != null){\n            weightValue.set(\"+\")\n            keyboardSupport.down = false\n        }else{\n            keyboardSupport.down = true\n        }\n\n    }else if(event.key === keyboardSupport.sub && position.weightValue - weightValueRange.increase >= weightValueRange.min){\n        if(weightValue != null){\n            weightValue.set(\"-\")\n            keyboardSupport.down = false\n        }else{\n            keyboardSupport.down = true\n        }\n\n    }else if(event.key === keyboardSupport.plus || event.key === keyboardSupport.sub){\n        if(weightValue != null){\n            weightValue.set(!weightValue.get.status)\n            keyboardSupport.down = false\n        }else{\n            keyboardSupport.down = true\n        }\n    }\n\n    // console.log(position.weightValue)\n\n}\n","import { useContext, useEffect } from 'react'\nimport { sysStatusContext, algorithmContext, speedContext } from '../../Core/index'\nimport { tableVar, touchContext, moveContext, updateContext, weightValueContext, componentKind, keyboardSupport, synchronize } from './TableIndex'\nimport { setTable } from './SetTable'\nimport { UpdateTable } from './UpdateTable'\nimport { WhichComponent } from './WhichComp'\nimport { KeyboardEvent } from './KeyboardEvent'\nimport ButtonEvent from './ButtonEvent'\n\n\nfunction MouseEvent() {\n    const [touch, move, update, weightValue] = [useContext(touchContext), useContext(moveContext), useContext(updateContext), useContext(weightValueContext)]\n    const [algorithm, speed, sysStatus] = [useContext(algorithmContext), useContext(speedContext), useContext(sysStatusContext)]\n    const buttonEvent = ButtonEvent()\n\n    useEffect(() => {\n        synchronize.algorithm = algorithm\n        synchronize.sysStatus = sysStatus\n        // eslint-disable-next-line\n    }, [algorithm.get, sysStatus.get])\n\n    document.addEventListener('keydown', function(event) {\n        if(synchronize.sysStatus.get !== \"IDLE\"){\n            return\n        }\n        if(keyboardSupport.down){\n            KeyboardEvent(event, synchronize.algorithm, weightValue)\n        }\n    })\n    document.addEventListener('keyup', function(event) {\n        if(keyboardSupport.down === false){\n            KeyboardEvent(event, synchronize.algorithm)\n        }\n    })\n\n    const MouseDownHandler = (e) => {\n        // console.log(\"MouseDownHandler \" + e.target.id)\n\n        if (sysStatus.get !== \"IDLE\" || componentKind.add === false) {\n            return\n        }\n\n        e.preventDefault()\n\n        tableVar.id = parseInt(e.target.id)\n        const whichComponent = WhichComponent(tableVar.id, touch)\n\n        if(whichComponent.type){\n            setTable(tableVar.id, whichComponent.rKind, true)\n            move.set(componentKind.add)\n\n        }else{\n            move.set(whichComponent.kind)\n        }\n    }\n\n    const MouseUpHandler = (e) => {\n        // console.log(\"MouseUpHandler \" + e.target.id)\n\n        if (sysStatus.get !== \"IDLE\" || componentKind.add === false) {\n            return\n        }\n\n        move.set(\"\")\n\n        if(update.get && move.get !== \"\"){\n            UpdateTable(buttonEvent.Start, buttonEvent.ClearPath, algorithm, speed)\n        }\n    }\n\n    const OnMouseEnterHanlder = (e) => {\n        // console.log(\"OnMouseEnterHanlder \" + e.target.id)\n\n        if (sysStatus.get !== \"IDLE\" || componentKind.add === false) {\n            return\n        }\n\n        tableVar.newId = parseInt(e.target.id)\n        const whichOldComponent = WhichComponent(tableVar.id, touch)\n        const whichNewComponent = WhichComponent(tableVar.newId, touch)\n\n        if(move.get === componentKind.add && whichNewComponent.type){\n            setTable(tableVar.newId, whichNewComponent.rKind, true)\n            tableVar.id = parseInt(tableVar.newId)\n\n        }else if(move.get !== componentKind.add && move.get !== \"\" && whichNewComponent.type){\n            setTable(tableVar.id, whichOldComponent.touch, true)\n            touch.set({componentKind: whichOldComponent.kind, under: whichNewComponent.kind})\n            setTable(tableVar.newId, whichOldComponent.kind, true)\n            tableVar.id = parseInt(tableVar.newId)\n        }\n\n        if(update.get && move.get !== \"\"){\n            UpdateTable(buttonEvent.Start, buttonEvent.ClearPath, algorithm, speed)\n        }\n    }\n\n    return {MouseDownHandler, MouseUpHandler, OnMouseEnterHanlder}\n\n}\n\nexport default MouseEvent","import { useEffect } from 'react'\nimport MouseEvent from './MouseEvent'\nimport { tableVar, componentKind } from './TableIndex'\nimport { position } from '../../Core/index'\n\nfunction TableUI() {\n    const [rowSize, colSize, size] = [tableVar.rowSize, tableVar.colSize, tableVar.size]\n\n    const row = Array.from(Array(rowSize).keys())\n    const col = Array.from(Array(colSize).keys())\n\n    const mouesEvent = MouseEvent()\n    const [MouseDownHandler, MouseUpHandler, OnMouseEnterHanlder] = [mouesEvent.MouseDownHandler, mouesEvent.MouseUpHandler, mouesEvent.OnMouseEnterHanlder]\n\n    const createTable = row.map((rowIndex, index) => {\n        return ( \n            <tr key = {index} height={size}>\n                {col.map((colIndex, index) => {\n                    // console.log(rowIndex + \" \" + colIndex)\n                    return (\n                        <td id = {rowIndex * colSize + colIndex} key = {index} className = {componentKind.background} width={size} onMouseUp = {MouseUpHandler} onMouseDown = {MouseDownHandler} onMouseEnter = {OnMouseEnterHanlder}>\n                            {}\n                        </td>)}\n                    )}\n            </tr>)}\n        )\n\n    useEffect(() => {\n        document.getElementById((position.start[0] * tableVar.colSize + position.start[1]).toString()).className = componentKind.start\n        document.getElementById((position.end[0] * tableVar.colSize + position.end[1]).toString()).className = componentKind.end\n    }, [])\n    \n    \n      \n    return (\n        <div className = \"tablePadding\">\n            <table id = \"board\" align=\"center\" border=\"1\" cellSpacing=\"0\">\n                <tbody>\n                    {createTable}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default TableUI\n","import { useEffect, useContext, useState } from 'react'\nimport { weightValueContext, updateContext, weightValueRange } from './TableIndex'\nimport { algorithmContext, speedContext, position } from '../../Core/index'\nimport { UpdateTable } from './UpdateTable'\nimport ButtonEvent from './ButtonEvent'\nimport Modal from 'react-bootstrap/Modal';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport ProgressBar from 'react-bootstrap/ProgressBar';\n\n\nfunction WeightModal() {\n    // console.log(\"WeightModal\")\n    const [weightValue, update, algorithm, speed] = [useContext(weightValueContext), useContext(updateContext), useContext(algorithmContext), useContext(speedContext)]\n    const [initShow, setInitShow] = useState(false)\n    const [show, setShow] = useState(0)\n    const buttonEvent = ButtonEvent()\n    \n    useEffect(() => {\n        if(initShow){\n            setShow(show => show + 1)\n            setTimeout(() => {\n                setShow(show => {\n                    if(show === 0){\n                        return 0\n                    }else{\n                        return show - 1\n                    }\n                })\n            }, weightValueRange.waiting)\n\n            if(update.get && Object.keys(position.weight).length !== 0){\n                UpdateTable(buttonEvent.Start, buttonEvent.ClearPath, algorithm, speed)\n            }\n        }\n        setInitShow(true)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [weightValue.get])\n\n    const handleClose = () => {\n        setShow(0)\n    }\n\n    return (\n        <div>\n            <Modal show = {show > 0} size = \"sm\" onHide = {handleClose} dialogClassName = \"weightModal\">\n                <Modal.Body>\n                    <Row>\n                        <Col xs = {1}><div className = \"weightImage\"/></Col>\n                        <Col><ProgressBar className = \"progress\" now={weightValue.get.value} label={weightValue.get.value} min = {weightValueRange.min} max = {weightValueRange.max} /></Col>\n                    </Row>    \n                </Modal.Body>\n            </Modal>\n        </div>\n    )\n}\n\nexport default WeightModal\n","import TableUI from './TableHelper/TableUI';\nimport { useContext, useEffect } from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { sysStatusContext } from '../Core';\nimport WeightModal from './TableHelper/WeightModal';\n\nfunction Table() {  \n\tconst sysStatus = useContext(sysStatusContext);\n\n\tuseEffect(()=>{\n\t\tsetTimeout(()=>{sysStatus.set(\"IDLE\");}, 1000);\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [])\n\t\n\n\tif (sysStatus.get === \"LOADING\"){\n\t\treturn (<Spinner animation=\"border\" variant=\"warning\" />);\n\t}\n\telse{\n\t\treturn (\n\t        <div id = \"UI\">\n\t            <TableUI/>\n\t\t\t\t<WeightModal />\n\t        </div>\n\t    )\n\t}\n}\n\nexport default Table\n","import { useState, useContext, useEffect } from 'react';\nimport { algorithmContext } from '../../Core';\n\nfunction Info() {\n\tconst [bannedBomb, setBannedBomb] = useState(\"\");\n\tconst [bannedBFSDFS, setBannedBFSDFS] = useState(\"\");\n\tconst algoContext = useContext(algorithmContext);\n\n\tuseEffect(() => {\n\t\tif (algoContext.get === \"Algorithm_Bidrectional_Swarm\") {\n\t\t\tsetBannedBomb(\"banned\");\n\t\t} else {\n\t\t\tsetBannedBomb(\"\");\n\t\t}\n\n\t\tif (algoContext.get === \"Algorithm_Breadth_First\" || algoContext.get === \"Algorithm_Depth_First\") {\n\t\t\tsetBannedBFSDFS(\"banned\");\n\t\t} else {\n\t\t\tsetBannedBFSDFS(\"\");\n\t\t}\n\t}, [algoContext.get])\n\n\treturn (\n\t\t<div id=\"mainInfo\">\n\t\t\t<ul>\n\t\t\t\t<li> <div className=\"Info-Start-Node\"></div>Start Node </li>\n\t\t\t\t<li> <div className=\"Info-End-Node\"></div>Target Node </li>\n\t\t\t\t<li className={bannedBomb}> <div className=\"Info-Bomb-Node\"></div>Gas Node </li>\n\t\t\t\t<li className={bannedBFSDFS}> <div className=\"Info-Weight-Node\"></div>Weight Node </li>\n\t\t\t\t<li> <div className=\"Info-Unvisited-Node\"></div>Unvisited Node </li>\n\t\t\t\t<li> <div className=\"Info-Visited-Node\"></div><div className=\"Info-Visited1-Node\"></div>Visited Node </li>\n\t\t\t\t<li> <div className=\"Info-ShortestPathNode-Node\"></div>Shortest-Path Node </li>\n\t\t\t\t<li> <div className=\"Info-WallNode-Node\"></div>Wall Node </li>\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n\nexport default Info;","import { useState, useContext, useEffect } from 'react';\nimport { algorithmContext } from '../../Core';\n\nfunction AlgorithmDescriptor() {\n    const [algorithmName, setAlgorithmName] = useState('Pick an algorithm and visualize it!');\n    const [discription1, setDiscription1] = useState('');\n    const [discription2, setDiscription2] = useState('');\n    const algoContext = useContext(algorithmContext);\n\n    useEffect(() => {\n        var algoName = \"\";\n        var d1 = \"\";\n        var d2 = \"\";\n        switch (algoContext.get) {\n            case \"Algorithm_Dijkstra\":\n                algoName = \"Dijkstra's Algorithm\";\n                d1 = \"weighted\";\n                d2 = \"guarantees\";\n                break;\n            case 'Algorithm_AStar':\n                algoName = \"A* Search\";\n                d1 = \"weighted\";\n                d2 = \"guarantees\";\n                break;\n            case \"Algorithm_Greedy_Best_First\":\n                algoName = \"Greedy Best-first Search\";\n                d1 = \"weighted\";\n                d2 = \"does not guarantee\";\n                break;\n            case \"Algorithm_Swarm\":\n                algoName = \"Swarm Algorithm\";\n                d1 = \"weighted\";\n                d2 = \"does not guarantee\";\n                break;\n            case \"Algorithm_Convergent_Swarm\":\n                algoName = \"Convergent Swarm Algorithm\";\n                d1 = \"weighted\";\n                d2 = \"does not guarantee\";\n                break;\n            case \"Algorithm_Bidrectional_Swarm\":\n                algoName = \"Bidrectional Swarm Algorithm\";\n                d1 = \"weighted\";\n                d2 = \"does not guarantee\";\n                break;\n            case \"Algorithm_Breadth_First\":\n                algoName = \"Breath-first Search\";\n                d1 = \"unweighted\";\n                d2 = \"guarantee\";\n                break;\n            case \"Algorithm_Depth_First\":\n                algoName = \"Depth-first Search\";\n                d1 = \"unweighted\";\n                d2 = \"does not guarantee\";\n                break;\n            default:\n                algoName = \"Pick an algorithm and visualize it!\";\n                d1 = \"\";\n                d2 = \"\";\n                break;\n        }\n\n        setAlgorithmName(algoName);\n        setDiscription1(d1);\n        setDiscription2(d2);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [algoContext.get])\n\n    if (algoContext.get === \"\") {\n        return (\n            <div id=\"algorithmDescriptor\">\n                {algorithmName}\n            </div>\n        )\n    } else {\n        return (\n            <div id=\"algorithmDescriptor\">\n                <b>{algorithmName}</b> is <i>{discription1}</i> and <i>{discription2}</i> the shortest path!\n            </div>\n        )\n    }\n\n}\n\nexport default AlgorithmDescriptor;","import React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport data from '../../Resources/Data/Modalnfo.json';\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react'\n\nfunction IntroductionModal() {\n    const [pages, setPages] = useState(1);\n    const [show, setShow] = useState(true);\n    const [language, setLanguage] = useState(0);\n    const [checked, setChecked] = useState(true);\n    const maxPages = data.length;\n\n    const HandlePrevious = () => {\n        setPages(prePage => prePage - 1 >= 1 ? prePage - 1 : prePage);\n    }\n\n    const HandleNext = () => {\n        if (pages + 1 > maxPages) {\n            setShow(false);\n            return;\n        }\n        setPages(prePage => prePage + 1 <= maxPages ? prePage + 1 : prePage);\n    }\n\n    return (\n        <Modal show={show} size='xl' backdrop=\"static\" centered dialogClassName=\"Modal\">\n            <div className=\"ml-auto Modal-Page\">{`${pages}/${maxPages}`}</div>\n            <div className=\"Modal-Title\">{data[pages - 1][\"Title\"][language]}</div>\n\n            <Modal.Body className=\"Modal-Body\">\n                <p className=\"Modal-BodyText\">{data[pages - 1][\"Dialog\"][language]}</p>\n                <p className=\"Modal-BodyText1\">{data[pages - 1][\"Body\"][language]}</p>\n                {pages === 1 ? <div className=\"Logo\"></div> : null}\n                {pages === 2 ? <div className=\"ShortestPath\"></div> : null}\n                {pages === 3 ? <div className=\"Algorithm\"></div> : null}\n                {pages === 4 ? <div className=\"Maze\"></div> : null}\n                {pages === 5 ? <div className=\"WallWeight\"></div> : null}\n                {pages === 6 ? <div className=\"AddBomb\"></div> : null}\n                {pages === 7 ? <div className=\"StartDrag\"></div> : null}\n                {pages === 8 ? <div className=\"Other\"></div> : null}\n                {pages === 9 ? (language === 1 ? <p className=\"Modal-BodyText1\">本專案由 <a href=\"https://github.com/novayo\">novayo</a> 及 <a href=\"https://github.com/ChengTsungPao\">ChengTsungPao</a> 共同製作</p> : <p className=\"Modal-BodyText1\">This application made by <a href=\"https://github.com/novayo\">novayo</a> and <a href=\"https://github.com/ChengTsungPao\">ChengTsungPao</a>.</p>) : null}\n            </Modal.Body>\n\n            <Modal.Footer>\n                <Button className=\"mr-auto Model-Button-success\" variant='outline-success' size=\"md\" onClick={() => setShow(false)}>Skip Tutorial</Button>\n                <BootstrapSwitchButton\n                    checked={checked}\n                    onlabel='En'\n                    onstyle='outline-info'\n                    offlabel='Ch'\n                    offstyle='outline-success'\n                    size=\"md\" // eslint-disable-next-line \n                    style='mr-auto' // 這裡會有怪怪的warning，所以加上上面的註解去除warning\n                    onChange={(checked) => {\n                        if (checked) {\n                            setLanguage(0);\n                        } else {\n                            setLanguage(1);\n                        }\n                        setChecked(pre => !pre);\n                    }}\n                />\n                <Button className=\"Model-Button-danger\" variant='outline-danger' size=\"md\" onClick={() => HandlePrevious()}>Previous</Button>\n                <Button className=\"Model-Button-success\" variant='outline-success' size=\"md\" onClick={() => HandleNext()}>Next</Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default IntroductionModal\n","import React, { useState } from 'react'\nimport Modal from 'react-bootstrap/Modal';\nimport emailjs from 'emailjs-com';\n\n// emailjs: https://dashboard.emailjs.com/admin/templates/57jjeff\nfunction Email() {\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    function SendEmail(e) {\n        e.preventDefault();\n        console.log(e.target)\n        emailjs.sendForm('PathFinding', 'template_642ox18', e.target, 'user_ukZuD8qr4KxKtc2jHeC1M')\n            .then((result) => {\n                console.log(result.text);\n            }, (error) => {\n                console.log(error.text);\n            });\n        handleClose();\n    }\n\n    return (\n        <>\n            <div id=\"container-floating\">\n                <div id=\"floating-button\" data-toggle=\"tooltip\" data-placement=\"left\" data-original-title=\"Create\" onClick={handleShow}>\n                    <img className=\"edit\" src=\"https://i.imgur.com/1vyJaJF.png\" alt=\"\" />\n                </div>\n            </div>\n\n            {/* Form Style 4: https://www.sanwebe.com/2014/08/css-html-forms-designs */}\n            <Modal show={show} size='md' onHide={handleClose} centered dialogClassName=\"Modal1\">\n                <form className=\"form-style-4\" onSubmit={SendEmail}>\n                    <label htmlFor=\"field1\">\n                        <span>Enter Your Name</span><input type=\"text\" name=\"from_name\" required />\n                    </label>\n                    <label htmlFor=\"field2\">\n                        <span>Email Address</span><input type=\"email\" name=\"user_email\" required />\n                    </label>\n                    <label htmlFor=\"field4\">\n                        <span>Message to Us</span><textarea name=\"message\" required></textarea>\n                    </label>\n                    <label>\n                        <span> </span><input type=\"submit\" value=\"Send Letter\" />\n                    </label>\n                </form>\n            </Modal>\n        </>\n    )\n}\n\nexport default Email\n","import './App.scss';\nimport { useReducer } from 'react';\nimport Header from './Frontend/Header';\nimport { algorithmReducer, initialAlgorithm, algorithmContext } from './Core';\nimport { sysStatusReducer, initialsysStatus, sysStatusContext } from './Core';\nimport { bombContext, bombInitial, bombReducer } from './Core';\nimport { speedContext, speedInitial, speedReducer } from './Core';\nimport Table from './Frontend/Table';\nimport { touchReducer, touchInitial, touchContext } from './Frontend/TableHelper/TableIndex';\nimport { moveReducer, moveInitial, moveContext } from './Frontend/TableHelper/TableIndex';\nimport { weightValueReducer, weightValueInitial, weightValueContext } from './Frontend/TableHelper/TableIndex';\nimport { updateReducer, updateInitial, updateContext } from './Frontend/TableHelper/TableIndex';\nimport Info from './Frontend/HeaderHelper/Info';\nimport AlgorithmDescriptor from './Frontend/HeaderHelper/AlgorithmDescriptor';\nimport IntroductionModal from './Frontend/HeaderHelper/IntroductionModal';\nimport Email from './Frontend/HeaderHelper/Email';\n\nfunction App() {\n  const [curAlgorithm, setCurAlgorithm] = useReducer(algorithmReducer, initialAlgorithm);\n  const [curSysStatus, setCurSysStatus] = useReducer(sysStatusReducer, initialsysStatus);\n  const [curBomb, setCurBomb] = useReducer(bombReducer, bombInitial);\n  const [curSpeed, setCurSpeed] = useReducer(speedReducer, speedInitial);\n  const [touch, setTouch] = useReducer(touchReducer, touchInitial)\n  const [move, setMove] = useReducer(moveReducer, moveInitial)\n  const [update, setUpdate] = useReducer(updateReducer, updateInitial)\n  const [weightValue, setWeightValue] = useReducer(weightValueReducer, weightValueInitial)\n\n  return (\n    <div className=\"App\">\n      <IntroductionModal />\n      <weightValueContext.Provider value={{ get: weightValue, set: setWeightValue }}>\n        <updateContext.Provider value={{ get: update, set: setUpdate }}>\n          <moveContext.Provider value={{ get: move, set: setMove }}>\n            <touchContext.Provider value={{ get: touch, set: setTouch }}>\n              <speedContext.Provider value={{ get: curSpeed, set: setCurSpeed }}>\n                <bombContext.Provider value={{ get: curBomb, set: setCurBomb }}>\n                  <sysStatusContext.Provider value={{ get: curSysStatus, set: setCurSysStatus }}>\n                    <algorithmContext.Provider value={{ get: curAlgorithm, set: setCurAlgorithm }}>\n                      <Header />\n                      <Info />\n                      <AlgorithmDescriptor />\n                      <Table />\n                      <Email />\n                    </algorithmContext.Provider>\n                  </sysStatusContext.Provider>\n                </bombContext.Provider>\n              </speedContext.Provider>\n            </touchContext.Provider>\n          </moveContext.Provider>\n        </updateContext.Provider>\n      </weightValueContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}