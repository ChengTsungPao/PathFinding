{"version":3,"sources":["Frontend/HeaderHelper/Logo.js","Frontend/TableHelper/TableIndex.js","Core/index.js","HOC/Colored.js","Frontend/HeaderHelper/DropdownAlgorithm.js","Frontend/HeaderHelper/DropdownMaze.js","Frontend/HeaderHelper/NavLink.js","Frontend/HeaderHelper/NavAddBomb.js","Core/IsMount.js","Frontend/TableHelper/SetTable.js","Frontend/TableHelper/Animation.js","Frontend/TableHelper/WhichComp.js","Frontend/TableHelper/ButtonEvent.js","Core/Queue.js","Core/Distance.js","Backend/Bfs.js","Frontend/HeaderHelper/NavButton.js","Frontend/HeaderHelper/NavClearBoard.js","Frontend/HeaderHelper/DropdownSpeed.js","Frontend/Header.js","Frontend/TableHelper/MouseEvent.js","Frontend/TableHelper/TableUI.js","Frontend/Table.js","Frontend/HeaderHelper/Info.js","Frontend/HeaderHelper/AlgorithmDescriptor.js","App.js","reportWebVitals.js","index.js"],"names":["logo","Navbar","Brand","href","className","src","process","width","height","variant","alt","tableVar","rowSize","Math","floor","window","screen","colSize","size","id","newId","componentKind","touchContext","createContext","touchInitial","start","end","bomb","touchReducer","state","action","under","moveContext","moveReducer","position","wall","sysStatusContext","React","initialsysStatus","sysStatusReducer","bombContext","bombInitial","bombReducer","speedContext","speedInitial","speedReducer","algorithmContext","algorithmReducer","Colored","sysStatus","useContext","useState","isHover","setIsHover","setClassName","get","DropdownAlgorithm","algoContext","toggleHandler","Nav","Item","NavDropdown","xs","title","onSelect","eventKey","set","DropdownAlgorithmHandler","onMouseEnter","onMouseLeave","DropdownMaze","alert","NavLink","names","handlers","whichHandler","setWhichHandler","Link","onClick","preWhichHandler","length","NavAddBomb","isMount","useRef","useEffect","current","IsMount","setTable","index","kind","document","getElementById","toString","pos","Animation","arr","speed","count","myCallbackFunction","arrAnimation","setInterval","clearInterval","WhichComponent","touch","type","rKind","ButtonEvent","Start","search","path","console","log","searchAnimation","SearchAnimation","setTimeout","PathAnimation","Addbomb","RemoveBomb","i","ClearWalls","ClearPath","ClearBoard","Queue","this","queue","val","push","isEmpty","shift","Distance","dict","max_d","d","max","endPos","shortest","x","y","visited","Set","add","curD","Infinity","curX","curY","has","unshift","BFS","searchPath","distance","append","getLength","node","popleft","nextD","pop","getShortestPath","NavButton","buttonName","setButtonName","myVariant","setMyVariant","buttonEvent","algoName","Button","NavClearBoard","DropdownSpeed","setTitle","Header","collapseOnSelect","expand","bg","Logo","Toggle","aria-controls","Collapse","MouseEvent","move","MouseDownHandler","e","preventDefault","target","whichComponent","MouseUpHandler","OnMouseEnterHanlder","whichOldComponent","whichNewComponent","TableUI","row","Array","from","keys","col","mouesEvent","createTable","map","rowIndex","colIndex","onMouseUp","onMouseDown","align","border","cellSpacing","Table","Spinner","animation","Info","AlgorithmDescriptor","algorithmName","setAlgorithmName","discription1","setDiscription1","discription2","setDiscription2","d1","d2","App","useReducer","curAlgorithm","setCurAlgorithm","curSysStatus","setCurSysStatus","curBomb","setCurBomb","curSpeed","setCurSpeed","setTouch","setMove","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.17a62aaf.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\n\r\nfunction logo() {\r\n    return (\r\n        <Navbar.Brand href=\"/PathingFinding/\" className='Navbar-logo'>\r\n            <img\r\n                src={process.env.PUBLIC_URL + '/logo.png'} // 取得public資料夾路徑\r\n                width=\"50\"\r\n                height=\"50\"\r\n                className='d-inline-block'\r\n                variant='test'\r\n                alt='Logo'\r\n            /> {' '}\r\n                    Path-Finding\r\n        </Navbar.Brand>\r\n    )\r\n}\r\n\r\nexport default logo\r\n","import { createContext } from 'react'\n\n\nexport const tableVar = {\n    rowSize: Math.floor(window.screen.height / 30) - 12, // Math.floor((window.screen.height - document.getElementById(\"navbar\").clientHeight) / 30)\n    colSize: Math.floor(window.screen.width / 30), \n    size: 30,\n    id: \"0\",\n    newId: \"0\"\n}\n\nexport const componentKind =  {wall: \"wall\", bomb: \"bomb\", start: \"start\", end: \"end\", background: \"background\", search: \"search\", path: \"path\"}\n\n// touch status\nexport const touchContext = createContext()\nexport const touchInitial = {start: componentKind.background, end: componentKind.background, bomb: componentKind.background}\nexport const touchReducer = (state, action) => {\n    switch (action.componentKind) {\n        case componentKind.start:\n            return {...state, start: action.under}\n        case componentKind.end:\n            return {...state, end: action.under}\n        case componentKind.bomb:\n            return {...state, bomb: action.under}\n        default:\n            return touchInitial\n    }\n}\n\n// move component\nexport const moveContext = createContext()\nexport const moveInitial = \"\"\nexport const moveReducer = (state, action) => {\n    switch (action) {\n        case componentKind.start:\n            return action\n        case componentKind.end:\n            return action\n        case componentKind.bomb:\n            return action\n        case componentKind.wall:\n            return action\n        default:\n            return moveInitial\n    }\n}\n","import React from 'react'\r\nimport { tableVar } from '../Frontend/TableHelper/TableIndex'\r\n\r\n// component position\r\nexport var position = {\r\n    start: [Math.floor(tableVar.rowSize / 2), Math.floor(tableVar.colSize / 4)],\r\n    end: [Math.floor(tableVar.rowSize / 2), tableVar.colSize - Math.floor(tableVar.colSize / 4)],\r\n    bomb: false,\r\n    wall: [],\r\n    rowSize: tableVar.rowSize,\r\n    colSize: tableVar.colSize\r\n}\r\n\r\n\r\n// 目前系統狀態\r\nexport const sysStatusContext = React.createContext();\r\nexport const initialsysStatus = \"LOADING\";\r\nexport const sysStatusReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'IDLE':\r\n            return 'IDLE';\r\n        case 'RUNNING':\r\n            return 'RUNNING';\r\n        case 'LOADING':\r\n            return 'LOADING';\r\n        default:\r\n            return initialsysStatus;\r\n    }\r\n}\r\n\r\n// Bomb status\r\nexport const bombContext = React.createContext();\r\nexport const bombInitial = false;\r\nexport const bombReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'True':\r\n            return true;\r\n        case 'False':\r\n            return false;\r\n        default:\r\n            return bombInitial\r\n    }\r\n}\r\n\r\n// Speed\r\nexport const speedContext = React.createContext();\r\nexport const speedInitial = [\"average\", 1000];\r\nexport const speedReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'Fast':\r\n            return [\"Fast\", 500];\r\n        case 'Average':\r\n            return [\"Average\", 1000];\r\n        case 'Slow':\r\n            return [\"Slow\", 2000];\r\n        default:\r\n            return bombInitial\r\n    }\r\n}\r\n\r\n// 目前系統是哪種演算法\r\nexport const algorithmContext = React.createContext();\r\nexport const initialAlgorithm = \"\";\r\nexport const algorithmReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'Algorithm_Dijkstra':\r\n            return 'Algorithm_Dijkstra';\r\n        case 'Algorithm_APlus':\r\n            return 'Algorithm_APlus';\r\n        case \"Algorithm_Greedy_Best_First\":\r\n            return 'Algorithm_Greedy_Best_First';\r\n        case \"Algorithm_Swarm\":\r\n            return 'Algorithm_Swarm';\r\n        case \"Algorithm_Convergent_Swarm\":\r\n            return 'Algorithm_Convergent_Swarm';\r\n        case \"Algorithm_Bidrectional_Swarm\":\r\n            return 'Algorithm_Bidrectional_Swarm';\r\n        case \"Algorithm_Breadth_First\":\r\n            return 'Algorithm_Breadth_First';\r\n        case \"Algorithm_Depth_First\":\r\n            return 'Algorithm_Depth_First';\r\n        default:\r\n            return initialAlgorithm;\r\n    }\r\n}","import { useState, useContext } from 'react';\nimport { sysStatusContext } from '../Core';\nimport '../App.scss';\n\nconst Colored = () => {\n    const sysStatus = useContext(sysStatusContext);\n    const [isHover, setIsHover] = useState(false);\n    const [className, setClassName] = useState(\"nav-link-default\");\n\n    const toggleHandler = () => {\n        if (isHover) {\n            setClassName(\"nav-link-default\");\n            setIsHover(false);\n        } else {\n            if (sysStatus.get !== \"IDLE\") {\n                setClassName(\"nav-link-red\");\n            } else {\n                setClassName(\"nav-link-green\");\n            }\n            setIsHover(true);\n        }\n    }\n\n    return [className, toggleHandler];\n}\n\nexport default Colored\n","import React, { useContext } from 'react';\r\nimport { NavDropdown, Nav } from 'react-bootstrap';\r\nimport { algorithmContext, sysStatusContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\n\r\nfunction DropdownAlgorithm() {\r\n    const algoContext = useContext(algorithmContext);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const [className, toggleHandler] = Colored();\r\n\r\n    const DropdownAlgorithmHandler = (eventKey) => {\r\n\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Algorithm_Dijkstra\":\r\n                algoContext.set('Algorithm_Dijkstra');\r\n                break;\r\n            case \"Algorithm_APlus\":\r\n                algoContext.set('Algorithm_APlus');\r\n                break;\r\n            case \"Algorithm_Greedy_Best_First\":\r\n                algoContext.set('Algorithm_Greedy_Best_First');\r\n                break;\r\n            case \"Algorithm_Swarm\":\r\n                algoContext.set('Algorithm_Swarm');\r\n                break;\r\n            case \"Algorithm_Convergent_Swarm\":\r\n                algoContext.set('Algorithm_Convergent_Swarm');\r\n                break;\r\n            case \"Algorithm_Bidrectional_Swarm\":\r\n                algoContext.set('Algorithm_Bidrectional_Swarm');\r\n                break;\r\n            case \"Algorithm_Breadth_First\":\r\n                algoContext.set('Algorithm_Breadth_First');\r\n                break;\r\n            case \"Algorithm_Depth_First\":\r\n                algoContext.set('Algorithm_Depth_First');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item>\r\n            <NavDropdown xs={1} title={<span className={className}>Algorithms</span>} id=\"DropdownAlgorithm\" onSelect={(eventKey) => DropdownAlgorithmHandler(eventKey)}\r\n                onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}\r\n            >\r\n                <NavDropdown.Item eventKey=\"Algorithm_Dijkstra\">Dijkstra's Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_APlus\">A+ Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Greedy_Best_First\">Greedy Best-First Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Swarm\">Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Convergent_Swarm\">Convergent Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Bidrectional_Swarm\">Bidirectional Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Breadth_First\">Breadth-First Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Depth_First\">Depth-First Search</NavDropdown.Item>\r\n            </NavDropdown>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default DropdownAlgorithm;","import React, { useContext } from 'react'\r\nimport { NavDropdown, Nav } from 'react-bootstrap';\r\nimport { sysStatusContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\n\r\nfunction DropdownMaze() {\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const [className, toggleHandler] = Colored();\r\n\r\n    const DropdownMazeHandler = (eventKey) => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Maze_Recursive_Division\":\r\n                alert(\"Maze_Recursive_Division\");\r\n                break;\r\n            case \"Maze_Recursive_Division_vertical\":\r\n                alert(\"Maze_Recursive_Division_vertical\");\r\n                break;\r\n            case \"Maze_Recursive_Division_horizontal\":\r\n                alert(\"Maze_Recursive_Division_horizontal\");\r\n                break;\r\n            case \"Maze_Basic_Random\":\r\n                alert(\"Maze_Basic_Random\");\r\n                break;\r\n            case \"Maze_Basic_Weight_Maze\":\r\n                alert(\"Maze_Basic_Weight_Maze\");\r\n                break;\r\n            case \"Maze_Simple_stair_pattern\":\r\n                alert(\"Maze_Simple_stair_pattern\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item>\r\n            <NavDropdown xs={1} title={<span className={className}>Mazes & Patterns</span>} id=\"DropdownMaze\" onSelect={DropdownMazeHandler}\r\n                onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}\r\n            >\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division\">Recursive Division</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division_vertical\">Recursive Division(vertical skew)</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division_horizontal\">Recursive Division(horizontal skew)</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Basic_Random\">Basic Random Maze</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Basic_Weight_Maze\">Basic Weight Maze</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Simple_stair_pattern\">Simple Stair Pattern</NavDropdown.Item>\r\n            </NavDropdown>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default DropdownMaze;","import React, { useState, useContext } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { sysStatusContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\n\r\nfunction NavLink({ names, handlers }) {\r\n    const [whichHandler, setWhichHandler] = useState(0);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const [className, toggleHandler] = Colored();\r\n\r\n    const localHandler = () => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        setWhichHandler(preWhichHandler => (preWhichHandler + 1) % handlers.length);\r\n        handlers[whichHandler]();\r\n    }\r\n\r\n    return (\r\n        <Nav.Item xs={1}>\r\n            <Nav.Link onClick={localHandler} className={className} onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}>{names[whichHandler]}</Nav.Link>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default NavLink\r\n","import React, { useState, useContext, useEffect } from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport { bombContext, sysStatusContext } from '../../Core';\nimport Colored from '../../HOC/Colored';\nimport { IsMount } from '../../Core/IsMount.js'\n\nfunction NavAddBomb({ names, handlers }) {\n    const [whichHandler, setWhichHandler] = useState(0);\n    const bomb = useContext(bombContext);\n    const sysStatus = useContext(sysStatusContext);\n    const [className, toggleHandler] = Colored();\n    const isMount = IsMount();\n\n    useEffect(() => {\n        if (isMount) return; // 防止第一次render也會跑進來執行\n\n        if (bomb.get === true) {\n            setWhichHandler(1);\n        } else {\n            setWhichHandler(0);\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [bomb])\n\n    useEffect(() => {\n        if (isMount) return;\n\n        // handlers[whichHandler]();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [whichHandler])\n\n    const localHandler = () => {\n        if (isMount) return;\n\n        if (sysStatus.get !== \"IDLE\") {\n            return;\n        }\n\n        handlers[whichHandler]();\n    }\n\n\n    return (\n        <Nav.Item xs={1}>\n            <Nav.Link onClick={localHandler} className={className} onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}>{names[whichHandler]}</Nav.Link>\n        </Nav.Item>\n    )\n}\n\nexport default NavAddBomb\n","import { useRef, useEffect } from 'react';\n\nexport const IsMount = () => {\n    const isMount = useRef(true);\n\n    useEffect(() => {\n        isMount.current = false;\n    }, [])\n\n    return isMount.current;\n}\n\n","import { componentKind, tableVar } from './TableIndex'\nimport { position } from '../../Core/index'\n\n\nexport function setTable(index, kind){\n    document.getElementById(index.toString()).className = kind\n    const pos = [Math.floor(index / tableVar.colSize), index % tableVar.colSize]\n\n    if(kind === componentKind.wall){\n        position.wall[pos] = true\n    }else if(kind === componentKind.start){\n        position.start = pos\n    }else if(kind === componentKind.end){\n        position.end = pos\n    }else if(kind === componentKind.bomb){\n        position.bomb = pos\n    }else if(kind === componentKind.background){\n        if(position.wall[pos]){\n            delete position.wall[pos]\n        }else if(position.bomb[0] === pos[0] && position.bomb[1] === pos[1]){\n            position.bomb = false\n        }\n    }\n\n    // console.log(position)\n\n}","import { tableVar, componentKind } from './TableIndex'\nimport { setTable } from './SetTable'\n\n\nexport function Animation(arr, speed, count, componentKind, myCallbackFunction = null) { \n    const arrAnimation = setInterval(() => {\n        if(count === arr.length){\n            if (myCallbackFunction !== null){\n                myCallbackFunction();\n            }\n            clearInterval(arrAnimation);\n        }else{\n            setTable(arr[count][0] * tableVar.colSize + arr[count][1], componentKind)\n        }\n        count += 1\n    }, speed / arr.length)\n}\n\nexport function SearchAnimation(search, speed, count) { \n    const searchAnimation = setInterval(() => {\n        if(count === search.length - 1){\n            clearInterval(searchAnimation)\n        }\n        Animation(search[count], speed, 0, componentKind.search)\n        count += 1\n    }, speed)\n    \n}\n\nexport function PathAnimation(path, speed, count, myCallbackFunction = null) { \n    Animation(path, speed, count, componentKind.path, myCallbackFunction)\n}","import { componentKind } from './TableIndex'\n\n\nexport function WhichComponent(id, touch){\n\n    const element = document.getElementById(id).className\n\n    switch (element) {\n        case componentKind.start:\n            return {kind: componentKind.start, touch: touch.get.start, type: 0}\n        case componentKind.end:\n            return {kind: componentKind.end, touch: touch.get.end, type: 0}\n        case componentKind.bomb:\n            return {kind: componentKind.bomb, touch: touch.get.bomb, type: 0}\n        case componentKind.wall:\n            return {kind: componentKind.wall, rKind: componentKind.background, type: 1}\n        default:\n            return {kind: componentKind.background, rKind: componentKind.wall, type: 1}\n    }\n\n}","import { useContext } from 'react'\nimport { tableVar, touchContext, componentKind } from './TableIndex'\nimport { SearchAnimation, PathAnimation } from './Animation'\nimport { sysStatusContext, bombContext } from '../../Core'\nimport { setTable } from './SetTable'\nimport { WhichComponent } from './WhichComp'\n\n\nfunction ButtonEvent() {\n    const touch = useContext(touchContext)\n    const sysStatus = useContext(sysStatusContext)\n    const bomb = useContext(bombContext)\n\n    const Start = (search, path, speed) => {\n        sysStatus.set(\"RUNNING\")\n        console.log(\"Start\")\n        SearchAnimation(search, speed, 0)\n        setTimeout(() => PathAnimation(path, speed, 0, () => sysStatus.set(\"IDLE\")), speed * (search.length + 1))\n    }\n\n    const Addbomb = () => {\n        console.log(\"AddBomb\")\n        const index = Math.floor(tableVar.rowSize / 2) * tableVar.colSize + Math.floor(tableVar.colSize / 2)\n\n        if (WhichComponent(index.toString(), touch).type === 0) {\n            return\n        }\n\n        bomb.set(\"True\")\n        setTable(index.toString(), componentKind.bomb)\n    }\n\n    const RemoveBomb = () => {\n        console.log(\"RemoveBomb\")\n        for (var i = 0; i < tableVar.rowSize * tableVar.colSize; i++) {\n            if (document.getElementById(i.toString()).className === componentKind.bomb) {\n                setTable(i, componentKind.background)\n                break\n            }\n        }\n        bomb.set(\"False\")\n    }\n\n    const ClearWalls = () => {\n        console.log(\"ClearWall\")\n        for (var i = 0; i < tableVar.rowSize * tableVar.colSize; i++) {\n            if (document.getElementById(i.toString()).className === componentKind.wall) {\n                setTable(i, componentKind.background)\n            }\n        }\n        touch.set(\"\")\n    }\n\n    const ClearPath = () => {\n        console.log(\"ClearPath\")\n        for (var i = 0; i < tableVar.rowSize * tableVar.colSize; i++) {\n            if (document.getElementById(i.toString()).className === componentKind.search || document.getElementById(i.toString()).className === componentKind.path) {\n                setTable(i, componentKind.background)\n            }\n        }\n    }\n\n    const ClearBoard = () => {\n        console.log(\"ClearBoard\")\n        for (var i = 0; i < tableVar.rowSize * tableVar.colSize; i++) {\n            setTable(i, componentKind.background)\n        }\n        setTable(Math.floor(tableVar.rowSize / 2) * tableVar.colSize + Math.floor(tableVar.colSize / 4), componentKind.start)\n        setTable(Math.floor(tableVar.rowSize / 2 + 1) * tableVar.colSize - Math.floor(tableVar.colSize / 4), componentKind.end)\n        touch.set(\"\")\n        bomb.set(\"False\")\n    }\n\n    return { Start, Addbomb, RemoveBomb, ClearWalls, ClearPath, ClearBoard }\n}\n\nexport default ButtonEvent\n\n\n\n","class Queue {\n    constructor() {\n        this.queue = [];\n    }\n\n    append(val) {\n        this.queue.push(val);\n    }\n\n    popleft() {\n        if (this.isEmpty()) return -1;\n        return this.queue.shift();\n    }\n\n    isEmpty() {\n        return this.queue.length === 0;\n    }\n\n    getLength() {\n        return this.queue.length;\n    }\n}\n\nexport default Queue;","class Distance {\n    constructor() {\n        this.dict = {};\n        this.max_d = 0;\n    }\n\n    // pos=[x, y], d=距離\n    set(pos, d) {\n        this.dict[pos] = d;\n        this.max_d = Math.max(this.max_d, d);\n    }\n\n    // 取得距離\n    get(pos) {\n        if (pos in this.dict) {\n            return this.dict[pos];\n        } else {\n            return -1;\n        }\n    }\n\n    // 從end開始找尋附近四周圍，第一個 \"有被找過的\" 且 \"距離最小的\"的點，並回傳一個array\n    getShortestPath(endPos) {\n        var shortest = [endPos];\n        var x = endPos[0];\n        var y = endPos[1];\n        var visited = new Set();\n\n        visited.add(endPos.toString());\n        while (this.max_d > 0) {\n            var curD = Infinity;\n            var curX = x;\n            var curY = y;\n\n            // up\n            if ([x - 1, y] in this.dict && !(visited.has([x - 1, y].toString()))) {\n                if (this.dict[[x - 1, y]] < curD) {\n                    curX = x - 1;\n                    curY = y;\n                    curD = this.dict[[x - 1, y]];\n                }\n                visited.add([x - 1, y].toString());\n            }\n\n            // right\n            if ([x, y + 1] in this.dict && !(visited.has([x, y + 1].toString()))) {\n                if (this.dict[[x, y + 1]] < curD) {\n                    curX = x;\n                    curY = y + 1;\n                    curD = this.dict[[x, y + 1]];\n                }\n                visited.add([x, y + 1].toString());\n            }\n\n            // down\n            if ([x + 1, y] in this.dict && !(visited.has([x + 1, y].toString()))) {\n                if (this.dict[[x + 1, y]] < curD) {\n                    curX = x + 1;\n                    curY = y;\n                    curD = this.dict[[x + 1, y]];\n                }\n                visited.add([x + 1, y].toString());\n            }\n\n            // up\n            if ([x, y - 1] in this.dict && !(visited.has([x, y - 1].toString()))) {\n                if (this.dict[[x, y - 1]] < curD) {\n                    curX = x;\n                    curY = y - 1;\n                    curD = this.dict[[x, y - 1]];\n                }\n                visited.add([x, y - 1].toString());\n            }\n            x = curX;\n            y = curY;\n            shortest.unshift([x, y]);\n            this.max_d = curD;\n        }\n        if (shortest.length === 1) return []; // 如果沒有找到路徑(只有終點自己)，則不用跑最短路徑\n        return shortest;\n    }\n}\n\nexport default Distance;","import { position } from '../Core';\nimport Queue from '../Core/Queue';\nimport Distance from '../Core/Distance';\n\nfunction BFS(start, speed) {\n    var searchPath = [];\n    const visited = new Set();\n    const queue = new Queue();\n    var distance = new Distance();\n\n    distance.set(position.start, 0); // 加入自己\n    queue.append([position.start, 0]); // [pos, 距離]\n    visited.add(position.start.toString()); // 防止重複找尋\n    while (queue.getLength() > 0) {\n        var node = queue.popleft();\n        var x = node[0][0];\n        var y = node[0][1];\n        var nextD = node[1] + 1;\n\n        if (nextD > searchPath.length) searchPath.push([]);\n\n        if ([x, y].toString() === position.end.toString()) break;\n\n        // left\n        if (y - 1 >= 0 && !([x, y - 1] in position.wall) && !(visited.has([x, y - 1].toString()))) {\n            queue.append([[x, y - 1], nextD]);\n            searchPath[nextD - 1].push([x, y - 1]);\n            distance.set([x, y - 1], nextD);\n            visited.add([x, y - 1].toString());\n        }\n\n        // up\n        if (x - 1 >= 0 && !([x - 1, y] in position.wall) && !(visited.has([x - 1, y].toString()))) {\n            queue.append([[x - 1, y], nextD]);\n            searchPath[nextD - 1].push([x - 1, y]);\n            distance.set([x - 1, y], nextD);\n            visited.add([x - 1, y].toString());\n        }\n\n        // right\n        // 這裡的position.rowSize怪怪的\n        if (y + 1 < position.colSize && !([x, y + 1] in position.wall) && !(visited.has([x, y + 1].toString()))) {\n            queue.append([[x, y + 1], nextD]);\n            searchPath[nextD - 1].push([x, y + 1]);\n            distance.set([x, y + 1], nextD);\n            visited.add([x, y + 1].toString());\n        }\n\n        // down\n        // 這裡的position.colSize怪怪的\n        if (x + 1 < position.rowSize && !([x + 1, y] in position.wall) && !(visited.has([x + 1, y].toString()))) {\n            queue.append([[x + 1, y], nextD]);\n            searchPath[nextD - 1].push([x + 1, y]);\n            distance.set([x + 1, y], nextD);\n            visited.add([x + 1, y].toString());\n        }\n\n    }\n\n    // 去除多找的一圈\n    while (distance.get(position.end) !== -1 && searchPath.length > distance.get(position.end)) {\n        searchPath.pop();\n    }\n\n    // 取得最短路徑\n    var shortest = distance.getShortestPath(position.end);\n\n    // 執行 start 動畫\n    start(searchPath, shortest, speed);\n}\nexport default BFS;","import React, { useState, useEffect, useContext } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { algorithmContext, sysStatusContext, speedContext } from '../../Core';\r\nimport ButtonEvent from '../TableHelper/ButtonEvent';\r\nimport BFS from '../../Backend/Bfs';\r\n\r\nconst NavButton = () => {\r\n\r\n    const [buttonName, setButtonName] = useState(\"Visualize !\");\r\n    const [myVariant, setMyVariant] = useState(\"\");\r\n    const algoContext = useContext(algorithmContext);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const speed = useContext(speedContext);\r\n    const buttonEvent = ButtonEvent();\r\n\r\n    useEffect(() => {\r\n        setMyVariant('success');\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        var algoName = \"\";\r\n        switch (algoContext.get) {\r\n            case \"Algorithm_Dijkstra\":\r\n                algoName = \"Dijkstra's\";\r\n                break;\r\n            case 'Algorithm_APlus':\r\n                algoName = \"A*\";\r\n                break;\r\n            case \"Algorithm_Greedy_Best_First\":\r\n                algoName = \"Greedy\";\r\n                break;\r\n            case \"Algorithm_Swarm\":\r\n                algoName = \"Swarm\";\r\n                break;\r\n            case \"Algorithm_Convergent_Swarm\":\r\n                algoName = \"Convergent Swarm\";\r\n                break;\r\n            case \"Algorithm_Bidrectional_Swarm\":\r\n                algoName = \"Bidrectional Swarm\";\r\n                break;\r\n            case \"Algorithm_Breadth_First\":\r\n                algoName = \"BFS\";\r\n                break;\r\n            case \"Algorithm_Depth_First\":\r\n                algoName = \"DFS\";\r\n                break;\r\n            default:\r\n                algoName = \"\";\r\n                break;\r\n        }\r\n        setButtonName(`Visualize ${algoName}!`);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [algoContext.get])\r\n\r\n    useEffect(() => {\r\n        if (sysStatus.get === 'RUNNING') {\r\n            setMyVariant('danger');\r\n        } else {\r\n            setMyVariant('success');\r\n        }\r\n    }, [sysStatus.get])\r\n\r\n\r\n    const handler = () => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        if (algoContext.get === \"\") {\r\n            setButtonName(\"Pick an Algorithm\");\r\n        } else {\r\n            buttonEvent.ClearPath();\r\n            switch (algoContext.get) {\r\n                case \"Algorithm_Dijkstra\":\r\n                    break;\r\n                case 'Algorithm_APlus':\r\n                    break;\r\n                case \"Algorithm_Greedy_Best_First\":\r\n                    break;\r\n                case \"Algorithm_Swarm\":\r\n                    break;\r\n                case \"Algorithm_Convergent_Swarm\":\r\n                    break;\r\n                case \"Algorithm_Bidrectional_Swarm\":\r\n                    break;\r\n                case \"Algorithm_Breadth_First\":\r\n                    BFS(buttonEvent.Start, speed.get[1]);\r\n                    break;\r\n                case \"Algorithm_Depth_First\":\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item xs={1}>\r\n            <Button id=\"navButton\" variant={myVariant} size=\"lg\" onClick={handler}>{buttonName}</Button>\r\n        </Nav.Item>\r\n    )\r\n};\r\n\r\nexport default NavButton\r\n","import React, { useState, useContext } from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport { sysStatusContext } from '../../Core';\nimport Colored from '../../HOC/Colored';\n\nfunction NavClearBoard({ names, handlers }) {\n    const [whichHandler, setWhichHandler] = useState(0);\n    const sysStatus = useContext(sysStatusContext);\n    const [className, toggleHandler] = Colored();\n\n    const localHandler = () => {\n        if (sysStatus.get !== \"IDLE\") {\n            return;\n        }\n\n        setWhichHandler(preWhichHandler => (preWhichHandler + 1) % handlers.length);\n        handlers[whichHandler]();\n    }\n\n    return (\n        <Nav.Item xs={1}>\n            <Nav.Link onClick={localHandler} className={className} onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}>{names[whichHandler]}</Nav.Link>\n        </Nav.Item>\n    )\n}\n\nexport default NavClearBoard\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport { sysStatusContext } from '../../Core';\r\nimport { speedContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\n\r\nfunction DropdownSpeed() {\r\n    const [title, setTitle] = useState('Average');\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const speed = useContext(speedContext);\r\n    const [className, toggleHandler] = Colored();\r\n\r\n    useEffect(() => {\r\n        setTitle(speed.get[0]);\r\n    }, [speed.get])\r\n\r\n\r\n    const DropdownSpeedHandler = (eventKey) => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Fast\":\r\n                speed.set(\"Fast\");\r\n                break;\r\n            case \"Average\":\r\n                speed.set(\"Average\");\r\n                break;\r\n            case \"Slow\":\r\n                speed.set(\"Slow\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <NavDropdown xs={1} title={<span className={className}>Speed: {title}</span>} id=\"DropdownSpeed\" onSelect={DropdownSpeedHandler}\r\n            onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}\r\n        >\r\n            <NavDropdown.Item eventKey=\"Fast\">Fast</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Average\">Average</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Slow\">Slow</NavDropdown.Item>\r\n        </NavDropdown>\r\n    )\r\n}\r\n\r\nexport default DropdownSpeed;","import React from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Logo from './HeaderHelper/Logo';\r\nimport DropdownAlgorithm from './HeaderHelper/DropdownAlgorithm';\r\nimport DropdownMaze from './HeaderHelper/DropdownMaze';\r\nimport NavLink from './HeaderHelper/NavLink';\r\nimport NavAddBomb from './HeaderHelper/NavAddBomb';\r\nimport NavButton from './HeaderHelper/NavButton';\r\nimport NavClearBoard from './HeaderHelper/NavClearBoard';\r\nimport DropdownSpeed from './HeaderHelper/DropdownSpeed';\r\nimport ButtonEvent from './TableHelper/ButtonEvent';\r\n\r\nfunction Header() {\r\n    const buttonEvent = ButtonEvent()\r\n\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"xl\" bg='dark' variant='dark'>\r\n            <Logo />\r\n            <Navbar.Toggle aria-controls=\"Collapse\" />\r\n            <Navbar.Collapse id=\"Collapse\" className='nvbar-collapse'>\r\n                <Nav className=\"nav-bar\">\r\n                    <DropdownAlgorithm />\r\n                    <DropdownMaze />\r\n                    <NavAddBomb names={[\"Add Bomb\", \"Remove Bomb\"]} handlers={[buttonEvent.Addbomb, buttonEvent.RemoveBomb]} />\r\n                    <NavButton />\r\n                    <NavClearBoard names={[\"Clear Board\"]} handlers={[buttonEvent.ClearBoard]} />\r\n                    <NavLink names={[\"Clear Walls & Weights\"]} handlers={[buttonEvent.ClearWalls]} />\r\n                    <NavLink names={[\"Clear Path\"]} handlers={[buttonEvent.ClearPath]} />\r\n                    <DropdownSpeed />\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Header\r\n","import { useContext } from 'react'\nimport { sysStatusContext } from '../../Core/index'\nimport { tableVar, touchContext, moveContext, componentKind } from './TableIndex'\nimport { setTable } from './SetTable'\nimport { WhichComponent } from './WhichComp'\n\nfunction MouseEvent() {\n    const [touch, move, sysStatus] = [useContext(touchContext), useContext(moveContext), useContext(sysStatusContext)]\n\n    const MouseDownHandler = (e) => {\n        // console.log(\"MouseDownHandler \" + e.target.id)\n\n        if (sysStatus.get !== \"IDLE\") {\n            return\n        }\n\n        e.preventDefault()\n\n        tableVar.id = e.target.id\n        const whichComponent = WhichComponent(tableVar.id, touch)\n\n        if(whichComponent.type){\n            setTable(tableVar.id, whichComponent.rKind)\n            move.set(componentKind.wall)\n\n        }else{\n            move.set(whichComponent.kind)\n        }\n    }\n\n    const MouseUpHandler = (e) => {\n        // console.log(\"MouseUpHandler \" + e.target.id)\n\n        if (sysStatus.get !== \"IDLE\") {\n            return\n        }\n\n        move.set(\"\")\n    }\n\n    const OnMouseEnterHanlder = (e) => {\n        // console.log(\"OnMouseEnterHanlder \" + e.target.id)\n\n        if (sysStatus.get !== \"IDLE\") {\n            return\n        }\n\n        tableVar.newId = e.target.id\n        const whichOldComponent = WhichComponent(tableVar.id, touch)\n        const whichNewComponent = WhichComponent(tableVar.newId, touch)\n\n        if(move.get === componentKind.wall && whichNewComponent.type){\n            setTable(tableVar.newId, whichNewComponent.rKind)\n            tableVar.id = tableVar.newId\n\n        }else if(move.get !== componentKind.wall && move.get !== \"\" && whichNewComponent.type){\n            setTable(tableVar.id, whichOldComponent.touch)\n            touch.set({componentKind: whichOldComponent.kind, under: whichNewComponent.kind})\n            setTable(tableVar.newId, whichOldComponent.kind)\n            tableVar.id = tableVar.newId\n        }\n    }\n\n    return {MouseDownHandler, MouseUpHandler, OnMouseEnterHanlder}\n\n}\n\nexport default MouseEvent","import { useEffect } from 'react'\nimport MouseEvent from './MouseEvent'\nimport { tableVar, componentKind } from './TableIndex'\n\n\nfunction TableUI() {\n    const [rowSize, colSize, size] = [tableVar.rowSize, tableVar.colSize, tableVar.size]\n\n    const row = Array.from(Array(rowSize).keys())\n    const col = Array.from(Array(colSize).keys())\n\n    const mouesEvent = MouseEvent()\n    const [MouseDownHandler, MouseUpHandler, OnMouseEnterHanlder] = [mouesEvent.MouseDownHandler, mouesEvent.MouseUpHandler, mouesEvent.OnMouseEnterHanlder]\n\n    const createTable = row.map((rowIndex, index) => {\n        return ( \n            <tr key = {index} height={size}>\n                {col.map((colIndex, index) => {\n                    // console.log(rowIndex + \" \" + colIndex)\n                    return (\n                        <td id = {rowIndex * colSize + colIndex} key = {index} className = {componentKind.background} width={size} onMouseUp = {MouseUpHandler} onMouseDown = {MouseDownHandler} onMouseEnter = {OnMouseEnterHanlder}>\n                            {}\n                        </td>)}\n                    )}\n            </tr>)}\n        )\n\n    useEffect(() => {\n        document.getElementById((Math.floor(tableVar.rowSize / 2) * tableVar.colSize + Math.floor(tableVar.colSize / 4)).toString()).className = \"start\"\n        document.getElementById((Math.floor(tableVar.rowSize / 2 + 1) * tableVar.colSize - Math.floor(tableVar.colSize / 4)).toString()).className = \"end\"\n    }, [])\n    \n    \n      \n    return (\n        <div className = \"tablePadding\">\n            <table id = \"board\" align=\"center\" border=\"1\" cellSpacing=\"0\">\n                <tbody>\n                    {createTable}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default TableUI\n","import TableUI from './TableHelper/TableUI';\nimport { useContext, useEffect } from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { sysStatusContext } from '../Core';\n\nfunction Table() {  \n\tconst sysStatus = useContext(sysStatusContext);\n\n\tuseEffect(()=>{\n\t\tsetTimeout(()=>{sysStatus.set(\"IDLE\");}, 1000);\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [])\n\n\tif (sysStatus.get === \"LOADING\"){\n\t\treturn (<Spinner animation=\"border\" variant=\"warning\" />);\n\t}\n\telse{\n\t\treturn (\n\t        <div id = \"UI\">\n\t            <TableUI/>\n\t        </div>\n\t    )\n\t}\n}\n\nexport default Table\n","\n\nfunction Info(){\n\treturn (\n\t\t<div id=\"mainInfo\">\n\t\t\t<ul>\n\t\t\t\t<li> <div className=\"Info-Start-Node\"></div>Start Node </li>\n\t\t\t\t<li> <div className=\"Info-End-Node\"></div>Target Node </li>\n\t\t\t\t<li> <div className=\"Info-Bomb-Node\"></div>Bomb Node </li>\n\t\t\t\t<li> <div className=\"Info-Unvisited-Node\"></div>Unvisited Node </li>\n\t\t\t\t<li> <div className=\"Info-Visited-Node\"></div>Visited Node </li>\n\t\t\t\t<li> <div className=\"Info-ShortestPathNode-Node\"></div>Shortest-Path Node </li>\n\t\t\t\t<li> <div className=\"Info-WallNode-Node\"></div>Wall Node </li>\n\t\t\t</ul>\n\t\t\t\n\t\t</div>\n\t)\n}\n\nexport default Info;","import {useState, useContext, useEffect} from 'react';\nimport { algorithmContext } from '../../Core';\n\nfunction AlgorithmDescriptor(){\n\tconst [algorithmName, setAlgorithmName] = useState('Pick an algorithm and visualize it!');\n    const [discription1, setDiscription1] = useState('');\n    const [discription2, setDiscription2] = useState('');\n\tconst algoContext = useContext(algorithmContext);\n\n\tuseEffect(() => {\n        var algoName = \"\";\n        var d1 = \"\";\n        var d2 = \"\";\n        switch (algoContext.get) {\n            case \"Algorithm_Dijkstra\":\n                algoName = \"Dijkstra's Algorithm\";\n                d1 = \"weighted\";\n                d2 = \"guarantees\";\n                break;\n            case 'Algorithm_APlus':\n                algoName = \"A* Search\";\n                d1 = \"weighted\";\n                d2 = \"guarantees\";\n                break;\n            case \"Algorithm_Greedy_Best_First\":\n                algoName = \"Greedy Best-first Search\";\n                d1 = \"weighted\";\n                d2 = \"does not guarantee\";\n                break;\n            case \"Algorithm_Swarm\":\n                algoName = \"Swarm Algorithm\";\n                d1 = \"weighted\";\n                d2 = \"does not guarantee\";\n                break;\n            case \"Algorithm_Convergent_Swarm\":\n                algoName = \"Convergent Swarm Algorithm\";\n                d1 = \"weighted\";\n                d2 = \"does not guarantee\";\n                break;\n            case \"Algorithm_Bidrectional_Swarm\":\n                algoName = \"Bidrectional Swarm Algorithm\";\n                d1 = \"weighted\";\n                d2 = \"does not guarantee\";\n                break;\n            case \"Algorithm_Breadth_First\":\n                algoName = \"Breath-first Search\";\n                d1 = \"unweighted\";\n                d2 = \"guarantee\";\n                break;\n            case \"Algorithm_Depth_First\":\n                algoName = \"Depth-first Search\";\n                d1 = \"unweighted\";\n                d2 = \"does not guarantee\";\n                break;\n            default:\n                algoName = \"Pick an algorithm and visualize it!\";\n                d1 = \"\";\n                d2 = \"\";\n                break;\n        }\n\n        setAlgorithmName(algoName);\n        setDiscription1(d1);\n        setDiscription2(d2);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [algoContext.get])\n\n    if (algoContext.get === \"\"){\n        return (\n            <div id=\"algorithmDescriptor\">\n                {algorithmName}\n            </div>\n        )\n    } else{\n        return (\n            <div id=\"algorithmDescriptor\">\n                {algorithmName} is <i><b>{discription1}</b></i> and <i><b>{discription2}</b></i> the shortest path!\n            </div>\n        )\n    }\n\t\n}\n\nexport default AlgorithmDescriptor;","import './App.scss';\nimport { useReducer } from 'react';\nimport Header from './Frontend/Header';\nimport { algorithmReducer, initialAlgorithm, algorithmContext } from './Core';\nimport { sysStatusReducer, initialsysStatus, sysStatusContext } from './Core';\nimport { bombContext, bombInitial, bombReducer } from './Core';\nimport { speedContext, speedInitial, speedReducer } from './Core';\nimport Table from './Frontend/Table';\nimport { touchReducer, touchInitial, touchContext } from './Frontend/TableHelper/TableIndex';\nimport { moveReducer, moveInitial, moveContext } from './Frontend/TableHelper/TableIndex';\nimport Info from './Frontend/HeaderHelper/Info';\nimport AlgorithmDescriptor from './Frontend/HeaderHelper/AlgorithmDescriptor';\n\nfunction App() {\n  const [curAlgorithm, setCurAlgorithm] = useReducer(algorithmReducer, initialAlgorithm);\n  const [curSysStatus, setCurSysStatus] = useReducer(sysStatusReducer, initialsysStatus);\n  const [curBomb, setCurBomb] = useReducer(bombReducer, bombInitial);\n  const [curSpeed, setCurSpeed] = useReducer(speedReducer, speedInitial);\n  const [touch, setTouch] = useReducer(touchReducer, touchInitial)\n  const [move, setMove] = useReducer(moveReducer, moveInitial)\n\n  return (\n    <div className=\"App\">\n      <moveContext.Provider value={{ get: move, set: setMove }}>\n        <touchContext.Provider value={{ get: touch, set: setTouch }}>\n          <speedContext.Provider value={{ get: curSpeed, set: setCurSpeed }}>\n            <bombContext.Provider value={{ get: curBomb, set: setCurBomb }}>\n              <sysStatusContext.Provider value={{ get: curSysStatus, set: setCurSysStatus }}>\n                <algorithmContext.Provider value={{ get: curAlgorithm, set: setCurAlgorithm }}>\n                  <Header />\n                  <Info />\n                  <AlgorithmDescriptor />\n                  <Table />\n                </algorithmContext.Provider>\n              </sysStatusContext.Provider>\n            </bombContext.Provider>\n          </speedContext.Provider>\n        </touchContext.Provider>\n      </moveContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}