{"version":3,"sources":["Core/index.js","frontend/HeaderHelper/Logo.js","frontend/HeaderHelper/DropdownAlgorithm.js","frontend/HeaderHelper/DropdownMaze.js","frontend/HeaderHelper/NavLink.js","frontend/HeaderHelper/NavAddBomb.js","frontend/HeaderHelper/NavButton.js","frontend/HeaderHelper/DropdownSpeed.js","frontend/TableHelper/TableIndex.js","frontend/TableHelper/MouseEvent.js","frontend/TableHelper/TableUI.js","frontend/TableHelper/ButtonEvent.js","frontend/Header.js","frontend/Table.js","App.js","reportWebVitals.js","index.js"],"names":["sysStatusContext","React","createContext","initialsysStatus","sysStatusReducer","state","action","bombContext","bombReducer","algorithmContext","algorithmReducer","logo","Navbar","Brand","href","className","src","process","width","height","variant","alt","DropdownAlgorithm","algoContext","useContext","sysStatus","Nav","Item","NavDropdown","xs","title","id","onSelect","eventKey","get","set","DropdownAlgorithmHandler","DropdownMaze","alert","NavLink","names","handlers","useState","whichHandler","setWhichHandler","Link","onClick","preWhichHandler","length","NavAddBomb","bomb","useEffect","console","log","NavButton","buttonName","setButtonName","myVariant","setMyVariant","algoName","Button","size","setTimeout","DropdownSpeed","setTitle","tableContext","rowSize","colSize","picture","wall","start","end","background","clickButton","buttonKind","AddBomb","RemoveBomb","ClearWalls","ClearBoard","MouseEvent","tableVarContext","setWall","setBomb","bombComponent","startComponent","endComponent","touch","setTouch","move","setMove","initialTable","Array","from","keys","index","Math","floor","tableColor","setTableColor","temp","slice","i","MouseDownHandler","e","preventDefault","target","parseInt","MouseUpHandler","OnMouseEnterHanlder","OnMouseOutHanlder","TableUI","row","col","mouesEvent","createTable","map","rowIndex","colIndex","bgcolor","onMouseUp","onMouseDown","onMouseEnter","onMouseOut","align","border","cellSpacing","ButtonEvent","Addbomb","ReactDOM","render","document","getElementById","Header","buttonEvent","collapseOnSelect","expand","bg","Logo","Toggle","aria-controls","Collapse","Table","App","useReducer","curAlgorithm","setCurAlgorithm","curSysStatus","setCurSysStatus","curBomb","setCurBomb","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.dd30b876.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n// 目前系統狀態\r\nexport const sysStatusContext = React.createContext();\r\nexport const initialsysStatus = \"IDLE\";\r\nexport const sysStatusReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'IDLE':\r\n            return 'IDLE';\r\n        case 'RUNNING':\r\n            return 'RUNNING';\r\n        default:\r\n            return initialsysStatus;\r\n    }\r\n}\r\n\r\n// Bomb status\r\nexport const bombContext = React.createContext();\r\nexport const bombInitial = false;\r\nexport const bombReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'True':\r\n            return true;\r\n        case 'False':\r\n            return false;\r\n        default:\r\n            return bombInitial\r\n    }\r\n}\r\n\r\n// Speed\r\nexport const speedContext = React.createContext({ status: \"average\" });\r\n\r\n// 目前系統是哪種演算法\r\nexport const algorithmContext = React.createContext();\r\nexport const initialAlgorithm = \"\";\r\nexport const algorithmReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'Algorithm_Dijkstra':\r\n            return 'Algorithm_Dijkstra';\r\n        case 'Algorithm_APlus':\r\n            return 'Algorithm_APlus';\r\n        case \"Algorithm_Greedy_Best_First\":\r\n            return 'Algorithm_Greedy_Best_First';\r\n        case \"Algorithm_Swarm\":\r\n            return 'Algorithm_Swarm';\r\n        case \"Algorithm_Convergent_Swarm\":\r\n            return 'Algorithm_Convergent_Swarm';\r\n        case \"Algorithm_Bidrectional_Swarm\":\r\n            return 'Algorithm_Bidrectional_Swarm';\r\n        case \"Algorithm_Breadth_First\":\r\n            return 'Algorithm_Breadth_First';\r\n        case \"Algorithm_Depth_First\":\r\n            return 'Algorithm_Depth_First';\r\n        default:\r\n            return initialAlgorithm;\r\n    }\r\n}","import React from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\n\r\nfunction logo() {\r\n    return (\r\n        <Navbar.Brand href=\"/PathingFinding/\" className='Navbar-logo'>\r\n            <img\r\n                src={process.env.PUBLIC_URL + '/logo.png'} // 取得public資料夾路徑\r\n                width=\"50\"\r\n                height=\"50\"\r\n                className='d-inline-block'\r\n                variant='test'\r\n                alt='Logo'\r\n            /> {' '}\r\n                    Path-Finding\r\n        </Navbar.Brand>\r\n    )\r\n}\r\n\r\nexport default logo\r\n","import React, { useContext } from 'react';\r\nimport { NavDropdown, Nav } from 'react-bootstrap';\r\nimport { algorithmContext, sysStatusContext } from '../../Core';\r\n\r\nfunction DropdownAlgorithm({ className }) {\r\n    const algoContext = useContext(algorithmContext);\r\n    const sysStatus = useContext(sysStatusContext);\r\n\r\n    const DropdownAlgorithmHandler = (eventKey) => {\r\n\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Algorithm_Dijkstra\":\r\n                algoContext.set('Algorithm_Dijkstra');\r\n                break;\r\n            case \"Algorithm_APlus\":\r\n                algoContext.set('Algorithm_APlus');\r\n                break;\r\n            case \"Algorithm_Greedy_Best_First\":\r\n                algoContext.set('Algorithm_Greedy_Best_First');\r\n                break;\r\n            case \"Algorithm_Swarm\":\r\n                algoContext.set('Algorithm_Swarm');\r\n                break;\r\n            case \"Algorithm_Convergent_Swarm\":\r\n                algoContext.set('Algorithm_Convergent_Swarm');\r\n                break;\r\n            case \"Algorithm_Bidrectional_Swarm\":\r\n                algoContext.set('Algorithm_Bidrectional_Swarm');\r\n                break;\r\n            case \"Algorithm_Breadth_First\":\r\n                algoContext.set('Algorithm_Breadth_First');\r\n                break;\r\n            case \"Algorithm_Depth_First\":\r\n                algoContext.set('Algorithm_Depth_First');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item>\r\n            <NavDropdown xs={1} title=\"Algorithms\" id=\"DropdownAlgorithm\" onSelect={(eventKey) => DropdownAlgorithmHandler(eventKey)} className={className}>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Dijkstra\">Dijkstra's Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_APlus\">A+ Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Greedy_Best_First\">Greedy Best-First Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Swarm\">Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Convergent_Swarm\">Convergent Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Bidrectional_Swarm\">Bidirectional Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Breadth_First\">Breadth-First Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Depth_First\">Depth-First Search</NavDropdown.Item>\r\n            </NavDropdown>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default DropdownAlgorithm;","import React, { useContext } from 'react'\r\nimport { NavDropdown, Nav } from 'react-bootstrap';\r\nimport { sysStatusContext } from '../../Core';\r\n\r\nfunction DropdownMaze({ className }) {\r\n    const sysStatus = useContext(sysStatusContext);\r\n\r\n    const DropdownMazeHandler = (eventKey) => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Maze_Recursive_Division\":\r\n                alert(\"Maze_Recursive_Division\");\r\n                break;\r\n            case \"Maze_Recursive_Division_vertical\":\r\n                alert(\"Maze_Recursive_Division_vertical\");\r\n                break;\r\n            case \"Maze_Recursive_Division_horizontal\":\r\n                alert(\"Maze_Recursive_Division_horizontal\");\r\n                break;\r\n            case \"Maze_Basic_Random\":\r\n                alert(\"Maze_Basic_Random\");\r\n                break;\r\n            case \"Maze_Basic_Weight_Maze\":\r\n                alert(\"Maze_Basic_Weight_Maze\");\r\n                break;\r\n            case \"Maze_Simple_stair_pattern\":\r\n                alert(\"Maze_Simple_stair_pattern\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item>\r\n            <NavDropdown xs={1} title=\"Mazes & Patterns\" id=\"DropdownMaze\" onSelect={DropdownMazeHandler} className={className}>\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division\">Recursive Division</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division_vertical\">Recursive Division(vertical skew)</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division_horizontal\">Recursive Division(horizontal skew)</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Basic_Random\">Basic Random Maze</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Basic_Weight_Maze\">Basic Weight Maze</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Simple_stair_pattern\">Simple Stair Pattern</NavDropdown.Item>\r\n            </NavDropdown>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default DropdownMaze;","import React, { useState, useContext } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { sysStatusContext } from '../../Core';\r\n\r\nfunction NavLink({ names, handlers, className }) {\r\n    const [whichHandler, setWhichHandler] = useState(0);\r\n    const sysStatus = useContext(sysStatusContext);\r\n\r\n    const localHandler = () => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        setWhichHandler(preWhichHandler => (preWhichHandler + 1) % handlers.length);\r\n        handlers[whichHandler]();\r\n    }\r\n\r\n    return (\r\n        <Nav.Item xs={1}>\r\n            <Nav.Link onClick={localHandler} className={className}>{names[whichHandler]}</Nav.Link>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default NavLink\r\n","/* Links inteface */\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport { bombContext, sysStatusContext } from '../../Core';\n\nfunction NavAddBomb({ names, handlers, className }) {\n    const [whichHandler, setWhichHandler] = useState(0);\n    const bomb = useContext(bombContext);\n    const sysStatus = useContext(sysStatusContext);\n\n    useEffect(() => {\n\n        if (bomb.get === true) {\n            setWhichHandler(1);\n        } else {\n            setWhichHandler(0);\n        }\n\n        handlers[whichHandler]();\n    }, [bomb])\n\n    const localHandler = () => {\n\n        if (sysStatus.get !== \"IDLE\") {\n            return;\n        }\n\n        console.log(bomb.get)\n\n        if (bomb.get === true) {\n            // setWhichHandler(0);\n            bomb.set(\"False\");\n            // bomb.status = false;\n        } else {\n            // setWhichHandler(1);\n            bomb.set(\"True\");\n            // bomb.status = true;\n        }\n        // handlers[whichHandler]();\n    }\n\n    return (\n        <Nav.Item xs={1}>\n            <Nav.Link onClick={localHandler} className={className}>{names[whichHandler]}</Nav.Link>\n        </Nav.Item>\n    )\n}\n\nexport default NavAddBomb\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { algorithmContext, sysStatusContext, bombContext } from '../../Core';\r\n\r\nconst NavButton = () => {\r\n\r\n    const [buttonName, setButtonName] = useState(\"Visualize !\");\r\n    const [myVariant, setMyVariant] = useState(\"\");\r\n    const algoContext = useContext(algorithmContext);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const bomb = useContext(bombContext);\r\n\r\n    useEffect(() => {\r\n        setMyVariant('success');\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        var algoName = \"\";\r\n        switch (algoContext.get) {\r\n            case \"Algorithm_Dijkstra\":\r\n                algoName = \"Dijkstra's\";\r\n                break;\r\n            case 'Algorithm_APlus':\r\n                algoName = \"A*\";\r\n                break;\r\n            case \"Algorithm_Greedy_Best_First\":\r\n                algoName = \"Greedy\";\r\n                break;\r\n            case \"Algorithm_Swarm\":\r\n                algoName = \"Swarm\";\r\n                break;\r\n            case \"Algorithm_Convergent_Swarm\":\r\n                algoName = \"Convergent Swarm\";\r\n                break;\r\n            case \"Algorithm_Bidrectional_Swarm\":\r\n                algoName = \"Bidrectional Swarm\";\r\n                break;\r\n            case \"Algorithm_Breadth_First\":\r\n                algoName = \"BFS\";\r\n                break;\r\n            case \"Algorithm_Depth_First\":\r\n                algoName = \"DFS\";\r\n                break;\r\n            default:\r\n                algoName = \"\";\r\n                break;\r\n        }\r\n\r\n        setButtonName(`Visualize ${algoName}!`);\r\n    }, [algoContext.get])\r\n\r\n    const resetButton = () => {\r\n        setMyVariant('success');\r\n        sysStatus.set(\"IDLE\");\r\n    }\r\n\r\n    const handler = () => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        bomb.set(bomb.get ? \"False\" : \"True\"); // For showing listening to Context\r\n        if (algoContext.get === \"\") {\r\n            setButtonName(\"Pick an Algorithm\");\r\n        } else {\r\n            sysStatus.set(\"RUNNING\");\r\n            setMyVariant('danger');\r\n            setTimeout(() => resetButton(), 10000);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item xs={1}>\r\n            <Button id=\"navButton\" variant={myVariant} size=\"lg\" onClick={handler}>{buttonName}</Button>\r\n        </Nav.Item>\r\n    )\r\n};\r\n\r\nexport default NavButton\r\n","import React, { useState, useContext } from 'react';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport { sysStatusContext } from '../../Core';\r\n\r\nfunction DropdownSpeed({ className }) {\r\n    const [title, setTitle] = useState('Average');\r\n    const sysStatus = useContext(sysStatusContext);\r\n\r\n    const DropdownSpeedHandler = (eventKey) => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Fast\":\r\n                setTitle(\"Fast\");\r\n                alert(\"Speed Fast!\");\r\n                break;\r\n            case \"Average\":\r\n                setTitle(\"Average\");\r\n                alert(\"Speed Average!\");\r\n                break;\r\n            case \"Slow\":\r\n                setTitle(\"Slow\");\r\n                alert(\"Speed Slow!\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <NavDropdown xs={1} title={`Speed: ${title}`} id=\"DropdownSpeed\" onSelect={DropdownSpeedHandler} className={className}>\r\n            <NavDropdown.Item eventKey=\"Fast\">Fast</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Average\">Average</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Slow\">Slow</NavDropdown.Item>\r\n        </NavDropdown>\r\n    )\r\n}\r\n\r\nexport default DropdownSpeed;","import { createContext } from 'react'\n\n\nexport const tableContext = createContext(\n    {rowSize: 21, \n     colSize: 50, \n     size: 30,  \n     picture: {wall: \"blue\", bomb: \"red\", start: \"green\", end: \"#F5F500\", background: \"white\"},\n     clickButton: \"\",\n     buttonKind: {AddBomb: \"AddBomb\", RemoveBomb: \"RemoveBomb\", ClearWalls: \"ClearWalls\", ClearBoard: \"ClearBoard\"}\n    }\n)\n\n  ","import { useState, useContext, useEffect } from 'react'\nimport { tableContext } from './TableIndex'\n\n\nfunction MouseEvent() {\n    const tableVarContext = useContext(tableContext)\n    const [rowSize, colSize] = [tableVarContext.rowSize, tableVarContext.colSize]\n    const picture = tableVarContext.picture\n\n    const [wall, setWall] = useState(false)\n    const [bomb, setBomb] = useState(false)\n    const [touch, setTouch] = useState({bombComponent: false, startComponent: false, endComponent: false})\n    const [move, setMove] = useState({bombComponent: false, startComponent: false, endComponent: false})\n\n    const initialTable = Array.from(Array(rowSize * colSize).keys(), index => {\n        if(index === Math.floor(rowSize / 2) * colSize + Math.floor(colSize / 4)){\n            return picture.start\n        }else if(index === Math.floor(rowSize / 2 + 1) * colSize - Math.floor(colSize / 4)){\n            return picture.end\n        }else{\n            return picture.background\n        }\n    })\n    const [tableColor, setTableColor] = useState(initialTable)\n    var temp = tableColor.slice()\n\n    useEffect(() => {\n        console.log(\"ButtonHanlder\")\n        if(bomb === false && tableVarContext.clickButton === tableVarContext.buttonKind.AddBomb){\n            console.log(\"AddBomb\")\n            setBomb(true)\n            temp[Math.floor(rowSize / 2) * colSize + Math.floor(colSize / 2)] = picture.bomb\n            setTableColor(temp)\n            tableVarContext.clickButton = \"\"\n        }else if(bomb && tableVarContext.clickButton === tableVarContext.buttonKind.RemoveBomb){\n            console.log(\"RemoveBomb\")\n            for(var i = 0; i < rowSize * colSize;i++){\n                if(temp[i] === picture.bomb){\n                    temp[i] = picture.background\n                }\n            }\n            setBomb(false)\n            setTableColor(temp)\n            tableVarContext.clickButton = \"\"\n        }else if(tableVarContext.clickButton === tableVarContext.buttonKind.ClearWalls){\n            console.log(\"ClearWall\")\n            for(var i = 0; i < rowSize * colSize;i++){\n                if(temp[i] === picture.wall){\n                    temp[i] = picture.background\n                }\n            }\n            setTableColor(temp)\n            setTouch(false)\n            tableVarContext.clickButton = \"\"\n        }else if(tableVarContext.clickButton === tableVarContext.buttonKind.ClearBoard){\n            console.log(\"ClearBoard\")\n            setTableColor(initialTable)\n            setBomb(false)\n            setTouch(false)\n            tableVarContext.clickButton = \"\"\n        }\n    }, [tableVarContext.clickButton])\n\n    const MouseUpHandler = (e) => {\n        console.log(\"MouseUpHandler \" + e.target.id)\n        if(wall){\n            setWall(false)\n        }else{\n            if(temp[parseInt(e.target.id)] === picture.bomb){\n                setMove({...move, bombComponent: false})\n            }else if(temp[parseInt(e.target.id)] === picture.start){\n                setMove({...move, startComponent: false})\n            }else{\n                setMove({...move, endComponent: false})\n            }\n        }\n    }\n\n    const MouseDownHandler = (e) => {\n        e.preventDefault()\n        console.log(\"ClickDownHandler \" + e.target.id)\n        if(temp[parseInt(e.target.id)] !== picture.bomb && temp[parseInt(e.target.id)] !== picture.start && temp[parseInt(e.target.id)] !== picture.end){\n            setWall(true)\n            if(temp[parseInt(e.target.id)] === picture.background){\n                temp[parseInt(e.target.id)] = picture.wall\n            }else{\n                temp[parseInt(e.target.id)] = picture.background\n            }\n            setTableColor(temp)\n        }else{\n            if(temp[parseInt(e.target.id)] === picture.bomb){\n                setMove({...move, bombComponent: true})\n            }else if(temp[parseInt(e.target.id)] === picture.start){\n                setMove({...move, startComponent: true})\n            }else{\n                setMove({...move, endComponent: true})\n            }\n        }\n    }\n\n    const OnMouseEnterHanlder = (e) => {\n        console.log(\"OnMouseEnterHanlder \" + e.target.id)\n        if(wall && temp[parseInt(e.target.id)] !== picture.bomb && temp[parseInt(e.target.id)] !== picture.start && temp[parseInt(e.target.id)] !== picture.end){\n            if(temp[parseInt(e.target.id)] === picture.background){\n                temp[parseInt(e.target.id)] = picture.wall\n            }else{\n                temp[parseInt(e.target.id)] = picture.background\n            }\n            setTableColor(temp)\n        }else{\n            if(move.bombComponent && temp[parseInt(e.target.id)] !== picture.start && temp[parseInt(e.target.id)] !== picture.end){\n                if(temp[parseInt(e.target.id)] === picture.wall){\n                    setTouch({...touch, bombComponent: true})\n                }else{\n                    setTouch({...touch, bombComponent: false})\n                }\n                temp[parseInt(e.target.id)] = picture.bomb\n                setTableColor(temp)\n            }else if(move.startComponent && temp[parseInt(e.target.id)] !== picture.bomb && temp[parseInt(e.target.id)] !== picture.end){\n                if(temp[parseInt(e.target.id)] === picture.wall){\n                    setTouch({...touch, startComponent: true})\n                }else{\n                    setTouch({...touch, startComponent: false})\n                }\n                temp[parseInt(e.target.id)] = picture.start\n                setTableColor(temp)\n            }else if(move.endComponent && temp[parseInt(e.target.id)] !== picture.bomb && temp[parseInt(e.target.id)] !== picture.start){\n                if(temp[parseInt(e.target.id)] === picture.wall){\n                    setTouch({...touch, endComponent: true})\n                }else{\n                    setTouch({...touch, endComponent: false})\n                }\n                temp[parseInt(e.target.id)] = picture.end\n                setTableColor(temp)\n            }\n        }\n    }\n\n    const OnMouseOutHanlder = (e) => {\n        console.log(\"OnMouseOutHanlder \" + e.target.id)\n        if(wall === false){\n            if(move.bombComponent && temp[parseInt(e.target.id)] !== picture.start && temp[parseInt(e.target.id)] !== picture.end){\n                if(touch.bombComponent){\n                    temp[parseInt(e.target.id)] = picture.wall\n                }else{\n                    temp[parseInt(e.target.id)] = picture.background\n                }\n                setTableColor(temp)\n            }else if(move.startComponent && temp[parseInt(e.target.id)] !== picture.bomb && temp[parseInt(e.target.id)] !== picture.end){\n                if(touch.startComponent){\n                    temp[parseInt(e.target.id)] = picture.wall\n                }else{\n                    temp[parseInt(e.target.id)] = picture.background\n                }\n                setTableColor(temp)\n            }else if(move.endComponent && temp[parseInt(e.target.id)] !== picture.bomb && temp[parseInt(e.target.id)] !== picture.start){\n                if(touch.endComponent){\n                    temp[parseInt(e.target.id)] = picture.wall\n                }else{\n                    temp[parseInt(e.target.id)] = picture.background\n                }\n                setTableColor(temp)\n            }\n        }\n    }\n\n    return {MouseDownHandler, MouseUpHandler, OnMouseEnterHanlder, OnMouseOutHanlder, tableColor}\n\n}\n\nexport default MouseEvent\n\n\n","import React, { useContext } from 'react'\nimport MouseEvent from './MouseEvent'\nimport { tableContext } from './TableIndex'\n\n\nfunction TableUI() {\n    const tableVarContext = useContext(tableContext)\n    const [rowSize, colSize, size] = [tableVarContext.rowSize, tableVarContext.colSize, tableVarContext.size]\n\n    const row = Array.from(Array(rowSize).keys())\n    const col = Array.from(Array(colSize).keys())\n\n    const mouesEvent = MouseEvent()\n    const [MouseDownHandler, MouseUpHandler, OnMouseEnterHanlder, OnMouseOutHanlder, tableColor] = [mouesEvent.MouseDownHandler, mouesEvent.MouseUpHandler, mouesEvent.OnMouseEnterHanlder, mouesEvent.OnMouseOutHanlder, mouesEvent.tableColor]\n\n    const createTable = row.map((rowIndex, index) => {\n        return ( \n            <tr key = {index} height={size}>\n                {col.map((colIndex, index) => {\n                    // console.log(rowIndex + \" \" + colIndex)\n                    return (\n                        <td id = {rowIndex * colSize + colIndex} key = {index} bgcolor = {tableColor[rowIndex * colSize + colIndex]} width={size} onMouseUp = {MouseUpHandler} onMouseDown = {MouseDownHandler} onMouseEnter = {OnMouseEnterHanlder} onMouseOut = {OnMouseOutHanlder}>\n                            {}\n                        </td>)}\n                    )}\n            </tr>)}\n        )\n      \n    return (\n        <div>\n            <table id = \"board\" align=\"center\" border=\"1\" cellSpacing=\"0\" >\n                <tbody>\n                    {createTable}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default TableUI\n","import { useContext } from 'react'\nimport TableUI from './TableUI';\nimport { tableContext } from './TableIndex'\nimport ReactDOM from 'react-dom'\n\n\nfunction ButtonEvent() {\n    const tableVarContext = useContext(tableContext)\n\n    const Addbomb = () => {\n        tableVarContext.clickButton = tableVarContext.buttonKind.AddBomb\n        ReactDOM.render(\n            <TableUI />,\n            document.getElementById('UI')\n        )\n    }\n\n    const RemoveBomb = () => {\n        tableVarContext.clickButton = tableVarContext.buttonKind.RemoveBomb\n        ReactDOM.render(\n            <TableUI />,\n            document.getElementById('UI')\n        )\n    }\n    \n    const ClearWalls = () => {\n        tableVarContext.clickButton = tableVarContext.buttonKind.ClearWalls\n        ReactDOM.render(\n            <TableUI />,\n            document.getElementById('UI')\n        )\n    }\n    \n    const ClearBoard = () => {\n        tableVarContext.clickButton = tableVarContext.buttonKind.ClearBoard\n        ReactDOM.render(\n            <TableUI />,\n            document.getElementById('UI')\n        )\n    }\n\n    return {Addbomb, RemoveBomb, ClearWalls, ClearBoard}\n}\n\nexport default ButtonEvent\n\n\n\n","import React from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Logo from './HeaderHelper/Logo';\r\nimport DropdownAlgorithm from './HeaderHelper/DropdownAlgorithm';\r\nimport DropdownMaze from './HeaderHelper/DropdownMaze';\r\nimport NavLink from './HeaderHelper/NavLink';\r\nimport NavAddBomb from './HeaderHelper/NavAddBomb';\r\nimport NavButton from './HeaderHelper/NavButton';\r\nimport DropdownSpeed from './HeaderHelper/DropdownSpeed';\r\nimport ButtonEvent from './TableHelper/ButtonEvent';\r\n\r\nfunction Header() {\r\n    const buttonEvent = ButtonEvent()\r\n\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"xl\" bg='dark' variant='dark'>\r\n            <Logo />\r\n            <Navbar.Toggle aria-controls=\"Collapse\" />\r\n            <Navbar.Collapse id=\"Collapse\" className='nvbar-collapse'>\r\n                <Nav className=\"nav-bar\">\r\n                    <DropdownAlgorithm />\r\n                    <DropdownMaze />\r\n                    <NavAddBomb names={[\"Add Bomb\", \"Remove Bomb\"]} handlers={[buttonEvent.Addbomb, buttonEvent.RemoveBomb]} />\r\n                    <NavButton />\r\n                    <NavLink names={[\"Clear Board\"]} handlers={[buttonEvent.ClearBoard]} />\r\n                    <NavLink names={[\"Clear Walls & Weights\"]} handlers={[buttonEvent.ClearWalls]} />\r\n                    <NavLink names={[\"Clear Path\"]} handlers={[() => alert('Clear Path !')]} />\r\n                    <DropdownSpeed />\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Header\r\n","import TableUI from './TableHelper/TableUI'\n\nfunction Table() {    \n    return (\n        <div id = \"UI\">\n            <TableUI/>\n        </div>\n    )\n}\n\nexport default Table\n","import './App.css';\nimport { algorithmReducer, initialAlgorithm, algorithmContext } from './Core';\nimport { sysStatusReducer, initialsysStatus, sysStatusContext } from './Core';\nimport { bombContext, bombInitial, bombReducer } from './Core';\nimport Header from './frontend/Header';\nimport { useReducer } from 'react';\nimport Table from './frontend/Table';\n\nfunction App() {\n  const [curAlgorithm, setCurAlgorithm] = useReducer(algorithmReducer, initialAlgorithm);\n  const [curSysStatus, setCurSysStatus] = useReducer(sysStatusReducer, initialsysStatus);\n  const [curBomb, setCurBomb] = useReducer(bombReducer, bombInitial);\n\n  return (\n    <div className=\"App\">\n      <bombContext.Provider value={{ get: curBomb, set: setCurBomb }}>\n        <sysStatusContext.Provider value={{ get: curSysStatus, set: setCurSysStatus }}>\n          <algorithmContext.Provider value={{ get: curAlgorithm, set: setCurAlgorithm }}>\n            <Header />\n          </algorithmContext.Provider>\n        </sysStatusContext.Provider>\n      </bombContext.Provider>\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}