{"version":3,"sources":["Frontend/HeaderHelper/Logo.js","Frontend/TableHelper/TableIndex.js","Core/index.js","HOC/Colored.js","Frontend/TableHelper/SetTable.js","Frontend/TableHelper/WhichComp.js","Frontend/TableHelper/Animation.js","Core/Queue.js","Core/Distance.js","Backend/Algorithms/BFS.js","Backend/Algorithms/DFS.js","Frontend/TableHelper/UpdateTable.js","Frontend/TableHelper/ButtonEvent.js","Frontend/HeaderHelper/DropdownAlgorithm.js","Backend/Maze/Simple_Stair_Pattern.js","Backend/Maze/Binary_Tree.js","Frontend/HeaderHelper/DropdownMaze.js","Frontend/HeaderHelper/NavLink.js","HOC/Colored_AddButton.js","Frontend/HeaderHelper/NavAddBomb.js","Core/IsMount.js","Frontend/HeaderHelper/NavButton.js","Frontend/HeaderHelper/NavClearBoard.js","Frontend/HeaderHelper/DropdownSpeed.js","Frontend/Header.js","Frontend/TableHelper/KeyboardEvent.js","Frontend/TableHelper/MouseEvent.js","Frontend/TableHelper/TableUI.js","Frontend/Table.js","Frontend/HeaderHelper/Info.js","Frontend/HeaderHelper/AlgorithmDescriptor.js","Frontend/HeaderHelper/IntroductionModal.js","App.js","reportWebVitals.js","index.js"],"names":["logo","Navbar","Brand","href","className","src","process","width","height","variant","alt","tableVar","rowSize","Math","floor","window","screen","availHeight","colSize","availWidth","size","id","newId","componentKind","add","wall","weight","bomb","start","end","background","search","searchFinal","searchBomb","searchBombFinal","path","pathFinal","keyboardSupport","w","down","touchContext","createContext","touchInitial","touchReducer","state","action","under","moveContext","moveReducer","updateContext","updateReducer","position","sysStatusContext","React","initialsysStatus","sysStatusReducer","bombContext","bombInitial","bombReducer","speedContext","speedInitial","speedReducer","algorithmContext","algorithmReducer","Colored","sysStatus","useContext","useState","isHover","setIsHover","setClassName","get","setTable","index","kind","document","getElementById","toString","pos","addComponentKind","WhichComponent","touch","type","rKind","WhichComponentType","Animation","arr","speed","count","myCallbackFunction","arrAnimation","setInterval","length","clearInterval","SearchBombAnimation","sysStatusFunction","searchBombAnimation","PathAnimation","i","SearchAnimation","searchAnimation","Queue","this","queue","val","push","isEmpty","shift","Distance","dict","max_d","d","max","endPos","shortest","x","y","visited","Set","curD","Infinity","curX","curY","has","unshift","BFS","startCallback","times","retSearchPath","retBombPath","retShortestPath","searchPath","distance","startPos","set","append","getLength","node","popleft","nextD","pop","getShortestPath","concat","DFS","DoDFS","startPath","endPath","clear","UpdateTable","Start","ClearPath","algorithm","ButtonEvent","update","j","console","log","event","name","Addbomb","RemoveBomb","ClearWalls","ClearBoard","CreateMaze","maze","MazeAnimation","DropdownAlgorithm","algoContext","toggleHandler","buttonEvent","Nav","Item","NavDropdown","xs","title","onSelect","eventKey","DropdownAlgorithmHandler","onMouseEnter","onMouseLeave","Simple_Stair_Pattern","walls","towardUp","Binary_Tree","tmp","randomFace","random","DropdownMaze","alert","NavLink","names","handlers","whichHandler","setWhichHandler","Link","onClick","preWhichHandler","algoStatus","NavAddBomb","isMount","useRef","useEffect","current","IsMount","NavButton","buttonName","setButtonName","myVariant","setMyVariant","algoName","Button","NavClearBoard","DropdownSpeed","setTitle","Header","collapseOnSelect","expand","bg","Logo","Toggle","aria-controls","Collapse","KeyboardEvent","key","MouseEvent","move","addEventListener","MouseDownHandler","e","preventDefault","target","whichComponent","MouseUpHandler","OnMouseEnterHanlder","whichOldComponent","whichNewComponent","TableUI","row","Array","from","keys","col","mouesEvent","createTable","map","rowIndex","colIndex","onMouseUp","onMouseDown","align","border","cellSpacing","Table","setTimeout","Spinner","animation","Info","bannedBomb","setBannedBomb","bannedBFSDFS","setBannedBFSDFS","AlgorithmDescriptor","algorithmName","setAlgorithmName","discription1","setDiscription1","discription2","setDiscription2","d1","d2","IntroductionModal","pages","setPages","show","setShow","language","setLanguage","checked","setChecked","maxPages","data","Modal","backdrop","centered","dialogClassName","Body","Footer","onlabel","onstyle","offlabel","offstyle","style","onChange","pre","prePage","App","useReducer","curAlgorithm","setCurAlgorithm","curSysStatus","setCurSysStatus","curBomb","setCurBomb","curSpeed","setCurSpeed","setTouch","setMove","setUpdate","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.a33c85e9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\n\r\nfunction logo() {\r\n    return (\r\n        <Navbar.Brand href=\"/PathingFinding/\" className='Navbar-logo'>\r\n            <img\r\n                src={process.env.PUBLIC_URL + '/logo.png'} // 取得public資料夾路徑\r\n                width=\"50\"\r\n                height=\"50\"\r\n                className='d-inline-block'\r\n                variant='test'\r\n                alt='Logo'\r\n            /> {' '}\r\n                    Path-Finding\r\n        </Navbar.Brand>\r\n    )\r\n}\r\n\r\nexport default logo\r\n","import { createContext } from 'react'\n\n\nconst size = 23\n\nexport const tableVar = {\n    rowSize: Math.floor(window.screen.availHeight / size) - 16, // Math.floor((window.screen.height - document.getElementById(\"navbar\").clientHeight) / 30)\n    colSize: Math.floor(window.screen.availWidth / size), \n    size: size,\n    id: \"0\",\n    newId: \"0\"\n}\n\nexport const componentKind =  {add: \"wall\", wall: \"wall\", weight: \"weight\",  bomb: \"bomb\", start: \"start\", end: \"end\", background: \"background\", search: \"search\", searchFinal: \"searchFinal\", searchBomb: \"searchBomb\", searchBombFinal: \"searchBombFinal\", path: \"path\", pathFinal: \"pathFinal\"}\nexport const keyboardSupport = {w: \"w\", down: true}\n\n// touch status\nexport const touchContext = createContext()\nexport const touchInitial = {start: componentKind.background, end: componentKind.background, bomb: componentKind.background}\nexport const touchReducer = (state, action) => {\n    switch (action.componentKind) {\n        case componentKind.start:\n            return {...state, start: action.under}\n        case componentKind.end:\n            return {...state, end: action.under}\n        case componentKind.bomb:\n            return {...state, bomb: action.under}\n        default:\n            return touchInitial\n    }\n}\n\n// move component\nexport const moveContext = createContext()\nexport const moveInitial = \"\"\nexport const moveReducer = (state, action) => {\n    switch (action) {\n        case componentKind.start:\n            return action\n        case componentKind.end:\n            return action\n        case componentKind.bomb:\n            return action\n        case componentKind.wall:\n            return action\n        case componentKind.weight:\n            return action\n        default:\n            return moveInitial\n    }\n}\n\n// result update status\nexport const updateContext = createContext()\nexport const updateInitial = false\nexport const updateReducer = (state, action) => {\n    switch (action) {\n        case \"True\":\n            return true\n        case \"False\":\n            return false\n        default:\n            return updateInitial\n    }\n} \n\n","import React from 'react'\r\nimport { tableVar } from '../Frontend/TableHelper/TableIndex'\r\n\r\n// component position\r\nexport var position = {\r\n    start: [Math.floor(tableVar.rowSize / 2), Math.floor(tableVar.colSize / 4)],\r\n    end: [Math.floor(tableVar.rowSize / 2), tableVar.colSize - Math.floor(tableVar.colSize / 4)],\r\n    bomb: false,\r\n    wall: [],\r\n    weight: [],\r\n    rowSize: tableVar.rowSize,\r\n    colSize: tableVar.colSize\r\n}\r\n\r\n\r\n// 目前系統狀態\r\nexport const sysStatusContext = React.createContext();\r\nexport const initialsysStatus = \"LOADING\";\r\nexport const sysStatusReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'IDLE':\r\n            return 'IDLE';\r\n        case 'RUNNING':\r\n            return 'RUNNING';\r\n        case 'LOADING':\r\n            return 'LOADING';\r\n        default:\r\n            return initialsysStatus;\r\n    }\r\n}\r\n\r\n// Bomb status\r\nexport const bombContext = React.createContext();\r\nexport const bombInitial = false;\r\nexport const bombReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'True':\r\n            return true;\r\n        case 'False':\r\n            return false;\r\n        default:\r\n            return bombInitial\r\n    }\r\n}\r\n\r\n// Speed\r\nexport const speedContext = React.createContext();\r\nexport const speedInitial = [\"average\", 250];\r\nexport const speedReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'Fast':\r\n            return [\"Fast\", 125];\r\n        case 'Average':\r\n            return [\"Average\", 250];\r\n        case 'Slow':\r\n            return [\"Slow\", 500];\r\n        default:\r\n            return bombInitial\r\n    }\r\n}\r\n\r\n// 目前系統是哪種演算法\r\nexport const algorithmContext = React.createContext();\r\nexport const initialAlgorithm = \"\";\r\nexport const algorithmReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'Algorithm_Dijkstra':\r\n            return 'Algorithm_Dijkstra';\r\n        case 'Algorithm_APlus':\r\n            return 'Algorithm_APlus';\r\n        case \"Algorithm_Greedy_Best_First\":\r\n            return 'Algorithm_Greedy_Best_First';\r\n        case \"Algorithm_Swarm\":\r\n            return 'Algorithm_Swarm';\r\n        case \"Algorithm_Convergent_Swarm\":\r\n            return 'Algorithm_Convergent_Swarm';\r\n        case \"Algorithm_Bidrectional_Swarm\":\r\n            return 'Algorithm_Bidrectional_Swarm';\r\n        case \"Algorithm_Breadth_First\":\r\n            return 'Algorithm_Breadth_First';\r\n        case \"Algorithm_Depth_First\":\r\n            return 'Algorithm_Depth_First';\r\n        default:\r\n            return initialAlgorithm;\r\n    }\r\n}","import { useState, useContext } from 'react';\nimport { sysStatusContext } from '../Core';\nimport '../App.scss';\n\nconst Colored = () => {\n    const sysStatus = useContext(sysStatusContext);\n    const [isHover, setIsHover] = useState(false);\n    const [className, setClassName] = useState(\"nav-link-default\");\n\n    const toggleHandler = () => {\n        if (isHover) {\n            setClassName(\"nav-link-default\");\n            setIsHover(false);\n        } else {\n            if (sysStatus.get !== \"IDLE\") {\n                setClassName(\"nav-link-red\");\n            } else {\n                setClassName(\"nav-link-green\");\n            }\n            setIsHover(true);\n        }\n    }\n\n    return [className, toggleHandler];\n}\n\nexport default Colored\n","import { componentKind, tableVar } from './TableIndex'\nimport { position } from '../../Core/index'\n\n\nexport function setTable(index, kind){\n    document.getElementById(index.toString()).className = kind\n    const pos = [Math.floor(index / tableVar.colSize), index % tableVar.colSize]\n\n    if(position.wall[pos]){\n        delete position.wall[pos]\n    }else if(position.weight[pos]){\n        delete position.weight[pos]\n    }\n\n    if(kind === componentKind.wall){\n        position.wall[pos] = true\n    }else if(kind === componentKind.weight){\n        position.weight[pos] = true\n    }else if(kind === componentKind.start){\n        position.start = pos\n    }else if(kind === componentKind.end){\n        position.end = pos\n    }else if(kind === componentKind.bomb){\n        position.bomb = pos\n    }else if(kind === componentKind.background){\n        if(position.bomb[0] === pos[0] && position.bomb[1] === pos[1]){\n            position.bomb = false\n        }\n    }\n\n    // console.log(position)\n\n}","import { componentKind } from './TableIndex'\n\n\nfunction addComponentKind(kind) {\n    switch (kind) {\n        case componentKind.add:\n            return componentKind.background\n        default:\n            return componentKind.add\n    }\n}\n\nexport function WhichComponent(id, touch){ // MouseEvent\n\n    const element = document.getElementById(id).className\n\n    switch (element) {\n        case componentKind.start:\n            return {kind: componentKind.start, touch: touch.get.start, type: 0}\n        case componentKind.end:\n            return {kind: componentKind.end, touch: touch.get.end, type: 0}\n        case componentKind.bomb:\n            return {kind: componentKind.bomb, touch: touch.get.bomb, type: 0}\n        case componentKind.wall:\n            return {kind: componentKind.wall, rKind: addComponentKind(componentKind.wall), type: 1}\n        case componentKind.weight:\n            return {kind: componentKind.weight, rKind: addComponentKind(componentKind.weight), type: 1}\n        default:\n            return {kind: componentKind.background, rKind: componentKind.add, type: 1}\n    }\n\n}\n\nexport function WhichComponentType(id){\n\n    const element = document.getElementById(id).className\n\n    switch (element) {\n        case componentKind.start:\n            return 0\n        case componentKind.end:\n            return 0\n        case componentKind.bomb:\n            return 0\n        case componentKind.wall:\n            return 1\n        case componentKind.weight:\n            return 2\n        default:\n            return 1\n    }\n\n}","import { tableVar, componentKind } from './TableIndex'\nimport { setTable } from './SetTable'\nimport { WhichComponentType } from './WhichComp'\n\n\nexport function Animation(arr, speed, count, kind, myCallbackFunction = null) {\n    const arrAnimation = setInterval(() => {\n        if (count === arr.length) {\n            if (myCallbackFunction !== null) {\n                myCallbackFunction();\n            }\n            clearInterval(arrAnimation);\n        }else {\n            const index = arr[count][0] * tableVar.colSize + arr[count][1]\n            if (WhichComponentType(index.toString()) !== 0) {\n                setTable(index, kind)\n            }\n        }\n        count += 1\n    }, speed / 3)\n}\n\nexport function SearchBombAnimation(search, bomb, path, speed, count, myCallbackFunction, sysStatusFunction) {\n    const searchBombAnimation = setInterval(() => {\n        if (count === search.length) {\n            myCallbackFunction(bomb, path, speed, 0, PathAnimation, sysStatusFunction)\n            clearInterval(searchBombAnimation)\n        }else{\n            for(var i = 0;i < search[count].length;i++){\n                const index = search[count][i][0] * tableVar.colSize + search[count][i][1]\n                if (WhichComponentType(index.toString()) !== 0) {\n                    if(bomb.length === 0){\n                        setTable(index, componentKind.search)\n                    }else{\n                        setTable(index, componentKind.searchBomb)\n                    }\n                }\n            }\n        }\n        count += 1\n    }, speed)\n}\n\nexport function SearchAnimation(bomb, path, speed, count, myCallbackFunction, sysStatusFunction) {\n    const searchAnimation = setInterval(() => {\n        if (count === bomb.length) {\n            myCallbackFunction(path, speed, 0, sysStatusFunction)\n            clearInterval(searchAnimation)\n        }else{\n            for(var i = 0;i < bomb[count].length;i++){\n                const index = bomb[count][i][0] * tableVar.colSize + bomb[count][i][1]\n                if (WhichComponentType(index.toString()) !== 0) {\n                    setTable(index, componentKind.search)\n                }\n            }\n        }\n        count += 1\n    }, speed)\n}\n\nexport function PathAnimation(path, speed, count, myCallbackFunction = null) {\n    Animation(path, speed, count, componentKind.path, myCallbackFunction)\n}\n\nexport function MazeAnimation(maze, speed, count, myCallbackFunction = null) {\n    Animation(maze, speed, count, componentKind.wall, myCallbackFunction)\n}","class Queue {\n    constructor() {\n        this.queue = [];\n    }\n\n    append(val) {\n        this.queue.push(val);\n    }\n\n    popleft() {\n        if (this.isEmpty()) return -1;\n        return this.queue.shift();\n    }\n\n    isEmpty() {\n        return this.queue.length === 0;\n    }\n\n    getLength() {\n        return this.queue.length;\n    }\n\n    getArray() {\n        return this.queue;\n    }\n}\n\nexport default Queue;","class Distance {\n    constructor() {\n        this.dict = {};\n        this.max_d = 0;\n    }\n\n    // pos=[x, y], d=距離\n    set(pos, d) {\n        this.dict[pos] = d;\n        this.max_d = Math.max(this.max_d, d);\n    }\n\n    // 取得距離\n    get(pos) {\n        if (pos in this.dict) {\n            return this.dict[pos];\n        } else {\n            return -1;\n        }\n    }\n\n    // 從end開始找尋附近四周圍，第一個 \"有被找過的\" 且 \"距離最小的\"的點，並回傳一個array\n    getShortestPath(endPos) {\n        if (!(endPos in this.dict)) return []; // 若終點沒被找過，就回傳空值\n\n        var shortest = [endPos];\n        var x = endPos[0];\n        var y = endPos[1];\n        var visited = new Set();\n\n        visited.add(endPos.toString());\n        while (this.max_d > 0) {\n            var curD = Infinity;\n            var curX = x;\n            var curY = y;\n\n            // up\n            if ([x - 1, y] in this.dict && !(visited.has([x - 1, y].toString()))) {\n                if (this.dict[[x - 1, y]] < curD) {\n                    curX = x - 1;\n                    curY = y;\n                    curD = this.dict[[x - 1, y]];\n                }\n                visited.add([x - 1, y].toString());\n            }\n\n            // right\n            if ([x, y + 1] in this.dict && !(visited.has([x, y + 1].toString()))) {\n                if (this.dict[[x, y + 1]] < curD) {\n                    curX = x;\n                    curY = y + 1;\n                    curD = this.dict[[x, y + 1]];\n                }\n                visited.add([x, y + 1].toString());\n            }\n\n            // down\n            if ([x + 1, y] in this.dict && !(visited.has([x + 1, y].toString()))) {\n                if (this.dict[[x + 1, y]] < curD) {\n                    curX = x + 1;\n                    curY = y;\n                    curD = this.dict[[x + 1, y]];\n                }\n                visited.add([x + 1, y].toString());\n            }\n\n            // up\n            if ([x, y - 1] in this.dict && !(visited.has([x, y - 1].toString()))) {\n                if (this.dict[[x, y - 1]] < curD) {\n                    curX = x;\n                    curY = y - 1;\n                    curD = this.dict[[x, y - 1]];\n                }\n                visited.add([x, y - 1].toString());\n            }\n            x = curX;\n            y = curY;\n            shortest.unshift([x, y]);\n            this.max_d = curD;\n        }\n        if (shortest.length === 1) return []; // 如果沒有找到路徑(只有終點自己)，則不用跑最短路徑\n        return shortest;\n    }\n}\n\nexport default Distance;","import { position } from '../../Core';\nimport Queue from '../../Core/Queue';\nimport Distance from '../../Core/Distance';\n\nfunction BFS(startCallback, speed) {\n    var times = 1 + (position.bomb === false ? 0 : 1); // 如果有bomb要執行2次\n    var retSearchPath = [];\n    var retBombPath = [];\n    var retShortestPath = [];\n\n    for (var i = 0; i < times; i++) {\n        var searchPath = [];\n        const visited = new Set();\n        const queue = new Queue();\n        var distance = new Distance();\n        var startPos = i === 0 ? position.start : position.bomb; // 第一次執行start，第二次bomb\n        var endPos = i === 0 && times > 1 ? position.bomb : position.end; // 第一次執行bomb，第二次end\n\n        distance.set(startPos, 0); // 加入自己\n        queue.append([startPos, 0]); // [pos, 距離]\n        visited.add(startPos.toString()); // 防止重複找尋\n        while (queue.getLength() > 0) {\n            var node = queue.popleft();\n            var x = node[0][0];\n            var y = node[0][1];\n            var nextD = node[1] + 1;\n\n            if (nextD > searchPath.length) searchPath.push([]); // 若有新的長度就增加array\n\n            if ([x, y].toString() === endPos.toString()) break; // 若找到終點就跳出\n\n            // left\n            if (y - 1 >= 0 && !([x, y - 1] in position.wall) && !(visited.has([x, y - 1].toString()))) {\n                queue.append([[x, y - 1], nextD]);\n                searchPath[nextD - 1].push([x, y - 1]);\n                distance.set([x, y - 1], nextD);\n                visited.add([x, y - 1].toString());\n            }\n\n            // up\n            if (x - 1 >= 0 && !([x - 1, y] in position.wall) && !(visited.has([x - 1, y].toString()))) {\n                queue.append([[x - 1, y], nextD]);\n                searchPath[nextD - 1].push([x - 1, y]);\n                distance.set([x - 1, y], nextD);\n                visited.add([x - 1, y].toString());\n            }\n\n            // right\n            // 這裡的position.rowSize怪怪的\n            if (y + 1 < position.colSize && !([x, y + 1] in position.wall) && !(visited.has([x, y + 1].toString()))) {\n                queue.append([[x, y + 1], nextD]);\n                searchPath[nextD - 1].push([x, y + 1]);\n                distance.set([x, y + 1], nextD);\n                visited.add([x, y + 1].toString());\n            }\n\n            // down\n            // 這裡的position.colSize怪怪的\n            if (x + 1 < position.rowSize && !([x + 1, y] in position.wall) && !(visited.has([x + 1, y].toString()))) {\n                queue.append([[x + 1, y], nextD]);\n                searchPath[nextD - 1].push([x + 1, y]);\n                distance.set([x + 1, y], nextD);\n                visited.add([x + 1, y].toString());\n            }\n\n        }\n\n        // 去除多找的一圈\n        while (distance.get(endPos) !== -1 && searchPath.length > distance.get(endPos)) {\n            searchPath.pop();\n        }\n\n        // 取得最短路徑\n        var shortest = distance.getShortestPath(endPos);\n\n        if (i === 0) {\n            retSearchPath = retSearchPath.concat(searchPath);\n        } else {\n            retBombPath = retBombPath.concat(searchPath);\n        }\n        retShortestPath = retShortestPath.concat(shortest);\n\n        if (distance.get(endPos) === -1) break; // 如果第一次沒找到終點，直接跳出\n    }\n    // 執行 start 動畫\n    startCallback(retSearchPath, retShortestPath, speed, retBombPath);\n}\nexport default BFS;","import { position } from '../../Core';\n\nfunction DFS(startCallback, speed) {\n    // retSearchPath 會等於 retShortestPath\n    var retSearchPath = [];\n    var retBombPath = [];\n    var retShortestPath = [];\n\n    function DoDFS(x, y, endPos, visited, startPath, endPath) {\n        if (x < 0 || y < 0 || x >= position.rowSize || y >= position.colSize || [x, y] in position.wall || visited.has([x, y].toString())) {\n            return false;\n        }\n\n        visited.add([x, y].toString());\n        startPath.push([[x, y]]);\n        endPath.push([x, y]);\n\n        if ([x, y].toString() === endPos.toString()) return true;\n\n\n        if (DoDFS(x - 1, y, endPos, visited, startPath, endPath)) {// up\n            return true;\n        }\n        if (DoDFS(x, y + 1, endPos, visited, startPath, endPath)) {// right\n            return true;\n        }\n        if (DoDFS(x + 1, y, endPos, visited, startPath, endPath)) {// down\n            return true;\n        }\n        if (DoDFS(x, y - 1, endPos, visited, startPath, endPath)) {// left\n            return true;\n        }\n    }\n    const visited = new Set();\n    var start = position.start;\n    var end = position.end;\n    if (position.bomb !== false) {\n        DoDFS(start[0], start[1], position.bomb, visited, retSearchPath, retShortestPath);\n        start = position.bomb;\n        visited.clear();\n    }\n    DoDFS(start[0], start[1], end, visited, retBombPath, retShortestPath);\n\n    startCallback(retSearchPath, retShortestPath, speed, retBombPath);\n}\n\nexport default DFS;","import BFS from '../../Backend/Algorithms/BFS';\nimport DFS from '../../Backend/Algorithms/DFS';\n\n\nexport function UpdateTable(Start, ClearPath, algorithm, speed) {\n    ClearPath(false)\n    switch (algorithm.get) {\n        case \"Algorithm_Dijkstra\":\n            break;\n        case 'Algorithm_APlus':\n            break;\n        case \"Algorithm_Greedy_Best_First\":\n            break;\n        case \"Algorithm_Swarm\":\n            break;\n        case \"Algorithm_Convergent_Swarm\":\n            break;\n        case \"Algorithm_Bidrectional_Swarm\":\n            break;\n        case \"Algorithm_Breadth_First\":\n            BFS(Start, speed.get[1]);\n            break;\n        case \"Algorithm_Depth_First\":\n            DFS(Start, speed.get[1]);\n            break;\n        default:\n            break;\n    }\n}","import { useContext } from 'react'\nimport { tableVar, touchContext, updateContext, componentKind } from './TableIndex'\nimport { SearchAnimation, SearchBombAnimation, MazeAnimation } from './Animation'\nimport { sysStatusContext, algorithmContext, bombContext, speedContext } from '../../Core'\nimport { setTable } from './SetTable'\nimport { UpdateTable } from './UpdateTable'\nimport { WhichComponent } from './WhichComp'\n\n\nfunction ButtonEvent() {\n    const [touch, update] = [useContext(touchContext), useContext(updateContext)]\n    const [algorithm, bomb, speed, sysStatus] = [useContext(algorithmContext), useContext(bombContext), useContext(speedContext), useContext(sysStatusContext)]\n\n\n    const Start = (search, path, speed, bomb = []) => {\n        if (update.get) {\n            for (var i = 0; i < search.length; i++) {\n                for (var j = 0; j < search[i].length; j++) {\n                    const index = search[i][j][0] * tableVar.colSize + search[i][j][1]\n                    if (WhichComponent(index.toString(), touch).type) {\n                        if(bomb.length === 0){\n                            setTable(index, componentKind.searchFinal)\n                        }else{\n                            setTable(index, componentKind.searchBombFinal)\n                        }\n                    }\n                }\n            }\n            for (i = 0; i < bomb.length; i++) {\n                for (j = 0; j < bomb[i].length; j++) {\n                    const index = bomb[i][j][0] * tableVar.colSize + bomb[i][j][1]\n                    if (WhichComponent(index.toString(), touch).type) {\n                        setTable(index, componentKind.searchFinal)\n                    }\n                }\n            }\n            for (i = 0; i < path.length; i++) {\n                const index = path[i][0] * tableVar.colSize + path[i][1]\n                if (WhichComponent(index.toString(), touch).type) {\n                    setTable(index, componentKind.pathFinal)\n                }\n            }\n\n        }else {\n            sysStatus.set(\"RUNNING\")\n            update.set(\"True\")\n            console.log(\"Start\")\n            SearchBombAnimation(search, bomb, path, speed, 0, SearchAnimation, () => sysStatus.set(\"IDLE\"))\n        }\n    }\n\n    const CreateMaze = (maze, speed) => {\n        sysStatus.set(\"RUNNING\");\n        MazeAnimation(maze, speed, 0, () => sysStatus.set(\"IDLE\"));\n    }\n\n    const Addbomb = () => {\n        console.log(\"AddBomb\")\n        const index = Math.floor(tableVar.rowSize / 2) * tableVar.colSize + Math.floor(tableVar.colSize / 2)\n\n        if (WhichComponent(index.toString(), touch).type === 0) {\n            return\n        }\n\n        bomb.set(\"True\")\n        setTable(index.toString(), componentKind.bomb)\n\n        if (update.get) {\n            UpdateTable(Start, ClearPath, algorithm, speed)\n        }\n    }\n\n    const RemoveBomb = () => {\n        console.log(\"RemoveBomb\")\n        for (var i = 0; i < tableVar.rowSize * tableVar.colSize; i++) {\n            if (document.getElementById(i.toString()).className === componentKind.bomb) {\n                setTable(i, componentKind.background)\n                break\n            }\n        }\n        bomb.set(\"False\")\n\n        if (update.get) {\n            UpdateTable(Start, ClearPath, algorithm, speed)\n        }\n    }\n\n    const ClearWalls = () => {\n        console.log(\"ClearWall\")\n        for (var i = 0; i < tableVar.rowSize * tableVar.colSize; i++) {\n            if (document.getElementById(i.toString()).className === componentKind.wall) {\n                setTable(i, componentKind.background)\n            }\n        }\n        touch.set(\"\")\n\n        if (update.get) {\n            UpdateTable(Start, ClearPath, algorithm, speed)\n        }\n    }\n\n    const ClearPath = (event = true) => {\n        console.log(\"ClearPath\")\n        if (event) {\n            update.set(\"False\")\n        }\n        for (var i = 0; i < tableVar.rowSize * tableVar.colSize; i++) {\n            const name = document.getElementById(i.toString()).className\n            if (name === componentKind.search || name === componentKind.searchFinal || name === componentKind.searchBomb || name === componentKind.searchBombFinal || name === componentKind.path || name === componentKind.pathFinal) {\n                setTable(i, componentKind.background)\n            }\n        }\n    }\n\n    const ClearBoard = () => {\n        console.log(\"ClearBoard\")\n        update.set(\"False\")\n        for (var i = 0; i < tableVar.rowSize * tableVar.colSize; i++) {\n            setTable(i, componentKind.background)\n        }\n        setTable(Math.floor(tableVar.rowSize / 2) * tableVar.colSize + Math.floor(tableVar.colSize / 4), componentKind.start)\n        setTable(Math.floor(tableVar.rowSize / 2 + 1) * tableVar.colSize - Math.floor(tableVar.colSize / 4), componentKind.end)\n        touch.set(\"\")\n        bomb.set(\"False\")\n    }\n\n    return { Start, Addbomb, RemoveBomb, ClearWalls, ClearPath, ClearBoard, CreateMaze }\n}\n\nexport default ButtonEvent\n\n\n\n","import React, { useContext } from 'react';\r\nimport { NavDropdown, Nav } from 'react-bootstrap';\r\nimport { algorithmContext, sysStatusContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\nimport ButtonEvent from '../TableHelper/ButtonEvent';\r\n\r\nfunction DropdownAlgorithm() {\r\n    const algoContext = useContext(algorithmContext);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const [className, toggleHandler] = Colored();\r\n    const buttonEvent = ButtonEvent()\r\n\r\n    const DropdownAlgorithmHandler = (eventKey) => {\r\n\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Algorithm_Dijkstra\":\r\n                algoContext.set('Algorithm_Dijkstra');\r\n                break;\r\n            case \"Algorithm_APlus\":\r\n                algoContext.set('Algorithm_APlus');\r\n                break;\r\n            case \"Algorithm_Greedy_Best_First\":\r\n                algoContext.set('Algorithm_Greedy_Best_First');\r\n                break;\r\n            case \"Algorithm_Swarm\":\r\n                algoContext.set('Algorithm_Swarm');\r\n                break;\r\n            case \"Algorithm_Convergent_Swarm\":\r\n                algoContext.set('Algorithm_Convergent_Swarm');\r\n                break;\r\n            case \"Algorithm_Bidrectional_Swarm\":\r\n                buttonEvent.RemoveBomb(); // 按下去後要清空bomb\r\n                algoContext.set('Algorithm_Bidrectional_Swarm');\r\n                break;\r\n            case \"Algorithm_Breadth_First\":\r\n                algoContext.set('Algorithm_Breadth_First');\r\n                break;\r\n            case \"Algorithm_Depth_First\":\r\n                algoContext.set('Algorithm_Depth_First');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item>\r\n            <NavDropdown xs={1} title={<span className={className}>Algorithms</span>} id=\"DropdownAlgorithm\" onSelect={(eventKey) => DropdownAlgorithmHandler(eventKey)}\r\n                onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}\r\n            >\r\n                <NavDropdown.Item eventKey=\"Algorithm_Dijkstra\">Dijkstra's Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_APlus\">A+ Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Greedy_Best_First\">Greedy Best-First Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Swarm\">Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Convergent_Swarm\">Convergent Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Bidrectional_Swarm\">Bidirectional Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Breadth_First\">Breadth-First Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Depth_First\">Depth-First Search</NavDropdown.Item>\r\n            </NavDropdown>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default DropdownAlgorithm;","import { position } from '../../Core';\n\nfunction Simple_Stair_Pattern() {\n    var walls = [];\n    var towardUp = true;\n    var x = position.rowSize;\n\n    for (var y = 0; y < position.colSize; y++) {\n        if (towardUp) {\n            x--;\n            if (x < 0) {\n                towardUp = false;\n                x = 1;\n            }\n        } else {\n            x++;\n            if (x >= position.rowSize) {\n                towardUp = true;\n                x = position.rowSize - 2;\n            }\n        }\n        walls.push([x, y]);\n    }\n    return walls;\n}\n\nexport default Simple_Stair_Pattern;","import { position } from '../../Core';\n\nfunction Binary_Tree() {\n    var walls = []\n\n    // 取得外圍\n    var tmp = position.colSize - 1;\n    for (var y = 0; y <= tmp; y++) {\n        walls.push([0, y]);\n        walls.push([0, tmp]);\n        tmp--;\n    }\n\n    for (var x = 0; x < position.rowSize; x++) {\n        walls.push([x, 0]);\n        walls.push([x, position.colSize - 1]);\n    }\n\n    var tmp = position.colSize - 1;\n    for (var y = 0; y <= tmp; y++) {\n        walls.push([position.rowSize - 1, y]);\n        walls.push([position.rowSize - 1, tmp]);\n        tmp--;\n    }\n\n    // Binary Tree to get random maze\n    // http://weblog.jamisbuck.org/2011/2/1/maze-generation-binary-tree-algorithm\n    for (var x = 2; x <= position.rowSize; x += 2) {\n        var tmp = position.colSize - 2;\n        for (var y = 2; y <= tmp; y++) {\n            var randomFace = Math.floor(Math.random() * 2) + 1;// 1=上，2=左\n            switch (randomFace) {\n                case 1:\n                    walls.push([x - 1, y]);\n                    break;\n                case 2:\n                    walls.push([x, y - 1]);\n            }\n\n            randomFace = Math.floor(Math.random() * 2) + 1;// 1=上，2=右\n            switch (randomFace) {\n                case 1:\n                    walls.push([x - 1, tmp]);\n                    break;\n                case 2:\n                    walls.push([x, tmp + 1]);\n            }\n            tmp--;\n        }\n    }\n\n    return walls;\n}\n\nexport default Binary_Tree;","import React, { useContext } from 'react'\r\nimport { NavDropdown, Nav } from 'react-bootstrap';\r\nimport { sysStatusContext, speedContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\nimport Simple_Stair_Pattern from '../../Backend/Maze/Simple_Stair_Pattern';\r\nimport Binary_Tree from '../../Backend/Maze/Binary_Tree';\r\nimport ButtonEvent from '../TableHelper/ButtonEvent';\r\n\r\nfunction DropdownMaze() {\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const [className, toggleHandler] = Colored();\r\n    const buttonEvent = ButtonEvent();\r\n    const speed = useContext(speedContext);\r\n\r\n    const DropdownMazeHandler = (eventKey) => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n        buttonEvent.ClearPath()\r\n        buttonEvent.ClearWalls()\r\n        switch (eventKey) {\r\n            case \"Maze_Recursive_Division\":\r\n                alert(\"Maze_Recursive_Division\");\r\n                break;\r\n            case \"Maze_Recursive_Division_vertical\":\r\n                alert(\"Maze_Recursive_Division_vertical\");\r\n                break;\r\n            case \"Maze_Recursive_Division_horizontal\":\r\n                alert(\"Maze_Recursive_Division_horizontal\");\r\n                break;\r\n            case \"Maze_Basic_Random\":\r\n                break;\r\n            case \"Maze_Basic_Weight_Maze\":\r\n                alert(\"Maze_Basic_Weight_Maze\");\r\n                break;\r\n            case \"Maze_Simple_stair_pattern\":\r\n                buttonEvent.CreateMaze(Simple_Stair_Pattern(), speed.get[1]);\r\n                break;\r\n            case \"Maze_Binary_Tree\":\r\n                buttonEvent.CreateMaze(Binary_Tree(), speed.get[1]);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item>\r\n            <NavDropdown xs={1} title={<span className={className}>Mazes & Patterns</span>} id=\"DropdownMaze\" onSelect={DropdownMazeHandler}\r\n                onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}\r\n            >\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division\">Recursive Division</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division_vertical\">Recursive Division(vertical skew)</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division_horizontal\">Recursive Division(horizontal skew)</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Basic_Random\">Basic Random Maze</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Basic_Weight_Maze\">Basic Weight Maze</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Simple_stair_pattern\">Simple Stair Pattern</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Binary_Tree\">Binary Tree Generator</NavDropdown.Item>\r\n            </NavDropdown>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default DropdownMaze;","import React, { useState, useContext } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { sysStatusContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\n\r\nfunction NavLink({ names, handlers }) {\r\n    const [whichHandler, setWhichHandler] = useState(0);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const [className, toggleHandler] = Colored();\r\n\r\n    const localHandler = () => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        setWhichHandler(preWhichHandler => (preWhichHandler + 1) % handlers.length);\r\n        handlers[whichHandler]();\r\n    }\r\n\r\n    return (\r\n        <Nav.Item xs={1}>\r\n            <Nav.Link onClick={localHandler} className={className} onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}>{names[whichHandler]}</Nav.Link>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default NavLink\r\n","import { useState, useContext } from 'react';\nimport { sysStatusContext, algorithmContext } from '../Core';\nimport '../App.scss';\n\nconst Colored = () => {\n    const sysStatus = useContext(sysStatusContext);\n    const algoStatus = useContext(algorithmContext);\n    const [isHover, setIsHover] = useState(false);\n    const [className, setClassName] = useState(\"nav-link-default\");\n\n    const toggleHandler = () => {\n        if (isHover) {\n            setClassName(\"nav-link-default\");\n            setIsHover(false);\n        } else {\n            if (sysStatus.get !== \"IDLE\" || algoStatus.get === \"\" || algoStatus.get === \"Algorithm_Bidrectional_Swarm\") {\n                setClassName(\"nav-link-red\");\n            } else {\n                setClassName(\"nav-link-green\");\n            }\n            setIsHover(true);\n        }\n    }\n\n    return [className, toggleHandler];\n}\n\nexport default Colored\n","import React, { useState, useContext, useEffect } from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport { bombContext, sysStatusContext, algorithmContext } from '../../Core';\nimport Colored from '../../HOC/Colored_AddButton';\nimport { IsMount } from '../../Core/IsMount.js'\n\nfunction NavAddBomb({ names, handlers }) {\n    const [whichHandler, setWhichHandler] = useState(0);\n    const bomb = useContext(bombContext);\n    const sysStatus = useContext(sysStatusContext);\n    const algoContext = useContext(algorithmContext);\n    const [className, toggleHandler] = Colored();\n    const isMount = IsMount();\n\n    useEffect(() => {\n        if (isMount) return; // 防止第一次render也會跑進來執行\n\n        if (bomb.get === true) {\n            setWhichHandler(1);\n        } else {\n            setWhichHandler(0);\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [bomb])\n\n    useEffect(() => {\n        if (isMount) return;\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [whichHandler])\n\n    const localHandler = () => {\n        if (isMount) return;\n\n        if (sysStatus.get !== \"IDLE\" || algoContext.get === \"\" || algoContext.get === \"Algorithm_Bidrectional_Swarm\") {\n            return;\n        }\n\n        handlers[whichHandler]();\n    }\n\n\n    return (\n        <Nav.Item xs={1}>\n            <Nav.Link onClick={localHandler} className={className} onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}>{names[whichHandler]}</Nav.Link>\n        </Nav.Item>\n    )\n}\n\nexport default NavAddBomb\n","import { useRef, useEffect } from 'react';\n\nexport const IsMount = () => {\n    const isMount = useRef(true);\n\n    useEffect(() => {\n        isMount.current = false;\n    }, [])\n\n    return isMount.current;\n}\n\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { algorithmContext, sysStatusContext, speedContext } from '../../Core';\r\nimport ButtonEvent from '../TableHelper/ButtonEvent';\r\nimport BFS from '../../Backend/Algorithms/BFS';\r\nimport DFS from '../../Backend/Algorithms/DFS';\r\n\r\nconst NavButton = () => {\r\n\r\n    const [buttonName, setButtonName] = useState(\"Visualize !\");\r\n    const [myVariant, setMyVariant] = useState(\"\");\r\n    const algoContext = useContext(algorithmContext);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const speed = useContext(speedContext);\r\n    const buttonEvent = ButtonEvent();\r\n\r\n    useEffect(() => {\r\n        setMyVariant('success');\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        var algoName = \"\";\r\n        switch (algoContext.get) {\r\n            case \"Algorithm_Dijkstra\":\r\n                algoName = \"Dijkstra's\";\r\n                break;\r\n            case 'Algorithm_APlus':\r\n                algoName = \"A*\";\r\n                break;\r\n            case \"Algorithm_Greedy_Best_First\":\r\n                algoName = \"Greedy\";\r\n                break;\r\n            case \"Algorithm_Swarm\":\r\n                algoName = \"Swarm\";\r\n                break;\r\n            case \"Algorithm_Convergent_Swarm\":\r\n                algoName = \"Convergent Swarm\";\r\n                break;\r\n            case \"Algorithm_Bidrectional_Swarm\":\r\n                algoName = \"Bidrectional Swarm\";\r\n                break;\r\n            case \"Algorithm_Breadth_First\":\r\n                algoName = \"BFS\";\r\n                break;\r\n            case \"Algorithm_Depth_First\":\r\n                algoName = \"DFS\";\r\n                break;\r\n            default:\r\n                algoName = \"\";\r\n                break;\r\n        }\r\n        setButtonName(`Visualize ${algoName}!`);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [algoContext.get])\r\n\r\n    useEffect(() => {\r\n        if (sysStatus.get === 'RUNNING') {\r\n            setMyVariant('danger');\r\n        } else {\r\n            setMyVariant('success');\r\n        }\r\n    }, [sysStatus.get])\r\n\r\n\r\n    const handler = () => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        if (algoContext.get === \"\") {\r\n            setButtonName(\"Pick an Algorithm\");\r\n        } else {\r\n            buttonEvent.ClearPath();\r\n            switch (algoContext.get) {\r\n                case \"Algorithm_Dijkstra\":\r\n                    break;\r\n                case 'Algorithm_APlus':\r\n                    break;\r\n                case \"Algorithm_Greedy_Best_First\":\r\n                    break;\r\n                case \"Algorithm_Swarm\":\r\n                    break;\r\n                case \"Algorithm_Convergent_Swarm\":\r\n                    break;\r\n                case \"Algorithm_Bidrectional_Swarm\":\r\n                    break;\r\n                case \"Algorithm_Breadth_First\":\r\n                    BFS(buttonEvent.Start, speed.get[1]);\r\n                    break;\r\n                case \"Algorithm_Depth_First\":\r\n                    DFS(buttonEvent.Start, speed.get[1]);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item xs={1}>\r\n            <Button id=\"navButton\" variant={myVariant} size=\"lg\" onClick={handler}>{buttonName}</Button>\r\n        </Nav.Item>\r\n    )\r\n};\r\n\r\nexport default NavButton\r\n","import React, { useState, useContext } from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport { sysStatusContext } from '../../Core';\nimport Colored from '../../HOC/Colored';\n\nfunction NavClearBoard({ names, handlers }) {\n    const [whichHandler, setWhichHandler] = useState(0);\n    const sysStatus = useContext(sysStatusContext);\n    const [className, toggleHandler] = Colored();\n\n    const localHandler = () => {\n        if (sysStatus.get !== \"IDLE\") {\n            return;\n        }\n\n        setWhichHandler(preWhichHandler => (preWhichHandler + 1) % handlers.length);\n        handlers[whichHandler]();\n    }\n\n    return (\n        <Nav.Item xs={1}>\n            <Nav.Link onClick={localHandler} className={className} onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}>{names[whichHandler]}</Nav.Link>\n        </Nav.Item>\n    )\n}\n\nexport default NavClearBoard\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport { sysStatusContext } from '../../Core';\r\nimport { speedContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\n\r\nfunction DropdownSpeed() {\r\n    const [title, setTitle] = useState('Average');\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const speed = useContext(speedContext);\r\n    const [className, toggleHandler] = Colored();\r\n\r\n    useEffect(() => {\r\n        setTitle(speed.get[0]);\r\n    }, [speed.get])\r\n\r\n\r\n    const DropdownSpeedHandler = (eventKey) => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Fast\":\r\n                speed.set(\"Fast\");\r\n                break;\r\n            case \"Average\":\r\n                speed.set(\"Average\");\r\n                break;\r\n            case \"Slow\":\r\n                speed.set(\"Slow\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <NavDropdown xs={1} title={<span className={className}>Speed: {title}</span>} id=\"DropdownSpeed\" onSelect={DropdownSpeedHandler}\r\n            onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}\r\n        >\r\n            <NavDropdown.Item eventKey=\"Fast\">Fast</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Average\">Average</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Slow\">Slow</NavDropdown.Item>\r\n        </NavDropdown>\r\n    )\r\n}\r\n\r\nexport default DropdownSpeed;","import React from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Logo from './HeaderHelper/Logo';\r\nimport DropdownAlgorithm from './HeaderHelper/DropdownAlgorithm';\r\nimport DropdownMaze from './HeaderHelper/DropdownMaze';\r\nimport NavLink from './HeaderHelper/NavLink';\r\nimport NavAddBomb from './HeaderHelper/NavAddBomb';\r\nimport NavButton from './HeaderHelper/NavButton';\r\nimport NavClearBoard from './HeaderHelper/NavClearBoard';\r\nimport DropdownSpeed from './HeaderHelper/DropdownSpeed';\r\nimport ButtonEvent from './TableHelper/ButtonEvent';\r\n\r\nfunction Header() {\r\n    const buttonEvent = ButtonEvent()\r\n\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"xl\" bg='dark' variant='dark'>\r\n            <Logo />\r\n            <Navbar.Toggle aria-controls=\"Collapse\" />\r\n            <Navbar.Collapse id=\"Collapse\" className='nvbar-collapse'>\r\n                <Nav className=\"nav-bar\">\r\n                    <DropdownAlgorithm />\r\n                    <DropdownMaze />\r\n                    <NavAddBomb names={[\"Add Bomb\", \"Remove Bomb\"]} handlers={[buttonEvent.Addbomb, buttonEvent.RemoveBomb]} />\r\n                    <NavButton />\r\n                    <NavClearBoard names={[\"Clear Board\"]} handlers={[buttonEvent.ClearBoard]} />\r\n                    <NavLink names={[\"Clear Walls & Weights\"]} handlers={[buttonEvent.ClearWalls]} />\r\n                    <NavLink names={[\"Clear Path\"]} handlers={[buttonEvent.ClearPath]} />\r\n                    <DropdownSpeed />\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Header\r\n","import { componentKind, keyboardSupport } from './TableIndex'\n\n\nexport function KeyboardEvent(event) {\n    console.log(\"KeyboardEvent\")\n\n    if(event.key === keyboardSupport.w){\n        if(componentKind.add === componentKind.wall){\n            componentKind.add = componentKind.weight\n            keyboardSupport.down = false\n        }else{\n            componentKind.add = componentKind.wall\n            keyboardSupport.down = true\n        }\n    } \n}\n","import { useContext, useEffect } from 'react'\nimport { sysStatusContext, algorithmContext, speedContext } from '../../Core/index'\nimport { tableVar, touchContext, moveContext, updateContext, componentKind, keyboardSupport } from './TableIndex'\nimport { setTable } from './SetTable'\nimport { UpdateTable } from './UpdateTable'\nimport { WhichComponent } from './WhichComp'\nimport { KeyboardEvent } from './KeyboardEvent'\nimport ButtonEvent from './ButtonEvent'\n\nfunction MouseEvent() {\n    const [touch, move, update] = [useContext(touchContext), useContext(moveContext), useContext(updateContext)]\n    const [algorithm, speed, sysStatus] = [useContext(algorithmContext), useContext(speedContext), useContext(sysStatusContext)]\n    const buttonEvent = ButtonEvent()\n\n    useEffect(() => {\n        document.addEventListener('keydown', function(event) {\n            if(keyboardSupport.down){\n                KeyboardEvent(event)\n            }\n        })\n        document.addEventListener('keyup', function(event) {\n            if(keyboardSupport.down === false){\n                KeyboardEvent(event)\n            }\n        })\n    })\n\n    const MouseDownHandler = (e) => {\n        // console.log(\"MouseDownHandler \" + e.target.id)\n\n        if (sysStatus.get !== \"IDLE\") {\n            return\n        }\n\n        e.preventDefault()\n\n        tableVar.id = e.target.id\n        const whichComponent = WhichComponent(tableVar.id, touch)\n\n        if(whichComponent.type){\n            setTable(tableVar.id, whichComponent.rKind)\n            move.set(componentKind.add)\n\n        }else{\n            move.set(whichComponent.kind)\n        }\n    }\n\n    const MouseUpHandler = (e) => {\n        // console.log(\"MouseUpHandler \" + e.target.id)\n\n        if (sysStatus.get !== \"IDLE\") {\n            return\n        }\n\n        move.set(\"\")\n\n        if(update.get && move.get !== \"\"){\n            UpdateTable(buttonEvent.Start, buttonEvent.ClearPath, algorithm, speed)\n        }\n    }\n\n    const OnMouseEnterHanlder = (e) => {\n        // console.log(\"OnMouseEnterHanlder \" + e.target.id)\n\n        if (sysStatus.get !== \"IDLE\") {\n            return\n        }\n\n        tableVar.newId = e.target.id\n        const whichOldComponent = WhichComponent(tableVar.id, touch)\n        const whichNewComponent = WhichComponent(tableVar.newId, touch)\n\n        if(move.get === componentKind.add && whichNewComponent.type){\n            setTable(tableVar.newId, whichNewComponent.rKind)\n            tableVar.id = tableVar.newId\n\n        }else if(move.get !== componentKind.add && move.get !== \"\" && whichNewComponent.type){\n            setTable(tableVar.id, whichOldComponent.touch)\n            touch.set({componentKind: whichOldComponent.kind, under: whichNewComponent.kind})\n            setTable(tableVar.newId, whichOldComponent.kind)\n            tableVar.id = tableVar.newId\n        }\n\n        if(update.get && move.get !== \"\"){\n            UpdateTable(buttonEvent.Start, buttonEvent.ClearPath, algorithm, speed)\n        }\n    }\n\n    return {MouseDownHandler, MouseUpHandler, OnMouseEnterHanlder}\n\n}\n\nexport default MouseEvent","import { useEffect } from 'react'\nimport MouseEvent from './MouseEvent'\nimport { tableVar, componentKind } from './TableIndex'\n\n\nfunction TableUI() {\n    const [rowSize, colSize, size] = [tableVar.rowSize, tableVar.colSize, tableVar.size]\n\n    const row = Array.from(Array(rowSize).keys())\n    const col = Array.from(Array(colSize).keys())\n\n    const mouesEvent = MouseEvent()\n    const [MouseDownHandler, MouseUpHandler, OnMouseEnterHanlder] = [mouesEvent.MouseDownHandler, mouesEvent.MouseUpHandler, mouesEvent.OnMouseEnterHanlder]\n\n    const createTable = row.map((rowIndex, index) => {\n        return ( \n            <tr key = {index} height={size}>\n                {col.map((colIndex, index) => {\n                    // console.log(rowIndex + \" \" + colIndex)\n                    return (\n                        <td id = {rowIndex * colSize + colIndex} key = {index} className = {componentKind.background} width={size} onMouseUp = {MouseUpHandler} onMouseDown = {MouseDownHandler} onMouseEnter = {OnMouseEnterHanlder}>\n                            {}\n                        </td>)}\n                    )}\n            </tr>)}\n        )\n\n    useEffect(() => {\n        document.getElementById((Math.floor(tableVar.rowSize / 2) * tableVar.colSize + Math.floor(tableVar.colSize / 4)).toString()).className = componentKind.start\n        document.getElementById((Math.floor(tableVar.rowSize / 2 + 1) * tableVar.colSize - Math.floor(tableVar.colSize / 4)).toString()).className = componentKind.end\n    }, [])\n    \n    \n      \n    return (\n        <div className = \"tablePadding\">\n            <table id = \"board\" align=\"center\" border=\"1\" cellSpacing=\"0\">\n                <tbody>\n                    {createTable}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default TableUI\n","import TableUI from './TableHelper/TableUI';\nimport { useContext, useEffect } from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { sysStatusContext } from '../Core';\n\nfunction Table() {  \n\tconst sysStatus = useContext(sysStatusContext);\n\n\tuseEffect(()=>{\n\t\tsetTimeout(()=>{sysStatus.set(\"IDLE\");}, 1000);\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [])\n\n\tif (sysStatus.get === \"LOADING\"){\n\t\treturn (<Spinner animation=\"border\" variant=\"warning\" />);\n\t}\n\telse{\n\t\treturn (\n\t        <div id = \"UI\">\n\t            <TableUI/>\n\t        </div>\n\t    )\n\t}\n}\n\nexport default Table\n","import { useState, useContext, useEffect } from 'react';\nimport { algorithmContext } from '../../Core';\n\nfunction Info() {\n\tconst [bannedBomb, setBannedBomb] = useState(\"\");\n\tconst [bannedBFSDFS, setBannedBFSDFS] = useState(\"\");\n\tconst algoContext = useContext(algorithmContext);\n\n\tuseEffect(() => {\n\t\tif (algoContext.get === \"Algorithm_Bidrectional_Swarm\") {\n\t\t\tsetBannedBomb(\"banned\");\n\t\t} else {\n\t\t\tsetBannedBomb(\"\");\n\t\t}\n\n\t\tif (algoContext.get === \"Algorithm_Breadth_First\" || algoContext.get === \"Algorithm_Depth_First\") {\n\t\t\tsetBannedBFSDFS(\"banned\");\n\t\t} else {\n\t\t\tsetBannedBFSDFS(\"\");\n\t\t}\n\t}, [algoContext.get])\n\n\treturn (\n\t\t<div id=\"mainInfo\">\n\t\t\t<ul>\n\t\t\t\t<li> <div className=\"Info-Start-Node\"></div>Start Node </li>\n\t\t\t\t<li> <div className=\"Info-End-Node\"></div>Target Node </li>\n\t\t\t\t<li className={bannedBomb}> <div className=\"Info-Bomb-Node\"></div>Bomb Node </li>\n\t\t\t\t<li className={bannedBFSDFS}> <div className=\"Info-Weight-Node\"></div>Weight Node </li>\n\t\t\t\t<li> <div className=\"Info-Unvisited-Node\"></div>Unvisited Node </li>\n\t\t\t\t<li> <div className=\"Info-Visited-Node\"></div><div className=\"Info-Visited1-Node\"></div>Visited Node </li>\n\t\t\t\t<li> <div className=\"Info-ShortestPathNode-Node\"></div>Shortest-Path Node </li>\n\t\t\t\t<li> <div className=\"Info-WallNode-Node\"></div>Wall Node </li>\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n\nexport default Info;","import {useState, useContext, useEffect} from 'react';\nimport { algorithmContext } from '../../Core';\n\nfunction AlgorithmDescriptor(){\n\tconst [algorithmName, setAlgorithmName] = useState('Pick an algorithm and visualize it!');\n    const [discription1, setDiscription1] = useState('');\n    const [discription2, setDiscription2] = useState('');\n\tconst algoContext = useContext(algorithmContext);\n\n\tuseEffect(() => {\n        var algoName = \"\";\n        var d1 = \"\";\n        var d2 = \"\";\n        switch (algoContext.get) {\n            case \"Algorithm_Dijkstra\":\n                algoName = \"Dijkstra's Algorithm\";\n                d1 = \"weighted\";\n                d2 = \"guarantees\";\n                break;\n            case 'Algorithm_APlus':\n                algoName = \"A* Search\";\n                d1 = \"weighted\";\n                d2 = \"guarantees\";\n                break;\n            case \"Algorithm_Greedy_Best_First\":\n                algoName = \"Greedy Best-first Search\";\n                d1 = \"weighted\";\n                d2 = \"does not guarantee\";\n                break;\n            case \"Algorithm_Swarm\":\n                algoName = \"Swarm Algorithm\";\n                d1 = \"weighted\";\n                d2 = \"does not guarantee\";\n                break;\n            case \"Algorithm_Convergent_Swarm\":\n                algoName = \"Convergent Swarm Algorithm\";\n                d1 = \"weighted\";\n                d2 = \"does not guarantee\";\n                break;\n            case \"Algorithm_Bidrectional_Swarm\":\n                algoName = \"Bidrectional Swarm Algorithm\";\n                d1 = \"weighted\";\n                d2 = \"does not guarantee\";\n                break;\n            case \"Algorithm_Breadth_First\":\n                algoName = \"Breath-first Search\";\n                d1 = \"unweighted\";\n                d2 = \"guarantee\";\n                break;\n            case \"Algorithm_Depth_First\":\n                algoName = \"Depth-first Search\";\n                d1 = \"unweighted\";\n                d2 = \"does not guarantee\";\n                break;\n            default:\n                algoName = \"Pick an algorithm and visualize it!\";\n                d1 = \"\";\n                d2 = \"\";\n                break;\n        }\n\n        setAlgorithmName(algoName);\n        setDiscription1(d1);\n        setDiscription2(d2);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [algoContext.get])\n\n    if (algoContext.get === \"\"){\n        return (\n            <div id=\"algorithmDescriptor\">\n                {algorithmName}\n            </div>\n        )\n    } else{\n        return (\n            <div id=\"algorithmDescriptor\">\n                {algorithmName} is <i><b>{discription1}</b></i> and <i><b>{discription2}</b></i> the shortest path!\n            </div>\n        )\n    }\n\t\n}\n\nexport default AlgorithmDescriptor;","import React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport data from '../../Resources/Data/Modalnfo.json';\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react'\n\nfunction IntroductionModal() {\n    const [pages, setPages] = useState(1);\n    const [show, setShow] = useState(true);\n    const [language, setLanguage] = useState(0);\n    const [checked, setChecked] = useState(true);\n    const maxPages = data.length;\n\n    const HandlePrevious = () => {\n        setPages(prePage => prePage - 1 >= 1 ? prePage - 1 : prePage);\n    }\n\n    const HandleNext = () => {\n        if (pages + 1 > maxPages) {\n            setShow(false);\n            return;\n        }\n        setPages(prePage => prePage + 1 <= maxPages ? prePage + 1 : prePage);\n    }\n\n    return (\n        <Modal show={show} size='xl' backdrop=\"static\" centered dialogClassName=\"Modal\">\n            <div className=\"ml-auto Modal-Page\">{`${pages}/${maxPages}`}</div>\n            <div className=\"Modal-Title\">{data[pages - 1][\"Title\"][language]}</div>\n\n            <Modal.Body className=\"Modal-Body\">\n                <p className=\"Modal-BodyText\">{data[pages - 1][\"Dialog\"][language]}</p>\n                <p className=\"Modal-BodyText1\">{data[pages - 1][\"Body\"][language]}</p>\n                {pages === 1 ? <div className=\"Logo\"></div> : null}\n                {pages === 2 ? <div className=\"ShortestPath\"></div> : null}\n                {pages === 3 ? <div className=\"Algorithm\"></div> : null}\n                {pages === 4 ? <div className=\"Maze\"></div> : null}\n                {pages === 5 ? <div className=\"WallWeight\"></div> : null}\n                {pages === 6 ? <div className=\"AddBomb\"></div> : null}\n                {pages === 7 ? <div className=\"StartDrag\"></div> : null}\n                {pages === 8 ? <div className=\"Other\"></div> : null}\n                {pages === 9 ? (language === 1 ? <p className=\"Modal-BodyText1\">本專案由 <a href=\"https://github.com/novayo\">novayo</a> 及 <a href=\"https://github.com/ChengTsungPao\">ChengTsungPao</a> 共同製作</p> : <p className=\"Modal-BodyText1\">This application made by <a href=\"https://github.com/novayo\">novayo</a> and <a href=\"https://github.com/ChengTsungPao\">ChengTsungPao</a>.</p>) : null}\n            </Modal.Body>\n\n            <Modal.Footer>\n                <Button className=\"mr-auto Button\" variant='outline-success' size=\"md\" onClick={() => setShow(false)}>Skip Tutorial</Button>\n                <BootstrapSwitchButton\n                    checked={checked}\n                    onlabel='En'\n                    onstyle='outline-info'\n                    offlabel='Ch'\n                    offstyle='outline-success'\n                    size=\"md\" // eslint-disable-next-line \n                    style='mr-auto' // 這裡會有怪怪的warning，所以加上上面的註解去除warning\n                    onChange={(checked) => {\n                        if (checked) {\n                            setLanguage(0);\n                        } else {\n                            setLanguage(1);\n                        }\n                        setChecked(pre => !pre);\n                    }}\n                />\n                <Button className=\"Button\" variant='outline-success' size=\"md\" onClick={() => HandlePrevious()}>Previous</Button>\n                <Button className=\"Button\" variant='outline-success' size=\"md\" onClick={() => HandleNext()}>Next</Button>\n            </Modal.Footer>\n        </Modal >\n    )\n}\n\nexport default IntroductionModal\n","import './App.scss';\nimport { useReducer } from 'react';\nimport Header from './Frontend/Header';\nimport { algorithmReducer, initialAlgorithm, algorithmContext } from './Core';\nimport { sysStatusReducer, initialsysStatus, sysStatusContext } from './Core';\nimport { bombContext, bombInitial, bombReducer } from './Core';\nimport { speedContext, speedInitial, speedReducer } from './Core';\nimport Table from './Frontend/Table';\nimport { touchReducer, touchInitial, touchContext } from './Frontend/TableHelper/TableIndex';\nimport { moveReducer, moveInitial, moveContext } from './Frontend/TableHelper/TableIndex';\nimport { updateReducer, updateInitial, updateContext } from './Frontend/TableHelper/TableIndex';\nimport Info from './Frontend/HeaderHelper/Info';\nimport AlgorithmDescriptor from './Frontend/HeaderHelper/AlgorithmDescriptor';\nimport IntroductionModal from './Frontend/HeaderHelper/IntroductionModal';\n\nfunction App() {\n  const [curAlgorithm, setCurAlgorithm] = useReducer(algorithmReducer, initialAlgorithm);\n  const [curSysStatus, setCurSysStatus] = useReducer(sysStatusReducer, initialsysStatus);\n  const [curBomb, setCurBomb] = useReducer(bombReducer, bombInitial);\n  const [curSpeed, setCurSpeed] = useReducer(speedReducer, speedInitial);\n  const [touch, setTouch] = useReducer(touchReducer, touchInitial)\n  const [move, setMove] = useReducer(moveReducer, moveInitial)\n  const [update, setUpdate] = useReducer(updateReducer, updateInitial)\n\n  return (\n    <div className=\"App\">\n      <IntroductionModal />\n      <updateContext.Provider value={{ get: update, set: setUpdate }}>\n        <moveContext.Provider value={{ get: move, set: setMove }}>\n          <touchContext.Provider value={{ get: touch, set: setTouch }}>\n            <speedContext.Provider value={{ get: curSpeed, set: setCurSpeed }}>\n              <bombContext.Provider value={{ get: curBomb, set: setCurBomb }}>\n                <sysStatusContext.Provider value={{ get: curSysStatus, set: setCurSysStatus }}>\n                  <algorithmContext.Provider value={{ get: curAlgorithm, set: setCurAlgorithm }}>\n                    <Header />\n                    <Info />\n                    <AlgorithmDescriptor />\n                    <Table />\n                  </algorithmContext.Provider>\n                </sysStatusContext.Provider>\n              </bombContext.Provider>\n            </speedContext.Provider>\n          </touchContext.Provider>\n        </moveContext.Provider>\n      </updateContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}