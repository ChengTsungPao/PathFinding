{"version":3,"sources":["Frontend/HeaderHelper/Logo.js","Frontend/TableHelper/TableIndex.js","Core/index.js","HOC/Colored.js","Frontend/TableHelper/SetTable.js","Frontend/TableHelper/Animation.js","Core/Queue.js","Core/Distance.js","Backend/Bfs.js","Frontend/TableHelper/UpdateTable.js","Frontend/TableHelper/WhichComp.js","Frontend/TableHelper/ButtonEvent.js","Frontend/HeaderHelper/DropdownAlgorithm.js","Backend/Simple_Stair_Pattern.js","Frontend/HeaderHelper/DropdownMaze.js","Frontend/HeaderHelper/NavLink.js","HOC/Colored_AddButton.js","Frontend/HeaderHelper/NavAddBomb.js","Core/IsMount.js","Frontend/HeaderHelper/NavButton.js","Frontend/HeaderHelper/NavClearBoard.js","Frontend/HeaderHelper/DropdownSpeed.js","Frontend/Header.js","Frontend/TableHelper/MouseEvent.js","Frontend/TableHelper/TableUI.js","Frontend/Table.js","Frontend/HeaderHelper/Info.js","Frontend/HeaderHelper/AlgorithmDescriptor.js","Frontend/HeaderHelper/IntroductionModal.js","App.js","reportWebVitals.js","index.js"],"names":["logo","Navbar","Brand","href","className","src","process","width","height","variant","alt","tableVar","rowSize","Math","floor","window","screen","availHeight","colSize","availWidth","size","id","newId","componentKind","touchContext","createContext","touchInitial","start","end","bomb","touchReducer","state","action","under","moveContext","moveReducer","updateContext","updateReducer","position","wall","sysStatusContext","React","initialsysStatus","sysStatusReducer","bombContext","bombInitial","bombReducer","speedContext","speedInitial","speedReducer","algorithmContext","algorithmReducer","Colored","sysStatus","useContext","useState","isHover","setIsHover","setClassName","get","setTable","index","kind","document","getElementById","toString","pos","Animation","arr","speed","count","myCallbackFunction","arrAnimation","setInterval","length","clearInterval","name","SearchBombAnimation","search","path","sysStatusFunction","searchBombAnimation","PathAnimation","i","SearchAnimation","searchAnimation","console","log","Queue","this","queue","val","push","isEmpty","shift","Distance","dict","max_d","d","max","endPos","shortest","x","y","visited","Set","add","curD","Infinity","curX","curY","has","unshift","BFS","times","retSearchPath","retBombPath","retShortestPath","searchPath","distance","startPos","set","append","getLength","node","popleft","nextD","pop","getShortestPath","concat","UpdateTable","Start","ClearPath","algorithm","WhichComponent","touch","type","rKind","ButtonEvent","update","j","event","Addbomb","RemoveBomb","ClearWalls","ClearBoard","CreateMaze","maze","MazeAnimation","DropdownAlgorithm","algoContext","toggleHandler","buttonEvent","Nav","Item","NavDropdown","xs","title","onSelect","eventKey","DropdownAlgorithmHandler","onMouseEnter","onMouseLeave","Simple_Stair_Pattern","walls","towardUp","DropdownMaze","alert","NavLink","names","handlers","whichHandler","setWhichHandler","Link","onClick","preWhichHandler","algoStatus","NavAddBomb","isMount","useRef","useEffect","current","IsMount","NavButton","buttonName","setButtonName","myVariant","setMyVariant","algoName","Button","NavClearBoard","DropdownSpeed","setTitle","Header","collapseOnSelect","expand","bg","Logo","Toggle","aria-controls","Collapse","MouseEvent","move","MouseDownHandler","e","preventDefault","target","whichComponent","MouseUpHandler","OnMouseEnterHanlder","whichOldComponent","whichNewComponent","TableUI","row","Array","from","keys","col","mouesEvent","createTable","map","rowIndex","colIndex","onMouseUp","onMouseDown","align","border","cellSpacing","Table","setTimeout","Spinner","animation","Info","bannedBomb","setBannedBomb","bannedBFSDFS","setBannedBFSDFS","AlgorithmDescriptor","algorithmName","setAlgorithmName","discription1","setDiscription1","discription2","setDiscription2","d1","d2","IntroductionModal","pages","setPages","show","setShow","language","setLanguage","checked","setChecked","maxPages","data","Modal","backdrop","centered","dialogClassName","Body","Footer","onlabel","onstyle","offlabel","offstyle","style","onChange","pre","prePage","App","useReducer","curAlgorithm","setCurAlgorithm","curSysStatus","setCurSysStatus","curBomb","setCurBomb","curSpeed","setCurSpeed","setTouch","setMove","setUpdate","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.2307d91e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\n\r\nfunction logo() {\r\n    return (\r\n        <Navbar.Brand href=\"/PathingFinding/\" className='Navbar-logo'>\r\n            <img\r\n                src={process.env.PUBLIC_URL + '/logo.png'} // 取得public資料夾路徑\r\n                width=\"50\"\r\n                height=\"50\"\r\n                className='d-inline-block'\r\n                variant='test'\r\n                alt='Logo'\r\n            /> {' '}\r\n                    Path-Finding\r\n        </Navbar.Brand>\r\n    )\r\n}\r\n\r\nexport default logo\r\n","import { createContext } from 'react'\n\n\nconst size = 23\n\nexport const tableVar = {\n    rowSize: Math.floor(window.screen.availHeight / size) - 16, // Math.floor((window.screen.height - document.getElementById(\"navbar\").clientHeight) / 30)\n    colSize: Math.floor(window.screen.availWidth / size), \n    size: size,\n    id: \"0\",\n    newId: \"0\"\n}\n\nexport const componentKind =  {wall: \"wall\", bomb: \"bomb\", start: \"start\", end: \"end\", background: \"background\", search: \"search\", searchFinal: \"searchFinal\", searchBomb: \"searchBomb\", searchBombFinal: \"searchBombFinal\", path: \"path\", pathFinal: \"pathFinal\"}\n\n// touch status\nexport const touchContext = createContext()\nexport const touchInitial = {start: componentKind.background, end: componentKind.background, bomb: componentKind.background}\nexport const touchReducer = (state, action) => {\n    switch (action.componentKind) {\n        case componentKind.start:\n            return {...state, start: action.under}\n        case componentKind.end:\n            return {...state, end: action.under}\n        case componentKind.bomb:\n            return {...state, bomb: action.under}\n        default:\n            return touchInitial\n    }\n}\n\n// move component\nexport const moveContext = createContext()\nexport const moveInitial = \"\"\nexport const moveReducer = (state, action) => {\n    switch (action) {\n        case componentKind.start:\n            return action\n        case componentKind.end:\n            return action\n        case componentKind.bomb:\n            return action\n        case componentKind.wall:\n            return action\n        default:\n            return moveInitial\n    }\n}\n\n// result update status\nexport const updateContext = createContext()\nexport const updateInitial = false\nexport const updateReducer = (state, action) => {\n    switch (action) {\n        case \"True\":\n            return true\n        case \"False\":\n            return false\n        default:\n            return updateInitial\n    }\n} \n\n","import React from 'react'\r\nimport { tableVar } from '../Frontend/TableHelper/TableIndex'\r\n\r\n// component position\r\nexport var position = {\r\n    start: [Math.floor(tableVar.rowSize / 2), Math.floor(tableVar.colSize / 4)],\r\n    end: [Math.floor(tableVar.rowSize / 2), tableVar.colSize - Math.floor(tableVar.colSize / 4)],\r\n    bomb: false,\r\n    wall: [],\r\n    rowSize: tableVar.rowSize,\r\n    colSize: tableVar.colSize\r\n}\r\n\r\n\r\n// 目前系統狀態\r\nexport const sysStatusContext = React.createContext();\r\nexport const initialsysStatus = \"LOADING\";\r\nexport const sysStatusReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'IDLE':\r\n            return 'IDLE';\r\n        case 'RUNNING':\r\n            return 'RUNNING';\r\n        case 'LOADING':\r\n            return 'LOADING';\r\n        default:\r\n            return initialsysStatus;\r\n    }\r\n}\r\n\r\n// Bomb status\r\nexport const bombContext = React.createContext();\r\nexport const bombInitial = false;\r\nexport const bombReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'True':\r\n            return true;\r\n        case 'False':\r\n            return false;\r\n        default:\r\n            return bombInitial\r\n    }\r\n}\r\n\r\n// Speed\r\nexport const speedContext = React.createContext();\r\nexport const speedInitial = [\"average\", 250];\r\nexport const speedReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'Fast':\r\n            return [\"Fast\", 125];\r\n        case 'Average':\r\n            return [\"Average\", 250];\r\n        case 'Slow':\r\n            return [\"Slow\", 500];\r\n        default:\r\n            return bombInitial\r\n    }\r\n}\r\n\r\n// 目前系統是哪種演算法\r\nexport const algorithmContext = React.createContext();\r\nexport const initialAlgorithm = \"\";\r\nexport const algorithmReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'Algorithm_Dijkstra':\r\n            return 'Algorithm_Dijkstra';\r\n        case 'Algorithm_APlus':\r\n            return 'Algorithm_APlus';\r\n        case \"Algorithm_Greedy_Best_First\":\r\n            return 'Algorithm_Greedy_Best_First';\r\n        case \"Algorithm_Swarm\":\r\n            return 'Algorithm_Swarm';\r\n        case \"Algorithm_Convergent_Swarm\":\r\n            return 'Algorithm_Convergent_Swarm';\r\n        case \"Algorithm_Bidrectional_Swarm\":\r\n            return 'Algorithm_Bidrectional_Swarm';\r\n        case \"Algorithm_Breadth_First\":\r\n            return 'Algorithm_Breadth_First';\r\n        case \"Algorithm_Depth_First\":\r\n            return 'Algorithm_Depth_First';\r\n        default:\r\n            return initialAlgorithm;\r\n    }\r\n}","import { useState, useContext } from 'react';\nimport { sysStatusContext } from '../Core';\nimport '../App.scss';\n\nconst Colored = () => {\n    const sysStatus = useContext(sysStatusContext);\n    const [isHover, setIsHover] = useState(false);\n    const [className, setClassName] = useState(\"nav-link-default\");\n\n    const toggleHandler = () => {\n        if (isHover) {\n            setClassName(\"nav-link-default\");\n            setIsHover(false);\n        } else {\n            if (sysStatus.get !== \"IDLE\") {\n                setClassName(\"nav-link-red\");\n            } else {\n                setClassName(\"nav-link-green\");\n            }\n            setIsHover(true);\n        }\n    }\n\n    return [className, toggleHandler];\n}\n\nexport default Colored\n","import { componentKind, tableVar } from './TableIndex'\nimport { position } from '../../Core/index'\n\n\nexport function setTable(index, kind){\n    document.getElementById(index.toString()).className = kind\n    const pos = [Math.floor(index / tableVar.colSize), index % tableVar.colSize]\n\n    if(position.wall[pos]){\n        delete position.wall[pos]\n    }\n\n    if(kind === componentKind.wall){\n        position.wall[pos] = true\n    }else if(kind === componentKind.start){\n        position.start = pos\n    }else if(kind === componentKind.end){\n        position.end = pos\n    }else if(kind === componentKind.bomb){\n        position.bomb = pos\n    }else if(kind === componentKind.background){\n        if(position.bomb[0] === pos[0] && position.bomb[1] === pos[1]){\n            position.bomb = false\n        }\n    }\n\n    // console.log(position)\n\n}","import { tableVar, componentKind } from './TableIndex'\nimport { setTable } from './SetTable'\n\n\nexport function Animation(arr, speed, count, kind, myCallbackFunction = null) {\n    const arrAnimation = setInterval(() => {\n        if (count === arr.length) {\n            if (myCallbackFunction !== null) {\n                myCallbackFunction();\n            }\n            clearInterval(arrAnimation);\n        }else {\n            const index = arr[count][0] * tableVar.colSize + arr[count][1]\n            const name = document.getElementById(index.toString()).className\n            if (name === componentKind.background || name === componentKind.search || name === componentKind.searchBomb) {\n                setTable(index, kind)\n            }\n        }\n        count += 1\n    }, speed / 3)\n}\n\nexport function SearchBombAnimation(search, bomb, path, speed, count, myCallbackFunction, sysStatusFunction) {\n    const searchBombAnimation = setInterval(() => {\n        if (count === search.length) {\n            myCallbackFunction(bomb, path, speed, 0, PathAnimation, sysStatusFunction)\n            clearInterval(searchBombAnimation)\n        }else{\n            for(var i = 0;i < search[count].length;i++){\n                const index = search[count][i][0] * tableVar.colSize + search[count][i][1]\n                const name = document.getElementById(index.toString()).className\n                if (name === componentKind.background || name === componentKind.search) {\n                    if(bomb.length === 0){\n                        setTable(index, componentKind.search)\n                    }else{\n                        setTable(index, componentKind.searchBomb)\n                    }\n                }\n            }\n        }\n        count += 1\n    }, speed)\n}\n\nexport function SearchAnimation(bomb, path, speed, count, myCallbackFunction, sysStatusFunction) {\n    const searchAnimation = setInterval(() => {\n        if (count === bomb.length) {\n            console.log(\"here\")\n            myCallbackFunction(path, speed, 0, sysStatusFunction)\n            clearInterval(searchAnimation)\n        }else{\n            for(var i = 0;i < bomb[count].length;i++){\n                const index = bomb[count][i][0] * tableVar.colSize + bomb[count][i][1]\n                const name = document.getElementById(index.toString()).className\n                if (name === componentKind.background || name === componentKind.searchBomb) {\n                    setTable(index, componentKind.search)\n                }\n            }\n        }\n        count += 1\n    }, speed)\n}\n\nexport function PathAnimation(path, speed, count, myCallbackFunction = null) {\n    Animation(path, speed, count, componentKind.path, myCallbackFunction)\n}\n\nexport function MazeAnimation(maze, speed, count, myCallbackFunction = null) {\n    Animation(maze, speed, count, componentKind.wall, myCallbackFunction)\n}","class Queue {\n    constructor() {\n        this.queue = [];\n    }\n\n    append(val) {\n        this.queue.push(val);\n    }\n\n    popleft() {\n        if (this.isEmpty()) return -1;\n        return this.queue.shift();\n    }\n\n    isEmpty() {\n        return this.queue.length === 0;\n    }\n\n    getLength() {\n        return this.queue.length;\n    }\n}\n\nexport default Queue;","class Distance {\n    constructor() {\n        this.dict = {};\n        this.max_d = 0;\n    }\n\n    // pos=[x, y], d=距離\n    set(pos, d) {\n        this.dict[pos] = d;\n        this.max_d = Math.max(this.max_d, d);\n    }\n\n    // 取得距離\n    get(pos) {\n        if (pos in this.dict) {\n            return this.dict[pos];\n        } else {\n            return -1;\n        }\n    }\n\n    // 從end開始找尋附近四周圍，第一個 \"有被找過的\" 且 \"距離最小的\"的點，並回傳一個array\n    getShortestPath(endPos) {\n        if (!(endPos in this.dict)) return []; // 若終點沒被找過，就回傳空值\n\n        var shortest = [endPos];\n        var x = endPos[0];\n        var y = endPos[1];\n        var visited = new Set();\n\n        visited.add(endPos.toString());\n        while (this.max_d > 0) {\n            var curD = Infinity;\n            var curX = x;\n            var curY = y;\n\n            // up\n            if ([x - 1, y] in this.dict && !(visited.has([x - 1, y].toString()))) {\n                if (this.dict[[x - 1, y]] < curD) {\n                    curX = x - 1;\n                    curY = y;\n                    curD = this.dict[[x - 1, y]];\n                }\n                visited.add([x - 1, y].toString());\n            }\n\n            // right\n            if ([x, y + 1] in this.dict && !(visited.has([x, y + 1].toString()))) {\n                if (this.dict[[x, y + 1]] < curD) {\n                    curX = x;\n                    curY = y + 1;\n                    curD = this.dict[[x, y + 1]];\n                }\n                visited.add([x, y + 1].toString());\n            }\n\n            // down\n            if ([x + 1, y] in this.dict && !(visited.has([x + 1, y].toString()))) {\n                if (this.dict[[x + 1, y]] < curD) {\n                    curX = x + 1;\n                    curY = y;\n                    curD = this.dict[[x + 1, y]];\n                }\n                visited.add([x + 1, y].toString());\n            }\n\n            // up\n            if ([x, y - 1] in this.dict && !(visited.has([x, y - 1].toString()))) {\n                if (this.dict[[x, y - 1]] < curD) {\n                    curX = x;\n                    curY = y - 1;\n                    curD = this.dict[[x, y - 1]];\n                }\n                visited.add([x, y - 1].toString());\n            }\n            x = curX;\n            y = curY;\n            shortest.unshift([x, y]);\n            this.max_d = curD;\n        }\n        if (shortest.length === 1) return []; // 如果沒有找到路徑(只有終點自己)，則不用跑最短路徑\n        return shortest;\n    }\n}\n\nexport default Distance;","import { position } from '../Core';\nimport Queue from '../Core/Queue';\nimport Distance from '../Core/Distance';\n\nfunction BFS(start, speed) {\n    var times = 1 + (position.bomb === false ? 0 : 1); // 如果有bomb要執行2次\n    var retSearchPath = []; // 目前是把兩次search放在同一個array，但應該要分開做顏色的區隔\n    var retBombPath = [];\n    var retShortestPath = [];\n\n    for (var i = 0; i < times; i++) {\n        var searchPath = [];\n        const visited = new Set();\n        const queue = new Queue();\n        var distance = new Distance();\n        var startPos = i === 0 ? position.start : position.bomb; // 第一次執行start，第二次bomb\n        var endPos = i === 0 && times > 1 ? position.bomb : position.end; // 第一次執行bomb，第二次end\n\n        distance.set(startPos, 0); // 加入自己\n        queue.append([startPos, 0]); // [pos, 距離]\n        visited.add(startPos.toString()); // 防止重複找尋\n        while (queue.getLength() > 0) {\n            var node = queue.popleft();\n            var x = node[0][0];\n            var y = node[0][1];\n            var nextD = node[1] + 1;\n\n            if (nextD > searchPath.length) searchPath.push([]); // 若有新的長度就增加array\n\n            if ([x, y].toString() === endPos.toString()) break; // 若找到終點就跳出\n\n            // left\n            if (y - 1 >= 0 && !([x, y - 1] in position.wall) && !(visited.has([x, y - 1].toString()))) {\n                queue.append([[x, y - 1], nextD]);\n                searchPath[nextD - 1].push([x, y - 1]);\n                distance.set([x, y - 1], nextD);\n                visited.add([x, y - 1].toString());\n            }\n\n            // up\n            if (x - 1 >= 0 && !([x - 1, y] in position.wall) && !(visited.has([x - 1, y].toString()))) {\n                queue.append([[x - 1, y], nextD]);\n                searchPath[nextD - 1].push([x - 1, y]);\n                distance.set([x - 1, y], nextD);\n                visited.add([x - 1, y].toString());\n            }\n\n            // right\n            // 這裡的position.rowSize怪怪的\n            if (y + 1 < position.colSize && !([x, y + 1] in position.wall) && !(visited.has([x, y + 1].toString()))) {\n                queue.append([[x, y + 1], nextD]);\n                searchPath[nextD - 1].push([x, y + 1]);\n                distance.set([x, y + 1], nextD);\n                visited.add([x, y + 1].toString());\n            }\n\n            // down\n            // 這裡的position.colSize怪怪的\n            if (x + 1 < position.rowSize && !([x + 1, y] in position.wall) && !(visited.has([x + 1, y].toString()))) {\n                queue.append([[x + 1, y], nextD]);\n                searchPath[nextD - 1].push([x + 1, y]);\n                distance.set([x + 1, y], nextD);\n                visited.add([x + 1, y].toString());\n            }\n\n        }\n\n        // 去除多找的一圈\n        while (distance.get(endPos) !== -1 && searchPath.length > distance.get(endPos)) {\n            searchPath.pop();\n        }\n\n        // 取得最短路徑\n        var shortest = distance.getShortestPath(endPos);\n\n        if (i === 0) {\n            console.log(searchPath)\n            retSearchPath = retSearchPath.concat(searchPath);\n        } else {\n            console.log(searchPath)\n            retBombPath = retBombPath.concat(searchPath);\n        }\n        retShortestPath = retShortestPath.concat(shortest);\n\n        if (distance.get(endPos) === -1) break; // 如果第一次沒找到終點，直接跳出\n    }\n    // 執行 start 動畫\n    start(retSearchPath, retShortestPath, speed, retBombPath);\n}\nexport default BFS;","import BFS from '../../Backend/Bfs'\n\n\nexport function UpdateTable(Start, ClearPath, algorithm, speed) {\n    ClearPath(false)\n    switch (algorithm.get) {\n        case \"Algorithm_Dijkstra\":\n            break;\n        case 'Algorithm_APlus':\n            break;\n        case \"Algorithm_Greedy_Best_First\":\n            break;\n        case \"Algorithm_Swarm\":\n            break;\n        case \"Algorithm_Convergent_Swarm\":\n            break;\n        case \"Algorithm_Bidrectional_Swarm\":\n            break;\n        case \"Algorithm_Breadth_First\":\n            BFS(Start, speed.get[1]);\n            break;\n        case \"Algorithm_Depth_First\":\n            break;\n        default:\n            break;\n    }\n}","import { componentKind } from './TableIndex'\n\n\nexport function WhichComponent(id, touch){\n\n    const element = document.getElementById(id).className\n\n    switch (element) {\n        case componentKind.start:\n            return {kind: componentKind.start, touch: touch.get.start, type: 0}\n        case componentKind.end:\n            return {kind: componentKind.end, touch: touch.get.end, type: 0}\n        case componentKind.bomb:\n            return {kind: componentKind.bomb, touch: touch.get.bomb, type: 0}\n        case componentKind.wall:\n            return {kind: componentKind.wall, rKind: componentKind.background, type: 1}\n        default:\n            return {kind: componentKind.background, rKind: componentKind.wall, type: 1}\n    }\n\n}","import { useContext } from 'react'\nimport { tableVar, touchContext, updateContext, componentKind } from './TableIndex'\nimport { SearchAnimation, SearchBombAnimation, MazeAnimation } from './Animation'\nimport { sysStatusContext, algorithmContext, bombContext, speedContext } from '../../Core'\nimport { setTable } from './SetTable'\nimport { UpdateTable } from './UpdateTable'\nimport { WhichComponent } from './WhichComp'\n\n\nfunction ButtonEvent() {\n    const [touch, update] = [useContext(touchContext), useContext(updateContext)]\n    const [algorithm, bomb, speed, sysStatus] = [useContext(algorithmContext), useContext(bombContext), useContext(speedContext), useContext(sysStatusContext)]\n\n\n    const Start = (search, path, speed, bomb = []) => {\n        if (update.get) {\n            for (var i = 0; i < search.length; i++) {\n                for (var j = 0; j < search[i].length; j++) {\n                    const index = search[i][j][0] * tableVar.colSize + search[i][j][1]\n                    if (WhichComponent(index.toString(), touch).type) {\n                        if(bomb.length === 0){\n                            setTable(index, componentKind.searchFinal)\n                        }else{\n                            setTable(index, componentKind.searchBombFinal)\n                        }\n                    }\n                }\n            }\n            for (i = 0; i < bomb.length; i++) {\n                for (j = 0; j < bomb[i].length; j++) {\n                    const index = bomb[i][j][0] * tableVar.colSize + bomb[i][j][1]\n                    if (WhichComponent(index.toString(), touch).type) {\n                        setTable(index, componentKind.searchFinal)\n                    }\n                }\n            }\n            for (i = 0; i < path.length; i++) {\n                const index = path[i][0] * tableVar.colSize + path[i][1]\n                if (WhichComponent(index.toString(), touch).type) {\n                    setTable(index, componentKind.pathFinal)\n                }\n            }\n\n        } else {\n            sysStatus.set(\"RUNNING\")\n            update.set(\"True\")\n            console.log(\"Start\")\n            SearchBombAnimation(search, bomb, path, speed, 0, SearchAnimation, () => sysStatus.set(\"IDLE\"))\n        }\n    }\n\n    const CreateMaze = (maze, speed) => {\n        sysStatus.set(\"RUNNING\");\n        MazeAnimation(maze, speed, 0, () => sysStatus.set(\"IDLE\"));\n    }\n\n    const Addbomb = () => {\n        console.log(\"AddBomb\")\n        const index = Math.floor(tableVar.rowSize / 2) * tableVar.colSize + Math.floor(tableVar.colSize / 2)\n\n        if (WhichComponent(index.toString(), touch).type === 0) {\n            return\n        }\n\n        bomb.set(\"True\")\n        setTable(index.toString(), componentKind.bomb)\n\n        if (update.get) {\n            UpdateTable(Start, ClearPath, algorithm, speed)\n        }\n    }\n\n    const RemoveBomb = () => {\n        console.log(\"RemoveBomb\")\n        for (var i = 0; i < tableVar.rowSize * tableVar.colSize; i++) {\n            if (document.getElementById(i.toString()).className === componentKind.bomb) {\n                setTable(i, componentKind.background)\n                break\n            }\n        }\n        bomb.set(\"False\")\n\n        if (update.get) {\n            UpdateTable(Start, ClearPath, algorithm, speed)\n        }\n    }\n\n    const ClearWalls = () => {\n        console.log(\"ClearWall\")\n        for (var i = 0; i < tableVar.rowSize * tableVar.colSize; i++) {\n            if (document.getElementById(i.toString()).className === componentKind.wall) {\n                setTable(i, componentKind.background)\n            }\n        }\n        touch.set(\"\")\n    }\n\n    const ClearPath = (event = true) => {\n        console.log(\"ClearPath\")\n        if (event) {\n            update.set(\"False\")\n        }\n        for (var i = 0; i < tableVar.rowSize * tableVar.colSize; i++) {\n            const name = document.getElementById(i.toString()).className\n            if (name === componentKind.search || name === componentKind.searchFinal || name === componentKind.searchBomb || name === componentKind.searchBombFinal || name === componentKind.path || name === componentKind.pathFinal) {\n                setTable(i, componentKind.background)\n            }\n        }\n    }\n\n    const ClearBoard = () => {\n        console.log(\"ClearBoard\")\n        update.set(\"False\")\n        for (var i = 0; i < tableVar.rowSize * tableVar.colSize; i++) {\n            setTable(i, componentKind.background)\n        }\n        setTable(Math.floor(tableVar.rowSize / 2) * tableVar.colSize + Math.floor(tableVar.colSize / 4), componentKind.start)\n        setTable(Math.floor(tableVar.rowSize / 2 + 1) * tableVar.colSize - Math.floor(tableVar.colSize / 4), componentKind.end)\n        touch.set(\"\")\n        bomb.set(\"False\")\n    }\n\n    return { Start, Addbomb, RemoveBomb, ClearWalls, ClearPath, ClearBoard, CreateMaze }\n}\n\nexport default ButtonEvent\n\n\n\n","import React, { useContext } from 'react';\r\nimport { NavDropdown, Nav } from 'react-bootstrap';\r\nimport { algorithmContext, sysStatusContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\nimport ButtonEvent from '../TableHelper/ButtonEvent';\r\n\r\nfunction DropdownAlgorithm() {\r\n    const algoContext = useContext(algorithmContext);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const [className, toggleHandler] = Colored();\r\n    const buttonEvent = ButtonEvent()\r\n\r\n    const DropdownAlgorithmHandler = (eventKey) => {\r\n\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Algorithm_Dijkstra\":\r\n                algoContext.set('Algorithm_Dijkstra');\r\n                break;\r\n            case \"Algorithm_APlus\":\r\n                algoContext.set('Algorithm_APlus');\r\n                break;\r\n            case \"Algorithm_Greedy_Best_First\":\r\n                algoContext.set('Algorithm_Greedy_Best_First');\r\n                break;\r\n            case \"Algorithm_Swarm\":\r\n                algoContext.set('Algorithm_Swarm');\r\n                break;\r\n            case \"Algorithm_Convergent_Swarm\":\r\n                algoContext.set('Algorithm_Convergent_Swarm');\r\n                break;\r\n            case \"Algorithm_Bidrectional_Swarm\":\r\n                buttonEvent.RemoveBomb(); // 按下去後要清空bomb\r\n                algoContext.set('Algorithm_Bidrectional_Swarm');\r\n                break;\r\n            case \"Algorithm_Breadth_First\":\r\n                algoContext.set('Algorithm_Breadth_First');\r\n                break;\r\n            case \"Algorithm_Depth_First\":\r\n                algoContext.set('Algorithm_Depth_First');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item>\r\n            <NavDropdown xs={1} title={<span className={className}>Algorithms</span>} id=\"DropdownAlgorithm\" onSelect={(eventKey) => DropdownAlgorithmHandler(eventKey)}\r\n                onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}\r\n            >\r\n                <NavDropdown.Item eventKey=\"Algorithm_Dijkstra\">Dijkstra's Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_APlus\">A+ Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Greedy_Best_First\">Greedy Best-First Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Swarm\">Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Convergent_Swarm\">Convergent Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Bidrectional_Swarm\">Bidirectional Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Breadth_First\">Breadth-First Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Depth_First\">Depth-First Search</NavDropdown.Item>\r\n            </NavDropdown>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default DropdownAlgorithm;","import { position } from '../Core';\n\nfunction Simple_Stair_Pattern() {\n    var walls = [];\n    var towardUp = true;\n    var x = position.rowSize;\n\n    for (var y = 0; y < position.colSize; y++) {\n        if (towardUp) {\n            x--;\n            if (x < 0) {\n                towardUp = false;\n                x = 1;\n            }\n        } else {\n            x++;\n            if (x >= position.rowSize) {\n                towardUp = true;\n                x = position.rowSize - 2;\n            }\n        }\n        walls.push([x, y]);\n    }\n    return walls;\n}\n\nexport default Simple_Stair_Pattern;","import React, { useContext } from 'react'\r\nimport { NavDropdown, Nav } from 'react-bootstrap';\r\nimport { sysStatusContext, speedContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\nimport Simple_Stair_Pattern from '../../Backend/Simple_Stair_Pattern';\r\nimport ButtonEvent from '../TableHelper/ButtonEvent';\r\n\r\nfunction DropdownMaze() {\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const [className, toggleHandler] = Colored();\r\n    const buttonEvent = ButtonEvent();\r\n    const speed = useContext(speedContext);\r\n\r\n    const DropdownMazeHandler = (eventKey) => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n        buttonEvent.ClearPath()\r\n        buttonEvent.ClearWalls()\r\n        switch (eventKey) {\r\n            case \"Maze_Recursive_Division\":\r\n                alert(\"Maze_Recursive_Division\");\r\n                break;\r\n            case \"Maze_Recursive_Division_vertical\":\r\n                alert(\"Maze_Recursive_Division_vertical\");\r\n                break;\r\n            case \"Maze_Recursive_Division_horizontal\":\r\n                alert(\"Maze_Recursive_Division_horizontal\");\r\n                break;\r\n            case \"Maze_Basic_Random\":\r\n                alert(\"Maze_Basic_Random\");\r\n                break;\r\n            case \"Maze_Basic_Weight_Maze\":\r\n                alert(\"Maze_Basic_Weight_Maze\");\r\n                break;\r\n            case \"Maze_Simple_stair_pattern\":\r\n                // alert(\"Maze_Simple_stair_pattern\");\r\n                buttonEvent.CreateMaze(Simple_Stair_Pattern(), speed.get[1]);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item>\r\n            <NavDropdown xs={1} title={<span className={className}>Mazes & Patterns</span>} id=\"DropdownMaze\" onSelect={DropdownMazeHandler}\r\n                onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}\r\n            >\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division\">Recursive Division</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division_vertical\">Recursive Division(vertical skew)</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division_horizontal\">Recursive Division(horizontal skew)</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Basic_Random\">Basic Random Maze</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Basic_Weight_Maze\">Basic Weight Maze</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Simple_stair_pattern\">Simple Stair Pattern</NavDropdown.Item>\r\n            </NavDropdown>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default DropdownMaze;","import React, { useState, useContext } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { sysStatusContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\n\r\nfunction NavLink({ names, handlers }) {\r\n    const [whichHandler, setWhichHandler] = useState(0);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const [className, toggleHandler] = Colored();\r\n\r\n    const localHandler = () => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        setWhichHandler(preWhichHandler => (preWhichHandler + 1) % handlers.length);\r\n        handlers[whichHandler]();\r\n    }\r\n\r\n    return (\r\n        <Nav.Item xs={1}>\r\n            <Nav.Link onClick={localHandler} className={className} onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}>{names[whichHandler]}</Nav.Link>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default NavLink\r\n","import { useState, useContext } from 'react';\nimport { sysStatusContext, algorithmContext } from '../Core';\nimport '../App.scss';\n\nconst Colored = () => {\n    const sysStatus = useContext(sysStatusContext);\n    const algoStatus = useContext(algorithmContext);\n    const [isHover, setIsHover] = useState(false);\n    const [className, setClassName] = useState(\"nav-link-default\");\n\n    const toggleHandler = () => {\n        if (isHover) {\n            setClassName(\"nav-link-default\");\n            setIsHover(false);\n        } else {\n            if (sysStatus.get !== \"IDLE\" || algoStatus.get === \"\" || algoStatus.get === \"Algorithm_Bidrectional_Swarm\") {\n                setClassName(\"nav-link-red\");\n            } else {\n                setClassName(\"nav-link-green\");\n            }\n            setIsHover(true);\n        }\n    }\n\n    return [className, toggleHandler];\n}\n\nexport default Colored\n","import React, { useState, useContext, useEffect } from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport { bombContext, sysStatusContext, algorithmContext } from '../../Core';\nimport Colored from '../../HOC/Colored_AddButton';\nimport { IsMount } from '../../Core/IsMount.js'\n\nfunction NavAddBomb({ names, handlers }) {\n    const [whichHandler, setWhichHandler] = useState(0);\n    const bomb = useContext(bombContext);\n    const sysStatus = useContext(sysStatusContext);\n    const algoContext = useContext(algorithmContext);\n    const [className, toggleHandler] = Colored();\n    const isMount = IsMount();\n\n    useEffect(() => {\n        if (isMount) return; // 防止第一次render也會跑進來執行\n\n        if (bomb.get === true) {\n            setWhichHandler(1);\n        } else {\n            setWhichHandler(0);\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [bomb])\n\n    useEffect(() => {\n        if (isMount) return;\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [whichHandler])\n\n    const localHandler = () => {\n        if (isMount) return;\n\n        if (sysStatus.get !== \"IDLE\" || algoContext.get === \"\" || algoContext.get === \"Algorithm_Bidrectional_Swarm\") {\n            return;\n        }\n\n        handlers[whichHandler]();\n    }\n\n\n    return (\n        <Nav.Item xs={1}>\n            <Nav.Link onClick={localHandler} className={className} onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}>{names[whichHandler]}</Nav.Link>\n        </Nav.Item>\n    )\n}\n\nexport default NavAddBomb\n","import { useRef, useEffect } from 'react';\n\nexport const IsMount = () => {\n    const isMount = useRef(true);\n\n    useEffect(() => {\n        isMount.current = false;\n    }, [])\n\n    return isMount.current;\n}\n\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { algorithmContext, sysStatusContext, speedContext } from '../../Core';\r\nimport ButtonEvent from '../TableHelper/ButtonEvent';\r\nimport BFS from '../../Backend/Bfs';\r\n\r\nconst NavButton = () => {\r\n\r\n    const [buttonName, setButtonName] = useState(\"Visualize !\");\r\n    const [myVariant, setMyVariant] = useState(\"\");\r\n    const algoContext = useContext(algorithmContext);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const speed = useContext(speedContext);\r\n    const buttonEvent = ButtonEvent();\r\n\r\n    useEffect(() => {\r\n        setMyVariant('success');\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        var algoName = \"\";\r\n        switch (algoContext.get) {\r\n            case \"Algorithm_Dijkstra\":\r\n                algoName = \"Dijkstra's\";\r\n                break;\r\n            case 'Algorithm_APlus':\r\n                algoName = \"A*\";\r\n                break;\r\n            case \"Algorithm_Greedy_Best_First\":\r\n                algoName = \"Greedy\";\r\n                break;\r\n            case \"Algorithm_Swarm\":\r\n                algoName = \"Swarm\";\r\n                break;\r\n            case \"Algorithm_Convergent_Swarm\":\r\n                algoName = \"Convergent Swarm\";\r\n                break;\r\n            case \"Algorithm_Bidrectional_Swarm\":\r\n                algoName = \"Bidrectional Swarm\";\r\n                break;\r\n            case \"Algorithm_Breadth_First\":\r\n                algoName = \"BFS\";\r\n                break;\r\n            case \"Algorithm_Depth_First\":\r\n                algoName = \"DFS\";\r\n                break;\r\n            default:\r\n                algoName = \"\";\r\n                break;\r\n        }\r\n        setButtonName(`Visualize ${algoName}!`);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [algoContext.get])\r\n\r\n    useEffect(() => {\r\n        if (sysStatus.get === 'RUNNING') {\r\n            setMyVariant('danger');\r\n        } else {\r\n            setMyVariant('success');\r\n        }\r\n    }, [sysStatus.get])\r\n\r\n\r\n    const handler = () => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        if (algoContext.get === \"\") {\r\n            setButtonName(\"Pick an Algorithm\");\r\n        } else {\r\n            buttonEvent.ClearPath();\r\n            switch (algoContext.get) {\r\n                case \"Algorithm_Dijkstra\":\r\n                    break;\r\n                case 'Algorithm_APlus':\r\n                    break;\r\n                case \"Algorithm_Greedy_Best_First\":\r\n                    break;\r\n                case \"Algorithm_Swarm\":\r\n                    break;\r\n                case \"Algorithm_Convergent_Swarm\":\r\n                    break;\r\n                case \"Algorithm_Bidrectional_Swarm\":\r\n                    break;\r\n                case \"Algorithm_Breadth_First\":\r\n                    BFS(buttonEvent.Start, speed.get[1]);\r\n                    break;\r\n                case \"Algorithm_Depth_First\":\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item xs={1}>\r\n            <Button id=\"navButton\" variant={myVariant} size=\"lg\" onClick={handler}>{buttonName}</Button>\r\n        </Nav.Item>\r\n    )\r\n};\r\n\r\nexport default NavButton\r\n","import React, { useState, useContext } from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport { sysStatusContext } from '../../Core';\nimport Colored from '../../HOC/Colored';\n\nfunction NavClearBoard({ names, handlers }) {\n    const [whichHandler, setWhichHandler] = useState(0);\n    const sysStatus = useContext(sysStatusContext);\n    const [className, toggleHandler] = Colored();\n\n    const localHandler = () => {\n        if (sysStatus.get !== \"IDLE\") {\n            return;\n        }\n\n        setWhichHandler(preWhichHandler => (preWhichHandler + 1) % handlers.length);\n        handlers[whichHandler]();\n    }\n\n    return (\n        <Nav.Item xs={1}>\n            <Nav.Link onClick={localHandler} className={className} onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}>{names[whichHandler]}</Nav.Link>\n        </Nav.Item>\n    )\n}\n\nexport default NavClearBoard\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport { sysStatusContext } from '../../Core';\r\nimport { speedContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\n\r\nfunction DropdownSpeed() {\r\n    const [title, setTitle] = useState('Average');\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const speed = useContext(speedContext);\r\n    const [className, toggleHandler] = Colored();\r\n\r\n    useEffect(() => {\r\n        setTitle(speed.get[0]);\r\n    }, [speed.get])\r\n\r\n\r\n    const DropdownSpeedHandler = (eventKey) => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Fast\":\r\n                speed.set(\"Fast\");\r\n                break;\r\n            case \"Average\":\r\n                speed.set(\"Average\");\r\n                break;\r\n            case \"Slow\":\r\n                speed.set(\"Slow\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <NavDropdown xs={1} title={<span className={className}>Speed: {title}</span>} id=\"DropdownSpeed\" onSelect={DropdownSpeedHandler}\r\n            onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}\r\n        >\r\n            <NavDropdown.Item eventKey=\"Fast\">Fast</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Average\">Average</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Slow\">Slow</NavDropdown.Item>\r\n        </NavDropdown>\r\n    )\r\n}\r\n\r\nexport default DropdownSpeed;","import React from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Logo from './HeaderHelper/Logo';\r\nimport DropdownAlgorithm from './HeaderHelper/DropdownAlgorithm';\r\nimport DropdownMaze from './HeaderHelper/DropdownMaze';\r\nimport NavLink from './HeaderHelper/NavLink';\r\nimport NavAddBomb from './HeaderHelper/NavAddBomb';\r\nimport NavButton from './HeaderHelper/NavButton';\r\nimport NavClearBoard from './HeaderHelper/NavClearBoard';\r\nimport DropdownSpeed from './HeaderHelper/DropdownSpeed';\r\nimport ButtonEvent from './TableHelper/ButtonEvent';\r\n\r\nfunction Header() {\r\n    const buttonEvent = ButtonEvent()\r\n\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"xl\" bg='dark' variant='dark'>\r\n            <Logo />\r\n            <Navbar.Toggle aria-controls=\"Collapse\" />\r\n            <Navbar.Collapse id=\"Collapse\" className='nvbar-collapse'>\r\n                <Nav className=\"nav-bar\">\r\n                    <DropdownAlgorithm />\r\n                    <DropdownMaze />\r\n                    <NavAddBomb names={[\"Add Bomb\", \"Remove Bomb\"]} handlers={[buttonEvent.Addbomb, buttonEvent.RemoveBomb]} />\r\n                    <NavButton />\r\n                    <NavClearBoard names={[\"Clear Board\"]} handlers={[buttonEvent.ClearBoard]} />\r\n                    <NavLink names={[\"Clear Walls & Weights\"]} handlers={[buttonEvent.ClearWalls]} />\r\n                    <NavLink names={[\"Clear Path\"]} handlers={[buttonEvent.ClearPath]} />\r\n                    <DropdownSpeed />\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Header\r\n","import { useContext } from 'react'\nimport { sysStatusContext, algorithmContext, speedContext } from '../../Core/index'\nimport { tableVar, touchContext, moveContext, updateContext, componentKind } from './TableIndex'\nimport { setTable } from './SetTable'\nimport { UpdateTable } from './UpdateTable'\nimport { WhichComponent } from './WhichComp'\nimport ButtonEvent from './ButtonEvent'\n\nfunction MouseEvent() {\n    const [touch, move, update] = [useContext(touchContext), useContext(moveContext), useContext(updateContext)]\n    const [algorithm, speed, sysStatus] = [useContext(algorithmContext), useContext(speedContext), useContext(sysStatusContext)]\n    const buttonEvent = ButtonEvent()\n\n    const MouseDownHandler = (e) => {\n        // console.log(\"MouseDownHandler \" + e.target.id)\n\n        if (sysStatus.get !== \"IDLE\") {\n            return\n        }\n\n        e.preventDefault()\n\n        tableVar.id = e.target.id\n        const whichComponent = WhichComponent(tableVar.id, touch)\n\n        if(whichComponent.type){\n            setTable(tableVar.id, whichComponent.rKind)\n            move.set(componentKind.wall)\n\n        }else{\n            move.set(whichComponent.kind)\n        }\n    }\n\n    const MouseUpHandler = (e) => {\n        // console.log(\"MouseUpHandler \" + e.target.id)\n\n        if (sysStatus.get !== \"IDLE\") {\n            return\n        }\n\n        move.set(\"\")\n\n        if(update.get && move.get !== \"\"){\n            UpdateTable(buttonEvent.Start, buttonEvent.ClearPath, algorithm, speed)\n        }\n    }\n\n    const OnMouseEnterHanlder = (e) => {\n        // console.log(\"OnMouseEnterHanlder \" + e.target.id)\n\n        if (sysStatus.get !== \"IDLE\") {\n            return\n        }\n\n        tableVar.newId = e.target.id\n        const whichOldComponent = WhichComponent(tableVar.id, touch)\n        const whichNewComponent = WhichComponent(tableVar.newId, touch)\n\n        if(move.get === componentKind.wall && whichNewComponent.type){\n            setTable(tableVar.newId, whichNewComponent.rKind)\n            tableVar.id = tableVar.newId\n\n        }else if(move.get !== componentKind.wall && move.get !== \"\" && whichNewComponent.type){\n            setTable(tableVar.id, whichOldComponent.touch)\n            touch.set({componentKind: whichOldComponent.kind, under: whichNewComponent.kind})\n            setTable(tableVar.newId, whichOldComponent.kind)\n            tableVar.id = tableVar.newId\n        }\n\n        if(update.get && move.get !== \"\"){\n            UpdateTable(buttonEvent.Start, buttonEvent.ClearPath, algorithm, speed)\n        }\n    }\n\n    return {MouseDownHandler, MouseUpHandler, OnMouseEnterHanlder}\n\n}\n\nexport default MouseEvent","import { useEffect } from 'react'\nimport MouseEvent from './MouseEvent'\nimport { tableVar, componentKind } from './TableIndex'\n\n\nfunction TableUI() {\n    const [rowSize, colSize, size] = [tableVar.rowSize, tableVar.colSize, tableVar.size]\n\n    const row = Array.from(Array(rowSize).keys())\n    const col = Array.from(Array(colSize).keys())\n\n    const mouesEvent = MouseEvent()\n    const [MouseDownHandler, MouseUpHandler, OnMouseEnterHanlder] = [mouesEvent.MouseDownHandler, mouesEvent.MouseUpHandler, mouesEvent.OnMouseEnterHanlder]\n\n    const createTable = row.map((rowIndex, index) => {\n        return ( \n            <tr key = {index} height={size}>\n                {col.map((colIndex, index) => {\n                    // console.log(rowIndex + \" \" + colIndex)\n                    return (\n                        <td id = {rowIndex * colSize + colIndex} key = {index} className = {componentKind.background} width={size} onMouseUp = {MouseUpHandler} onMouseDown = {MouseDownHandler} onMouseEnter = {OnMouseEnterHanlder}>\n                            {}\n                        </td>)}\n                    )}\n            </tr>)}\n        )\n\n    useEffect(() => {\n        document.getElementById((Math.floor(tableVar.rowSize / 2) * tableVar.colSize + Math.floor(tableVar.colSize / 4)).toString()).className = componentKind.start\n        document.getElementById((Math.floor(tableVar.rowSize / 2 + 1) * tableVar.colSize - Math.floor(tableVar.colSize / 4)).toString()).className = componentKind.end\n    }, [])\n    \n    \n      \n    return (\n        <div className = \"tablePadding\">\n            <table id = \"board\" align=\"center\" border=\"1\" cellSpacing=\"0\">\n                <tbody>\n                    {createTable}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default TableUI\n","import TableUI from './TableHelper/TableUI';\nimport { useContext, useEffect } from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { sysStatusContext } from '../Core';\n\nfunction Table() {  \n\tconst sysStatus = useContext(sysStatusContext);\n\n\tuseEffect(()=>{\n\t\tsetTimeout(()=>{sysStatus.set(\"IDLE\");}, 1000);\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [])\n\n\tif (sysStatus.get === \"LOADING\"){\n\t\treturn (<Spinner animation=\"border\" variant=\"warning\" />);\n\t}\n\telse{\n\t\treturn (\n\t        <div id = \"UI\">\n\t            <TableUI/>\n\t        </div>\n\t    )\n\t}\n}\n\nexport default Table\n","import { useState, useContext, useEffect } from 'react';\nimport { algorithmContext } from '../../Core';\n\nfunction Info() {\n\tconst [bannedBomb, setBannedBomb] = useState(\"\");\n\tconst [bannedBFSDFS, setBannedBFSDFS] = useState(\"\");\n\tconst algoContext = useContext(algorithmContext);\n\n\tuseEffect(() => {\n\t\tif (algoContext.get === \"Algorithm_Bidrectional_Swarm\") {\n\t\t\tsetBannedBomb(\"banned\");\n\t\t} else {\n\t\t\tsetBannedBomb(\"\");\n\t\t}\n\n\t\tif (algoContext.get === \"Algorithm_Breadth_First\" || algoContext.get === \"Algorithm_Depth_First\") {\n\t\t\tsetBannedBFSDFS(\"banned\");\n\t\t} else {\n\t\t\tsetBannedBFSDFS(\"\");\n\t\t}\n\t}, [algoContext.get])\n\n\treturn (\n\t\t<div id=\"mainInfo\">\n\t\t\t<ul>\n\t\t\t\t<li> <div className=\"Info-Start-Node\"></div>Start Node </li>\n\t\t\t\t<li> <div className=\"Info-End-Node\"></div>Target Node </li>\n\t\t\t\t<li className={bannedBomb}> <div className=\"Info-Bomb-Node\"></div>Bomb Node </li>\n\t\t\t\t<li className={bannedBFSDFS}> <div className=\"Info-Weight-Node\"></div>Weight Node </li>\n\t\t\t\t<li> <div className=\"Info-Unvisited-Node\"></div>Unvisited Node </li>\n\t\t\t\t<li> <div className=\"Info-Visited-Node\"></div><div className=\"Info-Visited1-Node\"></div>Visited Node </li>\n\t\t\t\t<li> <div className=\"Info-ShortestPathNode-Node\"></div>Shortest-Path Node </li>\n\t\t\t\t<li> <div className=\"Info-WallNode-Node\"></div>Wall Node </li>\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n\nexport default Info;","import {useState, useContext, useEffect} from 'react';\nimport { algorithmContext } from '../../Core';\n\nfunction AlgorithmDescriptor(){\n\tconst [algorithmName, setAlgorithmName] = useState('Pick an algorithm and visualize it!');\n    const [discription1, setDiscription1] = useState('');\n    const [discription2, setDiscription2] = useState('');\n\tconst algoContext = useContext(algorithmContext);\n\n\tuseEffect(() => {\n        var algoName = \"\";\n        var d1 = \"\";\n        var d2 = \"\";\n        switch (algoContext.get) {\n            case \"Algorithm_Dijkstra\":\n                algoName = \"Dijkstra's Algorithm\";\n                d1 = \"weighted\";\n                d2 = \"guarantees\";\n                break;\n            case 'Algorithm_APlus':\n                algoName = \"A* Search\";\n                d1 = \"weighted\";\n                d2 = \"guarantees\";\n                break;\n            case \"Algorithm_Greedy_Best_First\":\n                algoName = \"Greedy Best-first Search\";\n                d1 = \"weighted\";\n                d2 = \"does not guarantee\";\n                break;\n            case \"Algorithm_Swarm\":\n                algoName = \"Swarm Algorithm\";\n                d1 = \"weighted\";\n                d2 = \"does not guarantee\";\n                break;\n            case \"Algorithm_Convergent_Swarm\":\n                algoName = \"Convergent Swarm Algorithm\";\n                d1 = \"weighted\";\n                d2 = \"does not guarantee\";\n                break;\n            case \"Algorithm_Bidrectional_Swarm\":\n                algoName = \"Bidrectional Swarm Algorithm\";\n                d1 = \"weighted\";\n                d2 = \"does not guarantee\";\n                break;\n            case \"Algorithm_Breadth_First\":\n                algoName = \"Breath-first Search\";\n                d1 = \"unweighted\";\n                d2 = \"guarantee\";\n                break;\n            case \"Algorithm_Depth_First\":\n                algoName = \"Depth-first Search\";\n                d1 = \"unweighted\";\n                d2 = \"does not guarantee\";\n                break;\n            default:\n                algoName = \"Pick an algorithm and visualize it!\";\n                d1 = \"\";\n                d2 = \"\";\n                break;\n        }\n\n        setAlgorithmName(algoName);\n        setDiscription1(d1);\n        setDiscription2(d2);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [algoContext.get])\n\n    if (algoContext.get === \"\"){\n        return (\n            <div id=\"algorithmDescriptor\">\n                {algorithmName}\n            </div>\n        )\n    } else{\n        return (\n            <div id=\"algorithmDescriptor\">\n                {algorithmName} is <i><b>{discription1}</b></i> and <i><b>{discription2}</b></i> the shortest path!\n            </div>\n        )\n    }\n\t\n}\n\nexport default AlgorithmDescriptor;","import React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport data from '../../Resources/Data/Modalnfo.json';\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react'\n\nfunction IntroductionModal() {\n    const [pages, setPages] = useState(1);\n    const [show, setShow] = useState(true);\n    const [language, setLanguage] = useState(0);\n    const [checked, setChecked] = useState(true);\n    const maxPages = data.length;\n\n    const HandlePrevious = () => {\n        setPages(prePage => prePage - 1 >= 1 ? prePage - 1 : prePage);\n    }\n\n    const HandleNext = () => {\n        if (pages + 1 > maxPages) {\n            setShow(false);\n            return;\n        }\n        setPages(prePage => prePage + 1 <= maxPages ? prePage + 1 : prePage);\n    }\n\n    return (\n        <Modal show={show} size='xl' backdrop=\"static\" centered dialogClassName=\"Modal\">\n            <div className=\"ml-auto Modal-Page\">{`${pages}/${maxPages}`}</div>\n            <div className=\"Modal-Title\">{data[pages - 1][\"Title\"][language]}</div>\n\n            <Modal.Body className=\"Modal-Body\">\n                <p className=\"Modal-BodyText\">{data[pages - 1][\"Dialog\"][language]}</p>\n                <p className=\"Modal-BodyText1\">{data[pages - 1][\"Body\"][language]}</p>\n                {pages === 1 ? <div className=\"Logo\"></div> : null}\n                {pages === 2 ? <div className=\"ShortestPath\"></div> : null}\n                {pages === 3 ? <div className=\"Algorithm\"></div> : null}\n                {pages === 4 ? <div className=\"Maze\"></div> : null}\n                {pages === 5 ? <div className=\"WallWeight\"></div> : null}\n                {pages === 6 ? <div className=\"AddBomb\"></div> : null}\n                {pages === 7 ? <div className=\"StartDrag\"></div> : null}\n                {pages === 8 ? <div className=\"Other\"></div> : null}\n                {pages === 9 ? (language === 1 ? <p className=\"Modal-BodyText1\">本專案由 <a href=\"https://github.com/novayo\">novayo</a> 及 <a href=\"https://github.com/ChengTsungPao\">ChengTsungPao</a> 共同製作</p> : <p className=\"Modal-BodyText1\">This application made by <a href=\"https://github.com/novayo\">novayo</a> and <a href=\"https://github.com/ChengTsungPao\">ChengTsungPao</a>.</p>) : null}\n            </Modal.Body>\n\n            <Modal.Footer>\n                <Button className=\"mr-auto Button\" variant='outline-success' size=\"md\" onClick={() => setShow(false)}>Skip Tutorial</Button>\n                <BootstrapSwitchButton\n                    checked={checked}\n                    onlabel='En'\n                    onstyle='outline-info'\n                    offlabel='Ch'\n                    offstyle='outline-success'\n                    size=\"md\" // eslint-disable-next-line \n                    style='mr-auto' // 這裡會有怪怪的warning，所以加上上面的註解去除warning\n                    onChange={(checked) => {\n                        if (checked) {\n                            setLanguage(0);\n                        } else {\n                            setLanguage(1);\n                        }\n                        setChecked(pre => !pre);\n                    }}\n                />\n                <Button className=\"Button\" variant='outline-success' size=\"md\" onClick={() => HandlePrevious()}>Previous</Button>\n                <Button className=\"Button\" variant='outline-success' size=\"md\" onClick={() => HandleNext()}>Next</Button>\n            </Modal.Footer>\n        </Modal >\n    )\n}\n\nexport default IntroductionModal\n","import './App.scss';\nimport { useReducer } from 'react';\nimport Header from './Frontend/Header';\nimport { algorithmReducer, initialAlgorithm, algorithmContext } from './Core';\nimport { sysStatusReducer, initialsysStatus, sysStatusContext } from './Core';\nimport { bombContext, bombInitial, bombReducer } from './Core';\nimport { speedContext, speedInitial, speedReducer } from './Core';\nimport Table from './Frontend/Table';\nimport { touchReducer, touchInitial, touchContext } from './Frontend/TableHelper/TableIndex';\nimport { moveReducer, moveInitial, moveContext } from './Frontend/TableHelper/TableIndex';\nimport { updateReducer, updateInitial, updateContext } from './Frontend/TableHelper/TableIndex';\nimport Info from './Frontend/HeaderHelper/Info';\nimport AlgorithmDescriptor from './Frontend/HeaderHelper/AlgorithmDescriptor';\nimport IntroductionModal from './Frontend/HeaderHelper/IntroductionModal';\n\nfunction App() {\n  const [curAlgorithm, setCurAlgorithm] = useReducer(algorithmReducer, initialAlgorithm);\n  const [curSysStatus, setCurSysStatus] = useReducer(sysStatusReducer, initialsysStatus);\n  const [curBomb, setCurBomb] = useReducer(bombReducer, bombInitial);\n  const [curSpeed, setCurSpeed] = useReducer(speedReducer, speedInitial);\n  const [touch, setTouch] = useReducer(touchReducer, touchInitial)\n  const [move, setMove] = useReducer(moveReducer, moveInitial)\n  const [update, setUpdate] = useReducer(updateReducer, updateInitial)\n\n  return (\n    <div className=\"App\">\n      <IntroductionModal />\n      <updateContext.Provider value={{ get: update, set: setUpdate }}>\n        <moveContext.Provider value={{ get: move, set: setMove }}>\n          <touchContext.Provider value={{ get: touch, set: setTouch }}>\n            <speedContext.Provider value={{ get: curSpeed, set: setCurSpeed }}>\n              <bombContext.Provider value={{ get: curBomb, set: setCurBomb }}>\n                <sysStatusContext.Provider value={{ get: curSysStatus, set: setCurSysStatus }}>\n                  <algorithmContext.Provider value={{ get: curAlgorithm, set: setCurAlgorithm }}>\n                    <Header />\n                    <Info />\n                    <AlgorithmDescriptor />\n                    <Table />\n                  </algorithmContext.Provider>\n                </sysStatusContext.Provider>\n              </bombContext.Provider>\n            </speedContext.Provider>\n          </touchContext.Provider>\n        </moveContext.Provider>\n      </updateContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}