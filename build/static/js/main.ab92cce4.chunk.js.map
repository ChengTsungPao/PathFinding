{"version":3,"sources":["Core/index.js","Frontend/HeaderHelper/Logo.js","HOC/Colored.js","Frontend/HeaderHelper/DropdownAlgorithm.js","Frontend/HeaderHelper/DropdownMaze.js","Frontend/HeaderHelper/NavLink.js","Frontend/HeaderHelper/NavAddBomb.js","Frontend/TableHelper/TableIndex.js","Frontend/TableHelper/MouseEvent.js","Frontend/TableHelper/TableUI.js","Frontend/TableHelper/ButtonEvent.js","Frontend/HeaderHelper/NavButton.js","Backend/TestAlgorithm.js","Frontend/HeaderHelper/NavClearBoard.js","Frontend/HeaderHelper/DropdownSpeed.js","Frontend/Header.js","Frontend/Table.js","App.js","reportWebVitals.js","index.js"],"names":["sysStatusContext","React","createContext","initialsysStatus","sysStatusReducer","state","action","bombContext","bombInitial","bombReducer","speedContext","speedReducer","algorithmContext","algorithmReducer","logo","Navbar","Brand","href","className","src","process","width","height","variant","alt","Colored","sysStatus","useContext","useState","isHover","setIsHover","setClassName","get","DropdownAlgorithm","algoContext","toggleHandler","Nav","Item","NavDropdown","xs","title","id","onSelect","eventKey","set","DropdownAlgorithmHandler","onMouseEnter","onMouseLeave","DropdownMaze","alert","NavLink","names","handlers","whichHandler","setWhichHandler","Link","onClick","preWhichHandler","length","NavAddBomb","bomb","useEffect","tableContext","rowSize","Math","floor","window","screen","colSize","size","startInit","search","path","speed","picture","wall","start","end","background","clickButton","buttonKind","Init","AddBomb","RemoveBomb","ClearWalls","ClearBoard","ClearPath","MouseEvent","tableVarContext","setWall","setBomb","bombComponent","startComponent","endComponent","touch","setTouch","move","setMove","initialTable","Array","from","keys","index","tableColor","setTableColor","temp","slice","console","log","i","count","SearchAnimation","setInterval","clearInterval","ReactDOM","render","document","getElementById","setTimeout","PathAnimation","MouseDownHandler","e","preventDefault","target","parseInt","MouseUpHandler","OnMouseEnterHanlder","OnMouseOutHanlder","TableUI","row","col","mouesEvent","createTable","map","rowIndex","colIndex","bgcolor","onMouseUp","onMouseDown","onMouseOut","align","border","cellSpacing","ButtonEvent","Addbomb","Start","NavButton","buttonName","setButtonName","myVariant","setMyVariant","buttonEvent","algoName","Button","NavClearBoard","DropdownSpeed","setTitle","Header","collapseOnSelect","expand","bg","Logo","Toggle","aria-controls","Collapse","Table","App","useReducer","curAlgorithm","setCurAlgorithm","curSysStatus","setCurSysStatus","curBomb","setCurBomb","curSpeed","setCurSpeed","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.ab92cce4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n// 目前系統狀態\r\nexport const sysStatusContext = React.createContext();\r\nexport const initialsysStatus = \"IDLE\";\r\nexport const sysStatusReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'IDLE':\r\n            return 'IDLE';\r\n        case 'RUNNING':\r\n            return 'RUNNING';\r\n        default:\r\n            return initialsysStatus;\r\n    }\r\n}\r\n\r\n// Bomb status\r\nexport const bombContext = React.createContext();\r\nexport const bombInitial = false;\r\nexport const bombReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'True':\r\n            return true;\r\n        case 'False':\r\n            return false;\r\n        default:\r\n            return bombInitial\r\n    }\r\n}\r\n\r\n// Speed\r\nexport const speedContext = React.createContext();\r\nexport const speedInitial = \"average\";\r\nexport const speedReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'Fast':\r\n            return \"Fast\";\r\n        case 'Average':\r\n            return \"Average\";\r\n        case 'Slow':\r\n            return \"Slow\";\r\n        default:\r\n            return bombInitial\r\n    }\r\n}\r\n\r\n// 目前系統是哪種演算法\r\nexport const algorithmContext = React.createContext();\r\nexport const initialAlgorithm = \"\";\r\nexport const algorithmReducer = (state, action) => {\r\n    switch (action) {\r\n        case 'Algorithm_Dijkstra':\r\n            return 'Algorithm_Dijkstra';\r\n        case 'Algorithm_APlus':\r\n            return 'Algorithm_APlus';\r\n        case \"Algorithm_Greedy_Best_First\":\r\n            return 'Algorithm_Greedy_Best_First';\r\n        case \"Algorithm_Swarm\":\r\n            return 'Algorithm_Swarm';\r\n        case \"Algorithm_Convergent_Swarm\":\r\n            return 'Algorithm_Convergent_Swarm';\r\n        case \"Algorithm_Bidrectional_Swarm\":\r\n            return 'Algorithm_Bidrectional_Swarm';\r\n        case \"Algorithm_Breadth_First\":\r\n            return 'Algorithm_Breadth_First';\r\n        case \"Algorithm_Depth_First\":\r\n            return 'Algorithm_Depth_First';\r\n        default:\r\n            return initialAlgorithm;\r\n    }\r\n}","import React from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\n\r\nfunction logo() {\r\n    return (\r\n        <Navbar.Brand href=\"/PathingFinding/\" className='Navbar-logo'>\r\n            <img\r\n                src={process.env.PUBLIC_URL + '/logo.png'} // 取得public資料夾路徑\r\n                width=\"50\"\r\n                height=\"50\"\r\n                className='d-inline-block'\r\n                variant='test'\r\n                alt='Logo'\r\n            /> {' '}\r\n                    Path-Finding\r\n        </Navbar.Brand>\r\n    )\r\n}\r\n\r\nexport default logo\r\n","import { useState, useContext } from 'react';\nimport { sysStatusContext } from '../Core';\nimport '../App.scss';\n\nconst Colored = () => {\n    const sysStatus = useContext(sysStatusContext);\n    const [isHover, setIsHover] = useState(false);\n    const [className, setClassName] = useState(\"nav-link-default\");\n\n    const toggleHandler = () => {\n        if (isHover) {\n            setClassName(\"nav-link-default\");\n            setIsHover(false);\n        } else {\n            if (sysStatus.get !== \"IDLE\") {\n                setClassName(\"nav-link-red\");\n            } else {\n                setClassName(\"nav-link-green\");\n            }\n            setIsHover(true);\n        }\n    }\n\n    return [className, toggleHandler];\n}\n\nexport default Colored\n","import React, { useContext } from 'react';\r\nimport { NavDropdown, Nav } from 'react-bootstrap';\r\nimport { algorithmContext, sysStatusContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\n\r\nfunction DropdownAlgorithm() {\r\n    const algoContext = useContext(algorithmContext);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const [className, toggleHandler] = Colored();\r\n\r\n    const DropdownAlgorithmHandler = (eventKey) => {\r\n\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Algorithm_Dijkstra\":\r\n                algoContext.set('Algorithm_Dijkstra');\r\n                break;\r\n            case \"Algorithm_APlus\":\r\n                algoContext.set('Algorithm_APlus');\r\n                break;\r\n            case \"Algorithm_Greedy_Best_First\":\r\n                algoContext.set('Algorithm_Greedy_Best_First');\r\n                break;\r\n            case \"Algorithm_Swarm\":\r\n                algoContext.set('Algorithm_Swarm');\r\n                break;\r\n            case \"Algorithm_Convergent_Swarm\":\r\n                algoContext.set('Algorithm_Convergent_Swarm');\r\n                break;\r\n            case \"Algorithm_Bidrectional_Swarm\":\r\n                algoContext.set('Algorithm_Bidrectional_Swarm');\r\n                break;\r\n            case \"Algorithm_Breadth_First\":\r\n                algoContext.set('Algorithm_Breadth_First');\r\n                break;\r\n            case \"Algorithm_Depth_First\":\r\n                algoContext.set('Algorithm_Depth_First');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item>\r\n            <NavDropdown xs={1} title={<span className={className}>Algorithms</span>} id=\"DropdownAlgorithm\" onSelect={(eventKey) => DropdownAlgorithmHandler(eventKey)}\r\n                onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}\r\n            >\r\n                <NavDropdown.Item eventKey=\"Algorithm_Dijkstra\">Dijkstra's Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_APlus\">A+ Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Greedy_Best_First\">Greedy Best-First Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Swarm\">Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Convergent_Swarm\">Convergent Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Bidrectional_Swarm\">Bidirectional Swarm Algorithm</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Breadth_First\">Breadth-First Search</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Algorithm_Depth_First\">Depth-First Search</NavDropdown.Item>\r\n            </NavDropdown>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default DropdownAlgorithm;","import React, { useContext } from 'react'\r\nimport { NavDropdown, Nav } from 'react-bootstrap';\r\nimport { sysStatusContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\n\r\nfunction DropdownMaze() {\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const [className, toggleHandler] = Colored();\r\n\r\n    const DropdownMazeHandler = (eventKey) => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Maze_Recursive_Division\":\r\n                alert(\"Maze_Recursive_Division\");\r\n                break;\r\n            case \"Maze_Recursive_Division_vertical\":\r\n                alert(\"Maze_Recursive_Division_vertical\");\r\n                break;\r\n            case \"Maze_Recursive_Division_horizontal\":\r\n                alert(\"Maze_Recursive_Division_horizontal\");\r\n                break;\r\n            case \"Maze_Basic_Random\":\r\n                alert(\"Maze_Basic_Random\");\r\n                break;\r\n            case \"Maze_Basic_Weight_Maze\":\r\n                alert(\"Maze_Basic_Weight_Maze\");\r\n                break;\r\n            case \"Maze_Simple_stair_pattern\":\r\n                alert(\"Maze_Simple_stair_pattern\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item>\r\n            <NavDropdown xs={1} title={<span className={className}>Mazes & Patterns</span>} id=\"DropdownMaze\" onSelect={DropdownMazeHandler}\r\n                onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}\r\n            >\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division\">Recursive Division</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division_vertical\">Recursive Division(vertical skew)</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Recursive_Division_horizontal\">Recursive Division(horizontal skew)</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Basic_Random\">Basic Random Maze</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Basic_Weight_Maze\">Basic Weight Maze</NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"Maze_Simple_stair_pattern\">Simple Stair Pattern</NavDropdown.Item>\r\n            </NavDropdown>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default DropdownMaze;","import React, { useState, useContext } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { sysStatusContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\n\r\nfunction NavLink({ names, handlers }) {\r\n    const [whichHandler, setWhichHandler] = useState(0);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const [className, toggleHandler] = Colored();\r\n\r\n    const localHandler = () => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        setWhichHandler(preWhichHandler => (preWhichHandler + 1) % handlers.length);\r\n        handlers[whichHandler]();\r\n    }\r\n\r\n    return (\r\n        <Nav.Item xs={1}>\r\n            <Nav.Link onClick={localHandler} className={className} onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}>{names[whichHandler]}</Nav.Link>\r\n        </Nav.Item>\r\n    )\r\n}\r\n\r\nexport default NavLink\r\n","import React, { useState, useContext, useEffect } from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport { bombContext, sysStatusContext } from '../../Core';\nimport Colored from '../../HOC/Colored';\n\nfunction NavAddBomb({ names, handlers }) {\n    const [whichHandler, setWhichHandler] = useState(0);\n    const bomb = useContext(bombContext);\n    const sysStatus = useContext(sysStatusContext);\n    const [className, toggleHandler] = Colored();\n\n\n    useEffect(() => {\n\n        if (bomb.get === true) {\n            setWhichHandler(1);\n        } else {\n            setWhichHandler(0);\n        }\n\n    }, [bomb])\n\n    const localHandler = () => {\n\n        if (sysStatus.get !== \"IDLE\") {\n            return;\n        }\n\n        if (bomb.get === true) {\n            bomb.set(\"False\");\n            setWhichHandler(1);\n        } else {\n            bomb.set(\"True\");\n            setWhichHandler(0);\n        }\n\n        handlers[whichHandler]();\n    }\n\n    return (\n        <Nav.Item xs={1}>\n            <Nav.Link onClick={localHandler} className={className} onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}>{names[whichHandler]}</Nav.Link>\n        </Nav.Item>\n    )\n}\n\nexport default NavAddBomb\n","import { createContext } from 'react'\n\n\nexport const tableContext = createContext(\n    {\n        rowSize: Math.floor(window.screen.height / 30) - 7, \n        colSize: Math.floor(window.screen.width / 30), \n        size: 30,\n        startInit: \"InitTable\", \n        search: \"init\",\n        path: \"init\",\n        speed: 500,\n        picture: {wall: \"#0000E6\", bomb: \"red\", start: \"#E69500\", end: \"#E000E0\", background: \"white\", search: \"#26FFFF\", path: \"#F0F000\"},\n        clickButton: \"init\",\n        buttonKind: {Init: \"init\", AddBomb: \"AddBomb\", RemoveBomb: \"RemoveBomb\", ClearWalls: \"ClearWalls\", ClearBoard: \"ClearBoard\", start: \"start\", ClearPath: \"ClearPath\"}\n    }\n)\n\n\n  ","import { useState, useContext, useEffect } from 'react'\nimport { tableContext } from './TableIndex'\nimport ReactDOM from 'react-dom'\nimport TableUI from './TableUI';\n\n\nfunction MouseEvent() {\n    const tableVarContext = useContext(tableContext)\n    const [rowSize, colSize] = [tableVarContext.rowSize, tableVarContext.colSize]\n    const picture = tableVarContext.picture\n\n    const [wall, setWall] = useState(false)\n    const [bomb, setBomb] = useState(false)\n    const [touch, setTouch] = useState({bombComponent: false, startComponent: false, endComponent: false})\n    const [move, setMove] = useState({bombComponent: false, startComponent: false, endComponent: false})\n\n    const initialTable = Array.from(Array(rowSize * colSize).keys(), index => {\n        if(index === Math.floor(rowSize / 2) * colSize + Math.floor(colSize / 4)){\n            return picture.start\n        }else if(index === Math.floor(rowSize / 2 + 1) * colSize - Math.floor(colSize / 4)){\n            return picture.end\n        }else{\n            return picture.background\n        }\n    })\n    const [tableColor, setTableColor] = useState(initialTable)\n    var temp = tableColor.slice()\n\n    function SearchAnimation(search, speed, count) { \n        const SearchAnimation = setInterval(() => {\n            if(count === search.length){\n                clearInterval(SearchAnimation)\n            }else{\n                for(var i = 0;i < search[count].length;i++){\n                    temp[search[count][i][0] * tableVarContext.colSize + search[count][i][1]] = picture.search\n                }\n                setTableColor(temp)\n            }\n            count += 1\n            ReactDOM.render(\n                <TableUI />,\n                document.getElementById('UI')\n            )\n        }, speed)\n    }\n\n    function PathAnimation(path, speed, count) {         \n        const PathAnimation = setInterval(() => {\n            if(count === path.length){\n                clearInterval(PathAnimation)\n            }else{\n                temp[path[count][0] * tableVarContext.colSize + path[count][1]] = picture.path\n                setTableColor(temp)\n            }\n            count += 1\n            ReactDOM.render(\n                <TableUI />,\n                document.getElementById('UI')\n            )\n        }, speed)\n    }\n\n    useEffect(() => {\n        console.log(\"ButtonHanlder\")\n        if(bomb === false && tableVarContext.clickButton === tableVarContext.buttonKind.AddBomb){\n            console.log(\"AddBomb\")\n            setBomb(true)\n            temp[Math.floor(rowSize / 2) * colSize + Math.floor(colSize / 2)] = picture.bomb\n            setTableColor(temp)\n            tableVarContext.clickButton = \"\"\n\n        }else if(bomb && tableVarContext.clickButton === tableVarContext.buttonKind.RemoveBomb){\n            console.log(\"RemoveBomb\")\n            for(var i = 0; i < rowSize * colSize;i++){\n                if(temp[i] === picture.bomb){\n                    temp[i] = picture.background\n                }\n            }\n            setBomb(false)\n            setTableColor(temp)\n            tableVarContext.clickButton = \"\"\n\n        }else if(tableVarContext.clickButton === tableVarContext.buttonKind.ClearWalls){\n            console.log(\"ClearWall\")\n            for(var i = 0; i < rowSize * colSize;i++){\n                if(temp[i] === picture.wall){\n                    temp[i] = picture.background\n                }\n            }\n            setTableColor(temp)\n            setTouch(false)\n            tableVarContext.clickButton = \"\"\n\n        }else if(tableVarContext.clickButton === tableVarContext.buttonKind.ClearBoard){\n            console.log(\"ClearBoard\")\n            setTableColor(initialTable)\n            setBomb(false)\n            setTouch(false)\n            tableVarContext.clickButton = \"\"\n\n        }else if(tableVarContext.clickButton === tableVarContext.buttonKind.start){\n            console.log(\"Start\")\n            const [search, path, speed] = [tableVarContext.search, tableVarContext.path, tableVarContext.speed]\n            tableVarContext.startInit = temp.slice()\n            var count = 0\n            SearchAnimation(search, speed, count)\n            setTimeout(() => {PathAnimation(path, speed, count)}, speed * (search.length + 1))\n            tableVarContext.clickButton = \"\"\n\n        }else if(tableVarContext.clickButton === tableVarContext.buttonKind.ClearPath){\n            console.log(\"ClearPath\")\n            setTableColor(tableVarContext.startInit)\n            tableVarContext.clickButton = \"\"\n\n        }else if(tableVarContext.clickButton === tableVarContext.buttonKind.Init){\n            tableVarContext.clickButton = \"\"\n            ReactDOM.render(\n                <TableUI />,\n                document.getElementById('UI')\n            )\n        }\n    }, [tableVarContext.clickButton])\n\n    const MouseUpHandler = (e) => {\n        console.log(\"MouseUpHandler \" + e.target.id)\n        if(wall){\n            setWall(false)\n        }else{\n            if(temp[parseInt(e.target.id)] === picture.bomb){\n                setMove({...move, bombComponent: false})\n            }else if(temp[parseInt(e.target.id)] === picture.start){\n                setMove({...move, startComponent: false})\n            }else{\n                setMove({...move, endComponent: false})\n            }\n        }\n    }\n\n    const MouseDownHandler = (e) => {\n        e.preventDefault()\n        console.log(\"ClickDownHandler \" + e.target.id)\n        if(temp[parseInt(e.target.id)] !== picture.bomb && temp[parseInt(e.target.id)] !== picture.start && temp[parseInt(e.target.id)] !== picture.end){\n            setWall(true)\n            if(temp[parseInt(e.target.id)] === picture.background){\n                temp[parseInt(e.target.id)] = picture.wall\n            }else{\n                temp[parseInt(e.target.id)] = picture.background\n            }\n            setTableColor(temp)\n        }else{\n            if(temp[parseInt(e.target.id)] === picture.bomb){\n                setMove({...move, bombComponent: true})\n            }else if(temp[parseInt(e.target.id)] === picture.start){\n                setMove({...move, startComponent: true})\n            }else{\n                setMove({...move, endComponent: true})\n            }\n        }\n    }\n\n    const OnMouseEnterHanlder = (e) => {\n        console.log(\"OnMouseEnterHanlder \" + e.target.id)\n        if(wall && temp[parseInt(e.target.id)] !== picture.bomb && temp[parseInt(e.target.id)] !== picture.start && temp[parseInt(e.target.id)] !== picture.end){\n            if(temp[parseInt(e.target.id)] === picture.wall){\n                temp[parseInt(e.target.id)] = picture.background\n            }else{\n                temp[parseInt(e.target.id)] = picture.wall\n            }\n            setTableColor(temp)\n        }else{\n            if(move.bombComponent && temp[parseInt(e.target.id)] !== picture.start && temp[parseInt(e.target.id)] !== picture.end){\n                if(temp[parseInt(e.target.id)] === picture.wall){\n                    setTouch({...touch, bombComponent: true})\n                }else{\n                    setTouch({...touch, bombComponent: false})\n                }\n                temp[parseInt(e.target.id)] = picture.bomb\n                setTableColor(temp)\n            }else if(move.startComponent && temp[parseInt(e.target.id)] !== picture.bomb && temp[parseInt(e.target.id)] !== picture.end){\n                if(temp[parseInt(e.target.id)] === picture.wall){\n                    setTouch({...touch, startComponent: true})\n                }else{\n                    setTouch({...touch, startComponent: false})\n                }\n                temp[parseInt(e.target.id)] = picture.start\n                setTableColor(temp)\n            }else if(move.endComponent && temp[parseInt(e.target.id)] !== picture.bomb && temp[parseInt(e.target.id)] !== picture.start){\n                if(temp[parseInt(e.target.id)] === picture.wall){\n                    setTouch({...touch, endComponent: true})\n                }else{\n                    setTouch({...touch, endComponent: false})\n                }\n                temp[parseInt(e.target.id)] = picture.end\n                setTableColor(temp)\n            }\n        }\n    }\n\n    const OnMouseOutHanlder = (e) => {\n        console.log(\"OnMouseOutHanlder \" + e.target.id)\n        if(wall === false){\n            if(move.bombComponent && temp[parseInt(e.target.id)] !== picture.start && temp[parseInt(e.target.id)] !== picture.end){\n                if(touch.bombComponent){\n                    temp[parseInt(e.target.id)] = picture.wall\n                }else{\n                    temp[parseInt(e.target.id)] = picture.background\n                }\n                setTableColor(temp)\n            }else if(move.startComponent && temp[parseInt(e.target.id)] !== picture.bomb && temp[parseInt(e.target.id)] !== picture.end){\n                if(touch.startComponent){\n                    temp[parseInt(e.target.id)] = picture.wall\n                }else{\n                    temp[parseInt(e.target.id)] = picture.background\n                }\n                setTableColor(temp)\n            }else if(move.endComponent && temp[parseInt(e.target.id)] !== picture.bomb && temp[parseInt(e.target.id)] !== picture.start){\n                if(touch.endComponent){\n                    temp[parseInt(e.target.id)] = picture.wall\n                }else{\n                    temp[parseInt(e.target.id)] = picture.background\n                }\n                setTableColor(temp)\n            }\n        }\n    }\n\n    return {MouseDownHandler, MouseUpHandler, OnMouseEnterHanlder, OnMouseOutHanlder, tableColor}\n\n}\n\nexport default MouseEvent\n\n\n","import React, { useContext } from 'react'\nimport MouseEvent from './MouseEvent'\nimport { tableContext } from './TableIndex'\n\n\nfunction TableUI() {\n    const tableVarContext = useContext(tableContext)\n    const [rowSize, colSize, size] = [tableVarContext.rowSize, tableVarContext.colSize, tableVarContext.size]\n\n    const row = Array.from(Array(rowSize).keys())\n    const col = Array.from(Array(colSize).keys())\n\n    const mouesEvent = MouseEvent()\n    const [MouseDownHandler, MouseUpHandler, OnMouseEnterHanlder, OnMouseOutHanlder, tableColor] = [mouesEvent.MouseDownHandler, mouesEvent.MouseUpHandler, mouesEvent.OnMouseEnterHanlder, mouesEvent.OnMouseOutHanlder, mouesEvent.tableColor]\n\n    const createTable = row.map((rowIndex, index) => {\n        return ( \n            <tr key = {index} height={size}>\n                {col.map((colIndex, index) => {\n                    // console.log(rowIndex + \" \" + colIndex)\n                    return (\n                        <td id = {rowIndex * colSize + colIndex} key = {index} bgcolor = {tableColor[rowIndex * colSize + colIndex]} width={size} onMouseUp = {MouseUpHandler} onMouseDown = {MouseDownHandler} onMouseEnter = {OnMouseEnterHanlder} onMouseOut = {OnMouseOutHanlder}>\n                            {}\n                        </td>)}\n                    )}\n            </tr>)}\n        )\n      \n    return (\n        <div>\n            <table id = \"board\" align=\"center\" border=\"1\" cellSpacing=\"0\" >\n                <tbody>\n                    {createTable}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default TableUI\n","import { useContext } from 'react'\nimport TableUI from './TableUI';\nimport { tableContext } from './TableIndex'\nimport ReactDOM from 'react-dom'\n\n\nfunction ButtonEvent() {\n    const tableVarContext = useContext(tableContext)\n\n    const Addbomb = () => {\n        tableVarContext.clickButton = tableVarContext.buttonKind.AddBomb\n        ReactDOM.render(\n            <TableUI />,\n            document.getElementById('UI')\n        )\n    }\n\n    const RemoveBomb = () => {\n        tableVarContext.clickButton = tableVarContext.buttonKind.RemoveBomb\n        ReactDOM.render(\n            <TableUI />,\n            document.getElementById('UI')\n        )\n    }\n\n    const ClearWalls = () => {\n        tableVarContext.clickButton = tableVarContext.buttonKind.ClearWalls\n        ReactDOM.render(\n            <TableUI />,\n            document.getElementById('UI')\n        )\n    }\n\n    const ClearBoard = () => {\n        tableVarContext.clickButton = tableVarContext.buttonKind.ClearBoard\n        ReactDOM.render(\n            <TableUI />,\n            document.getElementById('UI')\n        )\n    }\n\n    const Start = (search, path, speed) => (e) => {\n        tableVarContext.search = search\n        tableVarContext.path = path\n        tableVarContext.speed = speed\n        tableVarContext.clickButton = tableVarContext.buttonKind.start\n        ReactDOM.render(\n            <TableUI />,\n            document.getElementById('UI')\n        )\n    }\n\n    const ClearPath = () => {\n        tableVarContext.clickButton = tableVarContext.buttonKind.ClearPath\n        ReactDOM.render(\n            <TableUI />,\n            document.getElementById('UI')\n        )\n    }\n\n    return { Addbomb, RemoveBomb, ClearWalls, ClearBoard, Start, ClearPath }\n}\n\nexport default ButtonEvent\n\n\n\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { algorithmContext, sysStatusContext } from '../../Core';\r\nimport ButtonEvent from '../TableHelper/ButtonEvent';\r\nimport { TestAlgorithm } from '../../Backend/TestAlgorithm';\r\n\r\nconst NavButton = () => {\r\n\r\n    const [buttonName, setButtonName] = useState(\"Visualize !\");\r\n    const [myVariant, setMyVariant] = useState(\"\");\r\n    const algoContext = useContext(algorithmContext);\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const buttonEvent = ButtonEvent();\r\n    const [search, path, speed] = TestAlgorithm();\r\n\r\n    useEffect(() => {\r\n        setMyVariant('success');\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        var algoName = \"\";\r\n        switch (algoContext.get) {\r\n            case \"Algorithm_Dijkstra\":\r\n                algoName = \"Dijkstra's\";\r\n                break;\r\n            case 'Algorithm_APlus':\r\n                algoName = \"A*\";\r\n                break;\r\n            case \"Algorithm_Greedy_Best_First\":\r\n                algoName = \"Greedy\";\r\n                break;\r\n            case \"Algorithm_Swarm\":\r\n                algoName = \"Swarm\";\r\n                break;\r\n            case \"Algorithm_Convergent_Swarm\":\r\n                algoName = \"Convergent Swarm\";\r\n                break;\r\n            case \"Algorithm_Bidrectional_Swarm\":\r\n                algoName = \"Bidrectional Swarm\";\r\n                break;\r\n            case \"Algorithm_Breadth_First\":\r\n                algoName = \"BFS\";\r\n                break;\r\n            case \"Algorithm_Depth_First\":\r\n                algoName = \"DFS\";\r\n                break;\r\n            default:\r\n                algoName = \"\";\r\n                break;\r\n        }\r\n\r\n        setButtonName(`Visualize ${algoName}!`);\r\n    }, [algoContext.get])\r\n\r\n    const resetButton = () => {\r\n        setMyVariant('success');\r\n        sysStatus.set(\"IDLE\");\r\n    }\r\n\r\n    const handler = () => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        if (algoContext.get === \"\") {\r\n            setButtonName(\"Pick an Algorithm\");\r\n        } else {\r\n            sysStatus.set(\"RUNNING\");\r\n            setMyVariant('danger');\r\n            buttonEvent.Start(search, path, speed);\r\n            setTimeout(() => resetButton(), 10000);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Item xs={1}>\r\n            <Button id=\"navButton\" variant={myVariant} size=\"lg\" onClick={handler}>{buttonName}</Button>\r\n        </Nav.Item>\r\n    )\r\n};\r\n\r\nexport default NavButton\r\n","export const TestAlgorithm = () => {\n    const [search, path, speed] = [[[[1, 2], [2, 2], [3, 2], [4, 2], [5, 2], [6, 2], [7, 2], [8, 2], [9, 2], [10, 2]],\n    [[1, 3], [2, 3], [3, 3], [4, 3], [5, 3], [6, 3], [7, 3], [8, 3], [9, 3], [10, 3]],\n    [[1, 4], [2, 4], [3, 4], [4, 4], [5, 4], [6, 4], [7, 4], [8, 4], [9, 4], [10, 4]],\n    [[1, 5], [2, 5], [3, 5], [4, 5], [5, 5], [6, 5], [7, 5], [8, 5], [9, 5], [10, 5]],\n    [[1, 6], [2, 6], [3, 6], [4, 6], [5, 6], [6, 6], [7, 6], [8, 6], [9, 6], [10, 6]]]\n        ,\n    [[1, 2], [2, 2], [3, 2], [4, 2], [5, 2], [6, 2], [7, 2], [8, 2], [9, 2], [10, 2]]\n        ,\n        50\n    ]\n\n    return [search, path, speed];\n}\n\n// 開發中，有待討論\nexport const DFS = () => {\n    const startPos = [0, 0];\n    const bombPos = [10, 10];\n    const endPos = [20, 20];\n    const walls = []; // get walls\n\n    let wallSet = new Set(walls);\n    let search = [];\n    let path = [];\n\n    function doDfs(startPos, bombPos, endPos, wallSet, isFoundBomb) {\n\n        if (isFoundBomb) {\n            if (startPos === endPos) {\n                return\n            }\n        }\n\n        doDfs();\n    }\n\n    if (bombPos !== null) {\n\n    }\n\n\n}","import React, { useState, useContext } from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport { sysStatusContext } from '../../Core';\nimport { bombContext } from '../../Core';\nimport Colored from '../../HOC/Colored';\n\nfunction NavClearBoard({ names, handlers }) {\n    const [whichHandler, setWhichHandler] = useState(0);\n    const sysStatus = useContext(sysStatusContext);\n    const bomb = useContext(bombContext);\n    const [className, toggleHandler] = Colored();\n\n    const localHandler = () => {\n        if (sysStatus.get !== \"IDLE\") {\n            return;\n        }\n\n        setWhichHandler(preWhichHandler => (preWhichHandler + 1) % handlers.length);\n        handlers[whichHandler]();\n        bomb.set(\"False\");\n    }\n\n    return (\n        <Nav.Item xs={1}>\n            <Nav.Link onClick={localHandler} className={className} onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}>{names[whichHandler]}</Nav.Link>\n        </Nav.Item>\n    )\n}\n\nexport default NavClearBoard\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport { sysStatusContext } from '../../Core';\r\nimport { speedContext } from '../../Core';\r\nimport Colored from '../../HOC/Colored';\r\n\r\nfunction DropdownSpeed() {\r\n    const [title, setTitle] = useState('Average');\r\n    const sysStatus = useContext(sysStatusContext);\r\n    const speed = useContext(speedContext);\r\n    const [className, toggleHandler] = Colored();\r\n\r\n    useEffect(() => {\r\n        setTitle(speed.get);\r\n    }, [speed.get])\r\n\r\n    const DropdownSpeedHandler = (eventKey) => {\r\n        if (sysStatus.get !== \"IDLE\") {\r\n            return;\r\n        }\r\n\r\n        switch (eventKey) {\r\n            case \"Fast\":\r\n                speed.set(\"Fast\");\r\n                break;\r\n            case \"Average\":\r\n                speed.set(\"Average\");\r\n                break;\r\n            case \"Slow\":\r\n                speed.set(\"Slow\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <NavDropdown xs={1} title={<span className={className}>Speed: {title}</span>} id=\"DropdownSpeed\" onSelect={DropdownSpeedHandler}\r\n            onMouseEnter={toggleHandler} onMouseLeave={toggleHandler}\r\n        >\r\n            <NavDropdown.Item eventKey=\"Fast\">Fast</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Average\">Average</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"Slow\">Slow</NavDropdown.Item>\r\n        </NavDropdown>\r\n    )\r\n}\r\n\r\nexport default DropdownSpeed;","import React from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Logo from './HeaderHelper/Logo';\r\nimport DropdownAlgorithm from './HeaderHelper/DropdownAlgorithm';\r\nimport DropdownMaze from './HeaderHelper/DropdownMaze';\r\nimport NavLink from './HeaderHelper/NavLink';\r\nimport NavAddBomb from './HeaderHelper/NavAddBomb';\r\nimport NavButton from './HeaderHelper/NavButton';\r\nimport NavClearBoard from './HeaderHelper/NavClearBoard';\r\nimport DropdownSpeed from './HeaderHelper/DropdownSpeed';\r\nimport ButtonEvent from './TableHelper/ButtonEvent';\r\n\r\nfunction Header() {\r\n    const buttonEvent = ButtonEvent()\r\n\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"xl\" bg='dark' variant='dark'>\r\n            <Logo />\r\n            <Navbar.Toggle aria-controls=\"Collapse\" />\r\n            <Navbar.Collapse id=\"Collapse\" className='nvbar-collapse'>\r\n                <Nav className=\"nav-bar\">\r\n                    <DropdownAlgorithm />\r\n                    <DropdownMaze />\r\n                    <NavAddBomb names={[\"Add Bomb\", \"Remove Bomb\"]} handlers={[buttonEvent.Addbomb, buttonEvent.RemoveBomb]} />\r\n                    <NavButton />\r\n                    <NavClearBoard names={[\"Clear Board\"]} handlers={[buttonEvent.ClearBoard]} />\r\n                    <NavLink names={[\"Clear Walls & Weights\"]} handlers={[buttonEvent.ClearWalls]} />\r\n                    <NavLink names={[\"Clear Path\"]} handlers={[buttonEvent.ClearPath]} />\r\n                    <DropdownSpeed />\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Header\r\n","import TableUI from './TableHelper/TableUI'\n\nfunction Table() {    \n    return (\n        <div id = \"UI\">\n            <TableUI/>\n        </div>\n    )\n}\n\nexport default Table\n","import './App.scss';\nimport { algorithmReducer, initialAlgorithm, algorithmContext } from './Core';\nimport { sysStatusReducer, initialsysStatus, sysStatusContext } from './Core';\nimport { bombContext, bombInitial, bombReducer } from './Core';\nimport { speedContext, speedInitial, speedReducer } from './Core';\nimport Header from './Frontend/Header';\nimport { useReducer } from 'react';\nimport Table from './Frontend/Table';\n\nfunction App() {\n  const [curAlgorithm, setCurAlgorithm] = useReducer(algorithmReducer, initialAlgorithm);\n  const [curSysStatus, setCurSysStatus] = useReducer(sysStatusReducer, initialsysStatus);\n  const [curBomb, setCurBomb] = useReducer(bombReducer, bombInitial);\n  const [curSpeed, setCurSpeed] = useReducer(speedReducer, speedInitial);\n\n  return (\n    <div className=\"App\">\n      <speedContext.Provider value={{ get: curSpeed, set: setCurSpeed }}>\n        <bombContext.Provider value={{ get: curBomb, set: setCurBomb }}>\n          <sysStatusContext.Provider value={{ get: curSysStatus, set: setCurSysStatus }}>\n            <algorithmContext.Provider value={{ get: curAlgorithm, set: setCurAlgorithm }}>\n              <Header />\n            </algorithmContext.Provider>\n          </sysStatusContext.Provider>\n        </bombContext.Provider>\n      </speedContext.Provider>\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}